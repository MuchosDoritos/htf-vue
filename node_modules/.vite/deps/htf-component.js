// node_modules/htf-component/dist/htf/bundle.js
(() => {
  var t = { 911: (t2, e2, n2) => {
    "use strict";
    (self.webpackChunkhtf = self.webpackChunkhtf || []).push([[179], { 501: () => {
      function t3(t4) {
        return "function" == typeof t4;
      }
      function e3(t4) {
        const e4 = t4((t5) => {
          Error.call(t5), t5.stack = new Error().stack;
        });
        return e4.prototype = Object.create(Error.prototype), e4.prototype.constructor = e4, e4;
      }
      const r = e3((t4) => function(e4) {
        t4(this), this.message = e4 ? `${e4.length} errors occurred during unsubscription:
${e4.map((t5, e5) => `${e5 + 1}) ${t5.toString()}`).join("\n  ")}` : "", this.name = "UnsubscriptionError", this.errors = e4;
      });
      function s(t4, e4) {
        if (t4) {
          const n3 = t4.indexOf(e4);
          0 <= n3 && t4.splice(n3, 1);
        }
      }
      class o {
        constructor(t4) {
          this.initialTeardown = t4, this.closed = false, this._parentage = null, this._finalizers = null;
        }
        unsubscribe() {
          let e4;
          if (!this.closed) {
            this.closed = true;
            const { _parentage: n3 } = this;
            if (n3)
              if (this._parentage = null, Array.isArray(n3))
                for (const t4 of n3)
                  t4.remove(this);
              else
                n3.remove(this);
            const { initialTeardown: s2 } = this;
            if (t3(s2))
              try {
                s2();
              } catch (t4) {
                e4 = t4 instanceof r ? t4.errors : [t4];
              }
            const { _finalizers: o2 } = this;
            if (o2) {
              this._finalizers = null;
              for (const t4 of o2)
                try {
                  a(t4);
                } catch (t5) {
                  e4 = e4 != null ? e4 : [], t5 instanceof r ? e4 = [...e4, ...t5.errors] : e4.push(t5);
                }
            }
            if (e4)
              throw new r(e4);
          }
        }
        add(t4) {
          var e4;
          if (t4 && t4 !== this)
            if (this.closed)
              a(t4);
            else {
              if (t4 instanceof o) {
                if (t4.closed || t4._hasParent(this))
                  return;
                t4._addParent(this);
              }
              (this._finalizers = null !== (e4 = this._finalizers) && void 0 !== e4 ? e4 : []).push(t4);
            }
        }
        _hasParent(t4) {
          const { _parentage: e4 } = this;
          return e4 === t4 || Array.isArray(e4) && e4.includes(t4);
        }
        _addParent(t4) {
          const { _parentage: e4 } = this;
          this._parentage = Array.isArray(e4) ? (e4.push(t4), e4) : e4 ? [e4, t4] : t4;
        }
        _removeParent(t4) {
          const { _parentage: e4 } = this;
          e4 === t4 ? this._parentage = null : Array.isArray(e4) && s(e4, t4);
        }
        remove(t4) {
          const { _finalizers: e4 } = this;
          e4 && s(e4, t4), t4 instanceof o && t4._removeParent(this);
        }
      }
      o.EMPTY = (() => {
        const t4 = new o();
        return t4.closed = true, t4;
      })();
      const i = o.EMPTY;
      function l(e4) {
        return e4 instanceof o || e4 && "closed" in e4 && t3(e4.remove) && t3(e4.add) && t3(e4.unsubscribe);
      }
      function a(e4) {
        t3(e4) ? e4() : e4.unsubscribe();
      }
      const u = { onUnhandledError: null, onStoppedNotification: null, Promise: void 0, useDeprecatedSynchronousErrorHandling: false, useDeprecatedNextContext: false }, c = { setTimeout(t4, e4, ...n3) {
        const { delegate: r2 } = c;
        return (r2 == null ? void 0 : r2.setTimeout) ? r2.setTimeout(t4, e4, ...n3) : setTimeout(t4, e4, ...n3);
      }, clearTimeout(t4) {
        const { delegate: e4 } = c;
        return ((e4 == null ? void 0 : e4.clearTimeout) || clearTimeout)(t4);
      }, delegate: void 0 };
      function h(t4) {
        c.setTimeout(() => {
          const { onUnhandledError: e4 } = u;
          if (!e4)
            throw t4;
          e4(t4);
        });
      }
      function d() {
      }
      const f = p("C", void 0, void 0);
      function p(t4, e4, n3) {
        return { kind: t4, value: e4, error: n3 };
      }
      let g = null;
      function _(t4) {
        if (u.useDeprecatedSynchronousErrorHandling) {
          const e4 = !g;
          if (e4 && (g = { errorThrown: false, error: null }), t4(), e4) {
            const { errorThrown: t5, error: e5 } = g;
            if (g = null, t5)
              throw e5;
          }
        } else
          t4();
      }
      class y extends o {
        constructor(t4) {
          super(), this.isStopped = false, t4 ? (this.destination = t4, l(t4) && t4.add(this)) : this.destination = T;
        }
        static create(t4, e4, n3) {
          return new b(t4, e4, n3);
        }
        next(t4) {
          this.isStopped ? C(p("N", t4, void 0), this) : this._next(t4);
        }
        error(t4) {
          this.isStopped ? C(p("E", void 0, t4), this) : (this.isStopped = true, this._error(t4));
        }
        complete() {
          this.isStopped ? C(f, this) : (this.isStopped = true, this._complete());
        }
        unsubscribe() {
          this.closed || (this.isStopped = true, super.unsubscribe(), this.destination = null);
        }
        _next(t4) {
          this.destination.next(t4);
        }
        _error(t4) {
          try {
            this.destination.error(t4);
          } finally {
            this.unsubscribe();
          }
        }
        _complete() {
          try {
            this.destination.complete();
          } finally {
            this.unsubscribe();
          }
        }
      }
      const m = Function.prototype.bind;
      function v(t4, e4) {
        return m.call(t4, e4);
      }
      class w {
        constructor(t4) {
          this.partialObserver = t4;
        }
        next(t4) {
          const { partialObserver: e4 } = this;
          if (e4.next)
            try {
              e4.next(t4);
            } catch (t5) {
              k(t5);
            }
        }
        error(t4) {
          const { partialObserver: e4 } = this;
          if (e4.error)
            try {
              e4.error(t4);
            } catch (t5) {
              k(t5);
            }
          else
            k(t4);
        }
        complete() {
          const { partialObserver: t4 } = this;
          if (t4.complete)
            try {
              t4.complete();
            } catch (t5) {
              k(t5);
            }
        }
      }
      class b extends y {
        constructor(e4, n3, r2) {
          let s2;
          if (super(), t3(e4) || !e4)
            s2 = { next: e4 != null ? e4 : void 0, error: n3 != null ? n3 : void 0, complete: r2 != null ? r2 : void 0 };
          else {
            let t4;
            this && u.useDeprecatedNextContext ? (t4 = Object.create(e4), t4.unsubscribe = () => this.unsubscribe(), s2 = { next: e4.next && v(e4.next, t4), error: e4.error && v(e4.error, t4), complete: e4.complete && v(e4.complete, t4) }) : s2 = e4;
          }
          this.destination = new w(s2);
        }
      }
      function k(t4) {
        u.useDeprecatedSynchronousErrorHandling ? function(t5) {
          u.useDeprecatedSynchronousErrorHandling && g && (g.errorThrown = true, g.error = t5);
        }(t4) : h(t4);
      }
      function C(t4, e4) {
        const { onStoppedNotification: n3 } = u;
        n3 && c.setTimeout(() => n3(t4, e4));
      }
      const T = { closed: true, next: d, error: function(t4) {
        throw t4;
      }, complete: d }, E = "function" == typeof Symbol && Symbol.observable || "@@observable";
      function x(t4) {
        return t4;
      }
      let S = (() => {
        class e4 {
          constructor(t4) {
            t4 && (this._subscribe = t4);
          }
          lift(t4) {
            const n3 = new e4();
            return n3.source = this, n3.operator = t4, n3;
          }
          subscribe(e5, n3, r2) {
            const s2 = function(e6) {
              return e6 && e6 instanceof y || function(e7) {
                return e7 && t3(e7.next) && t3(e7.error) && t3(e7.complete);
              }(e6) && l(e6);
            }(e5) ? e5 : new b(e5, n3, r2);
            return _(() => {
              const { operator: t4, source: e6 } = this;
              s2.add(t4 ? t4.call(s2, e6) : e6 ? this._subscribe(s2) : this._trySubscribe(s2));
            }), s2;
          }
          _trySubscribe(t4) {
            try {
              return this._subscribe(t4);
            } catch (e5) {
              t4.error(e5);
            }
          }
          forEach(t4, e5) {
            return new (e5 = A(e5))((e6, n3) => {
              const r2 = new b({ next: (e7) => {
                try {
                  t4(e7);
                } catch (t5) {
                  n3(t5), r2.unsubscribe();
                }
              }, error: n3, complete: e6 });
              this.subscribe(r2);
            });
          }
          _subscribe(t4) {
            var e5;
            return null === (e5 = this.source) || void 0 === e5 ? void 0 : e5.subscribe(t4);
          }
          [E]() {
            return this;
          }
          pipe(...t4) {
            return function(t5) {
              return 0 === t5.length ? x : 1 === t5.length ? t5[0] : function(e5) {
                return t5.reduce((t6, e6) => e6(t6), e5);
              };
            }(t4)(this);
          }
          toPromise(t4) {
            return new (t4 = A(t4))((t5, e5) => {
              let n3;
              this.subscribe((t6) => n3 = t6, (t6) => e5(t6), () => t5(n3));
            });
          }
        }
        return e4.create = (t4) => new e4(t4), e4;
      })();
      function A(t4) {
        var e4;
        return null !== (e4 = t4 != null ? t4 : u.Promise) && void 0 !== e4 ? e4 : Promise;
      }
      const I = e3((t4) => function() {
        t4(this), this.name = "ObjectUnsubscribedError", this.message = "object unsubscribed";
      });
      let O = (() => {
        class t4 extends S {
          constructor() {
            super(), this.closed = false, this.currentObservers = null, this.observers = [], this.isStopped = false, this.hasError = false, this.thrownError = null;
          }
          lift(t5) {
            const e4 = new D(this, this);
            return e4.operator = t5, e4;
          }
          _throwIfClosed() {
            if (this.closed)
              throw new I();
          }
          next(t5) {
            _(() => {
              if (this._throwIfClosed(), !this.isStopped) {
                this.currentObservers || (this.currentObservers = Array.from(this.observers));
                for (const e4 of this.currentObservers)
                  e4.next(t5);
              }
            });
          }
          error(t5) {
            _(() => {
              if (this._throwIfClosed(), !this.isStopped) {
                this.hasError = this.isStopped = true, this.thrownError = t5;
                const { observers: e4 } = this;
                for (; e4.length; )
                  e4.shift().error(t5);
              }
            });
          }
          complete() {
            _(() => {
              if (this._throwIfClosed(), !this.isStopped) {
                this.isStopped = true;
                const { observers: t5 } = this;
                for (; t5.length; )
                  t5.shift().complete();
              }
            });
          }
          unsubscribe() {
            this.isStopped = this.closed = true, this.observers = this.currentObservers = null;
          }
          get observed() {
            var t5;
            return (null === (t5 = this.observers) || void 0 === t5 ? void 0 : t5.length) > 0;
          }
          _trySubscribe(t5) {
            return this._throwIfClosed(), super._trySubscribe(t5);
          }
          _subscribe(t5) {
            return this._throwIfClosed(), this._checkFinalizedStatuses(t5), this._innerSubscribe(t5);
          }
          _innerSubscribe(t5) {
            const { hasError: e4, isStopped: n3, observers: r2 } = this;
            return e4 || n3 ? i : (this.currentObservers = null, r2.push(t5), new o(() => {
              this.currentObservers = null, s(r2, t5);
            }));
          }
          _checkFinalizedStatuses(t5) {
            const { hasError: e4, thrownError: n3, isStopped: r2 } = this;
            e4 ? t5.error(n3) : r2 && t5.complete();
          }
          asObservable() {
            const t5 = new S();
            return t5.source = this, t5;
          }
        }
        return t4.create = (t5, e4) => new D(t5, e4), t4;
      })();
      class D extends O {
        constructor(t4, e4) {
          super(), this.destination = t4, this.source = e4;
        }
        next(t4) {
          var e4, n3;
          null === (n3 = null === (e4 = this.destination) || void 0 === e4 ? void 0 : e4.next) || void 0 === n3 || n3.call(e4, t4);
        }
        error(t4) {
          var e4, n3;
          null === (n3 = null === (e4 = this.destination) || void 0 === e4 ? void 0 : e4.error) || void 0 === n3 || n3.call(e4, t4);
        }
        complete() {
          var t4, e4;
          null === (e4 = null === (t4 = this.destination) || void 0 === t4 ? void 0 : t4.complete) || void 0 === e4 || e4.call(t4);
        }
        _subscribe(t4) {
          var e4, n3;
          return null !== (n3 = null === (e4 = this.source) || void 0 === e4 ? void 0 : e4.subscribe(t4)) && void 0 !== n3 ? n3 : i;
        }
      }
      function V(e4) {
        return (n3) => {
          if (function(e5) {
            return t3(e5 == null ? void 0 : e5.lift);
          }(n3))
            return n3.lift(function(t4) {
              try {
                return e4(t4, this);
              } catch (t5) {
                this.error(t5);
              }
            });
          throw new TypeError("Unable to lift unknown Observable type");
        };
      }
      function P(t4, e4, n3, r2, s2) {
        return new R(t4, e4, n3, r2, s2);
      }
      class R extends y {
        constructor(t4, e4, n3, r2, s2, o2) {
          super(t4), this.onFinalize = s2, this.shouldUnsubscribe = o2, this._next = e4 ? function(n4) {
            try {
              e4(n4);
            } catch (e5) {
              t4.error(e5);
            }
          } : super._next, this._error = r2 ? function(e5) {
            try {
              r2(e5);
            } catch (e6) {
              t4.error(e6);
            } finally {
              this.unsubscribe();
            }
          } : super._error, this._complete = n3 ? function() {
            try {
              n3();
            } catch (e5) {
              t4.error(e5);
            } finally {
              this.unsubscribe();
            }
          } : super._complete;
        }
        unsubscribe() {
          var t4;
          if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
            const { closed: e4 } = this;
            super.unsubscribe(), !e4 && (null === (t4 = this.onFinalize) || void 0 === t4 || t4.call(this));
          }
        }
      }
      function j(t4, e4) {
        return V((n3, r2) => {
          let s2 = 0;
          n3.subscribe(P(r2, (n4) => {
            r2.next(t4.call(e4, n4, s2++));
          }));
        });
      }
      function N(t4) {
        return this instanceof N ? (this.v = t4, this) : new N(t4);
      }
      "function" == typeof SuppressedError && SuppressedError;
      const F = (t4) => t4 && "number" == typeof t4.length && "function" != typeof t4;
      function H(e4) {
        return t3(e4 == null ? void 0 : e4.then);
      }
      function M(e4) {
        return t3(e4[E]);
      }
      function Z(e4) {
        return Symbol.asyncIterator && t3(e4 == null ? void 0 : e4[Symbol.asyncIterator]);
      }
      function L(t4) {
        return new TypeError(`You provided ${null !== t4 && "object" == typeof t4 ? "an invalid object" : `'${t4}'`} where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`);
      }
      const z = "function" == typeof Symbol && Symbol.iterator ? Symbol.iterator : "@@iterator";
      function B(e4) {
        return t3(e4 == null ? void 0 : e4[z]);
      }
      function U(t4) {
        return function(t5, e4, n3) {
          if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
          var r2, s2 = n3.apply(t5, e4 || []), o2 = [];
          return r2 = {}, i2("next"), i2("throw"), i2("return"), r2[Symbol.asyncIterator] = function() {
            return this;
          }, r2;
          function i2(t6) {
            s2[t6] && (r2[t6] = function(e5) {
              return new Promise(function(n4, r3) {
                o2.push([t6, e5, n4, r3]) > 1 || l2(t6, e5);
              });
            });
          }
          function l2(t6, e5) {
            try {
              !function(t7) {
                t7.value instanceof N ? Promise.resolve(t7.value.v).then(a2, u2) : c2(o2[0][2], t7);
              }(s2[t6](e5));
            } catch (t7) {
              c2(o2[0][3], t7);
            }
          }
          function a2(t6) {
            l2("next", t6);
          }
          function u2(t6) {
            l2("throw", t6);
          }
          function c2(t6, e5) {
            t6(e5), o2.shift(), o2.length && l2(o2[0][0], o2[0][1]);
          }
        }(this, arguments, function* () {
          const e4 = t4.getReader();
          try {
            for (; ; ) {
              const { value: t5, done: n3 } = yield N(e4.read());
              if (n3)
                return yield N(void 0);
              yield yield N(t5);
            }
          } finally {
            e4.releaseLock();
          }
        });
      }
      function q(e4) {
        return t3(e4 == null ? void 0 : e4.getReader);
      }
      function $(e4) {
        if (e4 instanceof S)
          return e4;
        if (null != e4) {
          if (M(e4))
            return function(e5) {
              return new S((n3) => {
                const r2 = e5[E]();
                if (t3(r2.subscribe))
                  return r2.subscribe(n3);
                throw new TypeError("Provided object does not correctly implement Symbol.observable");
              });
            }(e4);
          if (F(e4))
            return function(t4) {
              return new S((e5) => {
                for (let n3 = 0; n3 < t4.length && !e5.closed; n3++)
                  e5.next(t4[n3]);
                e5.complete();
              });
            }(e4);
          if (H(e4))
            return function(t4) {
              return new S((e5) => {
                t4.then((t5) => {
                  e5.closed || (e5.next(t5), e5.complete());
                }, (t5) => e5.error(t5)).then(null, h);
              });
            }(e4);
          if (Z(e4))
            return G(e4);
          if (B(e4))
            return function(t4) {
              return new S((e5) => {
                for (const n3 of t4)
                  if (e5.next(n3), e5.closed)
                    return;
                e5.complete();
              });
            }(e4);
          if (q(e4))
            return function(t4) {
              return G(U(t4));
            }(e4);
        }
        throw L(e4);
      }
      function G(t4) {
        return new S((e4) => {
          (function(t5, e5) {
            var n3, r2, s2, o2;
            return function(t6, e6, n4, r3) {
              return new (n4 || (n4 = Promise))(function(e7, s3) {
                function o3(t7) {
                  try {
                    l2(r3.next(t7));
                  } catch (t8) {
                    s3(t8);
                  }
                }
                function i2(t7) {
                  try {
                    l2(r3.throw(t7));
                  } catch (t8) {
                    s3(t8);
                  }
                }
                function l2(t7) {
                  t7.done ? e7(t7.value) : function(t8) {
                    return t8 instanceof n4 ? t8 : new n4(function(e8) {
                      e8(t8);
                    });
                  }(t7.value).then(o3, i2);
                }
                l2((r3 = r3.apply(t6, [])).next());
              });
            }(this, 0, void 0, function* () {
              try {
                for (n3 = function(t6) {
                  if (!Symbol.asyncIterator)
                    throw new TypeError("Symbol.asyncIterator is not defined.");
                  var e6, n4 = t6[Symbol.asyncIterator];
                  return n4 ? n4.call(t6) : (t6 = function(t7) {
                    var e7 = "function" == typeof Symbol && Symbol.iterator, n5 = e7 && t7[e7], r4 = 0;
                    if (n5)
                      return n5.call(t7);
                    if (t7 && "number" == typeof t7.length)
                      return { next: function() {
                        return t7 && r4 >= t7.length && (t7 = void 0), { value: t7 && t7[r4++], done: !t7 };
                      } };
                    throw new TypeError(e7 ? "Object is not iterable." : "Symbol.iterator is not defined.");
                  }(t6), e6 = {}, r3("next"), r3("throw"), r3("return"), e6[Symbol.asyncIterator] = function() {
                    return this;
                  }, e6);
                  function r3(n5) {
                    e6[n5] = t6[n5] && function(e7) {
                      return new Promise(function(r4, s3) {
                        !function(t7, e8, n6, r5) {
                          Promise.resolve(r5).then(function(e9) {
                            t7({ value: e9, done: n6 });
                          }, e8);
                        }(r4, s3, (e7 = t6[n5](e7)).done, e7.value);
                      });
                    };
                  }
                }(t5); !(r2 = yield n3.next()).done; )
                  if (e5.next(r2.value), e5.closed)
                    return;
              } catch (t6) {
                s2 = { error: t6 };
              } finally {
                try {
                  r2 && !r2.done && (o2 = n3.return) && (yield o2.call(n3));
                } finally {
                  if (s2)
                    throw s2.error;
                }
              }
              e5.complete();
            });
          })(t4, e4).catch((t5) => e4.error(t5));
        });
      }
      function W(t4, e4, n3, r2 = 0, s2 = false) {
        const o2 = e4.schedule(function() {
          n3(), s2 ? t4.add(this.schedule(null, r2)) : this.unsubscribe();
        }, r2);
        if (t4.add(o2), !s2)
          return o2;
      }
      function Q(e4, n3, r2 = 1 / 0) {
        return t3(n3) ? Q((t4, r3) => j((e5, s2) => n3(t4, e5, r3, s2))($(e4(t4, r3))), r2) : ("number" == typeof n3 && (r2 = n3), V((t4, n4) => function(t5, e5, n5, r3, s2, o2, i2, l2) {
          const a2 = [];
          let u2 = 0, c2 = 0, h2 = false;
          const d2 = () => {
            h2 && !a2.length && !u2 && e5.complete();
          }, f2 = (t6) => u2 < r3 ? p2(t6) : a2.push(t6), p2 = (t6) => {
            u2++;
            let s3 = false;
            $(n5(t6, c2++)).subscribe(P(e5, (t7) => {
              e5.next(t7);
            }, () => {
              s3 = true;
            }, void 0, () => {
              if (s3)
                try {
                  for (u2--; a2.length && u2 < r3; ) {
                    const t7 = a2.shift();
                    p2(t7);
                  }
                  d2();
                } catch (t7) {
                  e5.error(t7);
                }
            }));
          };
          return t5.subscribe(P(e5, f2, () => {
            h2 = true, d2();
          })), () => {
          };
        }(t4, n4, e4, r2)));
      }
      const K = new S((t4) => t4.complete());
      function X(t4) {
        return t4[t4.length - 1];
      }
      function J(e4) {
        return function(e5) {
          return e5 && t3(e5.schedule);
        }(X(e4)) ? e4.pop() : void 0;
      }
      function Y(t4, e4 = 0) {
        return V((n3, r2) => {
          n3.subscribe(P(r2, (n4) => W(r2, t4, () => r2.next(n4), e4), () => W(r2, t4, () => r2.complete(), e4), (n4) => W(r2, t4, () => r2.error(n4), e4)));
        });
      }
      function tt(t4, e4 = 0) {
        return V((n3, r2) => {
          r2.add(t4.schedule(() => n3.subscribe(r2), e4));
        });
      }
      function et(t4, e4) {
        if (!t4)
          throw new Error("Iterable cannot be null");
        return new S((n3) => {
          W(n3, e4, () => {
            const r2 = t4[Symbol.asyncIterator]();
            W(n3, e4, () => {
              r2.next().then((t5) => {
                t5.done ? n3.complete() : n3.next(t5.value);
              });
            }, 0, true);
          });
        });
      }
      function nt(e4, n3) {
        return n3 ? function(e5, n4) {
          if (null != e5) {
            if (M(e5))
              return function(t4, e6) {
                return $(t4).pipe(tt(e6), Y(e6));
              }(e5, n4);
            if (F(e5))
              return function(t4, e6) {
                return new S((n5) => {
                  let r2 = 0;
                  return e6.schedule(function() {
                    r2 === t4.length ? n5.complete() : (n5.next(t4[r2++]), n5.closed || this.schedule());
                  });
                });
              }(e5, n4);
            if (H(e5))
              return function(t4, e6) {
                return $(t4).pipe(tt(e6), Y(e6));
              }(e5, n4);
            if (Z(e5))
              return et(e5, n4);
            if (B(e5))
              return function(e6, n5) {
                return new S((r2) => {
                  let s2;
                  return W(r2, n5, () => {
                    s2 = e6[z](), W(r2, n5, () => {
                      let t4, e7;
                      try {
                        ({ value: t4, done: e7 } = s2.next());
                      } catch (t5) {
                        return void r2.error(t5);
                      }
                      e7 ? r2.complete() : r2.next(t4);
                    }, 0, true);
                  }), () => t3(s2 == null ? void 0 : s2.return) && s2.return();
                });
              }(e5, n4);
            if (q(e5))
              return function(t4, e6) {
                return et(U(t4), e6);
              }(e5, n4);
          }
          throw L(e5);
        }(e4, n3) : $(e4);
      }
      function rt(...t4) {
        const e4 = J(t4), n3 = function(t5, e5) {
          return "number" == typeof X(t5) ? t5.pop() : 1 / 0;
        }(t4), r2 = t4;
        return r2.length ? 1 === r2.length ? $(r2[0]) : function(t5 = 1 / 0) {
          return Q(x, t5);
        }(n3)(nt(r2, e4)) : K;
      }
      function st(t4, e4, ...n3) {
        if (true === e4)
          return void t4();
        if (false === e4)
          return;
        const r2 = new b({ next: () => {
          r2.unsubscribe(), t4();
        } });
        return e4(...n3).subscribe(r2);
      }
      function ot(t4) {
        for (let e4 in t4)
          if (t4[e4] === ot)
            return e4;
        throw Error("Could not find renamed property on target object.");
      }
      function it(t4, e4) {
        for (const n3 in e4)
          e4.hasOwnProperty(n3) && !t4.hasOwnProperty(n3) && (t4[n3] = e4[n3]);
      }
      function lt(t4) {
        if ("string" == typeof t4)
          return t4;
        if (Array.isArray(t4))
          return "[" + t4.map(lt).join(", ") + "]";
        if (null == t4)
          return "" + t4;
        if (t4.overriddenName)
          return `${t4.overriddenName}`;
        if (t4.name)
          return `${t4.name}`;
        const e4 = t4.toString();
        if (null == e4)
          return "" + e4;
        const n3 = e4.indexOf("\n");
        return -1 === n3 ? e4 : e4.substring(0, n3);
      }
      function at(t4, e4) {
        return null == t4 || "" === t4 ? null === e4 ? "" : e4 : null == e4 || "" === e4 ? t4 : t4 + " " + e4;
      }
      const ut = ot({ __forward_ref__: ot });
      function ct(t4) {
        return t4.__forward_ref__ = ct, t4.toString = function() {
          return lt(this());
        }, t4;
      }
      function ht(t4) {
        return dt(t4) ? t4() : t4;
      }
      function dt(t4) {
        return "function" == typeof t4 && t4.hasOwnProperty(ut) && t4.__forward_ref__ === ct;
      }
      class ft extends Error {
        constructor(t4, e4) {
          super(function(t5, e5) {
            return `NG0${Math.abs(t5)}${e5 ? ": " + e5.trim() : ""}`;
          }(t4, e4)), this.code = t4;
        }
      }
      function pt(t4) {
        return "string" == typeof t4 ? t4 : null == t4 ? "" : String(t4);
      }
      function gt(t4, e4) {
        throw new ft(-201, false);
      }
      function _t(t4) {
        return { token: t4.token, providedIn: t4.providedIn || null, factory: t4.factory, value: void 0 };
      }
      function yt(t4) {
        return { providers: t4.providers || [], imports: t4.imports || [] };
      }
      function mt(t4) {
        return vt(t4, bt) || vt(t4, Ct);
      }
      function vt(t4, e4) {
        return t4.hasOwnProperty(e4) ? t4[e4] : null;
      }
      function wt(t4) {
        return t4 && (t4.hasOwnProperty(kt) || t4.hasOwnProperty(Tt)) ? t4[kt] : null;
      }
      const bt = ot({ \u0275prov: ot }), kt = ot({ \u0275inj: ot }), Ct = ot({ ngInjectableDef: ot }), Tt = ot({ ngInjectorDef: ot });
      var Et = ((Et = Et || {})[Et.Default = 0] = "Default", Et[Et.Host = 1] = "Host", Et[Et.Self = 2] = "Self", Et[Et.SkipSelf = 4] = "SkipSelf", Et[Et.Optional = 8] = "Optional", Et);
      let xt;
      function St(t4) {
        const e4 = xt;
        return xt = t4, e4;
      }
      function At(t4, e4, n3) {
        const r2 = mt(t4);
        return r2 && "root" == r2.providedIn ? void 0 === r2.value ? r2.value = r2.factory() : r2.value : n3 & Et.Optional ? null : void 0 !== e4 ? e4 : void gt(lt(t4));
      }
      function It(t4) {
        return { toString: t4 }.toString();
      }
      var Ot, Dt = ((Dt = Dt || {})[Dt.OnPush = 0] = "OnPush", Dt[Dt.Default = 1] = "Default", Dt), Vt = ((Ot = Vt || (Vt = {}))[Ot.Emulated = 0] = "Emulated", Ot[Ot.None = 2] = "None", Ot[Ot.ShadowDom = 3] = "ShadowDom", Vt);
      const Pt = typeof globalThis < "u" && globalThis || typeof n2.g < "u" && n2.g || typeof window < "u" && window || typeof self < "u" && typeof WorkerGlobalScope < "u" && self instanceof WorkerGlobalScope && self, Rt = {}, jt = [], Nt = ot({ \u0275cmp: ot }), Ft = ot({ \u0275dir: ot }), Ht = ot({ \u0275pipe: ot }), Mt = ot({ \u0275mod: ot }), Zt = ot({ \u0275fac: ot }), Lt = ot({ __NG_ELEMENT_ID__: ot });
      let zt = 0;
      function Bt(t4) {
        return It(() => {
          const e4 = true === t4.standalone, n3 = {}, r2 = { type: t4.type, providersResolver: null, decls: t4.decls, vars: t4.vars, factory: null, template: t4.template || null, consts: t4.consts || null, ngContentSelectors: t4.ngContentSelectors, hostBindings: t4.hostBindings || null, hostVars: t4.hostVars || 0, hostAttrs: t4.hostAttrs || null, contentQueries: t4.contentQueries || null, declaredInputs: n3, inputs: null, outputs: null, exportAs: t4.exportAs || null, onPush: t4.changeDetection === Dt.OnPush, directiveDefs: null, pipeDefs: null, standalone: e4, dependencies: e4 && t4.dependencies || null, getStandaloneInjector: null, selectors: t4.selectors || jt, viewQuery: t4.viewQuery || null, features: t4.features || null, data: t4.data || {}, encapsulation: t4.encapsulation || Vt.Emulated, id: "c" + zt++, styles: t4.styles || jt, _: null, setInput: null, schemas: t4.schemas || null, tView: null }, s2 = t4.dependencies, o2 = t4.features;
          return r2.inputs = Gt(t4.inputs, n3), r2.outputs = Gt(t4.outputs), o2 && o2.forEach((t5) => t5(r2)), r2.directiveDefs = s2 ? () => ("function" == typeof s2 ? s2() : s2).map(Ut).filter(qt) : null, r2.pipeDefs = s2 ? () => ("function" == typeof s2 ? s2() : s2).map(Xt).filter(qt) : null, r2;
        });
      }
      function Ut(t4) {
        return Qt(t4) || Kt(t4);
      }
      function qt(t4) {
        return null !== t4;
      }
      function $t(t4) {
        return It(() => ({ type: t4.type, bootstrap: t4.bootstrap || jt, declarations: t4.declarations || jt, imports: t4.imports || jt, exports: t4.exports || jt, transitiveCompileScopes: null, schemas: t4.schemas || null, id: t4.id || null }));
      }
      function Gt(t4, e4) {
        if (null == t4)
          return Rt;
        const n3 = {};
        for (const r2 in t4)
          if (t4.hasOwnProperty(r2)) {
            let s2 = t4[r2], o2 = s2;
            Array.isArray(s2) && (o2 = s2[1], s2 = s2[0]), n3[s2] = r2, e4 && (e4[s2] = o2);
          }
        return n3;
      }
      const Wt = Bt;
      function Qt(t4) {
        return t4[Nt] || null;
      }
      function Kt(t4) {
        return t4[Ft] || null;
      }
      function Xt(t4) {
        return t4[Ht] || null;
      }
      const Jt = 11, Yt = 22;
      function te(t4) {
        return Array.isArray(t4) && "object" == typeof t4[1];
      }
      function ee(t4) {
        return Array.isArray(t4) && true === t4[1];
      }
      function ne(t4) {
        return 0 != (8 & t4.flags);
      }
      function re(t4) {
        return 2 == (2 & t4.flags);
      }
      function se(t4) {
        return 1 == (1 & t4.flags);
      }
      function oe(t4) {
        return null !== t4.template;
      }
      function ie(t4) {
        return 0 != (256 & t4[2]);
      }
      function le(t4, e4) {
        return t4.hasOwnProperty(Zt) ? t4[Zt] : null;
      }
      class ae {
        constructor(t4, e4, n3) {
          this.previousValue = t4, this.currentValue = e4, this.firstChange = n3;
        }
        isFirstChange() {
          return this.firstChange;
        }
      }
      function ue() {
        return ce;
      }
      function ce(t4) {
        return t4.type.prototype.ngOnChanges && (t4.setInput = de), he;
      }
      function he() {
        const t4 = pe(this), e4 = t4 == null ? void 0 : t4.current;
        if (e4) {
          const n3 = t4.previous;
          if (n3 === Rt)
            t4.previous = e4;
          else
            for (let t5 in e4)
              n3[t5] = e4[t5];
          t4.current = null, this.ngOnChanges(e4);
        }
      }
      function de(t4, e4, n3, r2) {
        const s2 = pe(t4) || function(t5, e5) {
          return t5[fe] = e5;
        }(t4, { previous: Rt, current: null }), o2 = s2.current || (s2.current = {}), i2 = s2.previous, l2 = this.declaredInputs[n3], a2 = i2[l2];
        o2[l2] = new ae(a2 && a2.currentValue, e4, i2 === Rt), t4[r2] = e4;
      }
      ue.ngInherit = true;
      const fe = "__ngSimpleChanges__";
      function pe(t4) {
        return t4[fe] || null;
      }
      function ge(t4) {
        for (; Array.isArray(t4); )
          t4 = t4[0];
        return t4;
      }
      function _e(t4, e4) {
        return ge(e4[t4]);
      }
      function ye(t4, e4) {
        return ge(e4[t4.index]);
      }
      function me(t4, e4) {
        return t4.data[e4];
      }
      function ve(t4, e4) {
        const n3 = e4[t4];
        return te(n3) ? n3 : n3[0];
      }
      function we(t4) {
        return 64 == (64 & t4[2]);
      }
      function be(t4, e4) {
        return null == e4 ? null : t4[e4];
      }
      function ke(t4) {
        t4[18] = 0;
      }
      function Ce(t4, e4) {
        t4[5] += e4;
        let n3 = t4, r2 = t4[3];
        for (; null !== r2 && (1 === e4 && 1 === n3[5] || -1 === e4 && 0 === n3[5]); )
          r2[5] += e4, n3 = r2, r2 = r2[3];
      }
      const Te = { lFrame: ze(null), bindingsEnabled: true };
      function Ee() {
        return Te.bindingsEnabled;
      }
      function xe() {
        return Te.lFrame.lView;
      }
      function Se() {
        return Te.lFrame.tView;
      }
      function Ae(t4) {
        return Te.lFrame.contextLView = t4, t4[8];
      }
      function Ie(t4) {
        return Te.lFrame.contextLView = null, t4;
      }
      function Oe() {
        let t4 = De();
        for (; null !== t4 && 64 === t4.type; )
          t4 = t4.parent;
        return t4;
      }
      function De() {
        return Te.lFrame.currentTNode;
      }
      function Ve(t4, e4) {
        const n3 = Te.lFrame;
        n3.currentTNode = t4, n3.isParent = e4;
      }
      function Pe() {
        return Te.lFrame.isParent;
      }
      function Re() {
        return Te.lFrame.bindingIndex++;
      }
      function je(t4, e4) {
        const n3 = Te.lFrame;
        n3.bindingIndex = n3.bindingRootIndex = t4, Ne(e4);
      }
      function Ne(t4) {
        Te.lFrame.currentDirectiveIndex = t4;
      }
      function Fe(t4) {
        Te.lFrame.currentQueryIndex = t4;
      }
      function He(t4) {
        const e4 = t4[1];
        return 2 === e4.type ? e4.declTNode : 1 === e4.type ? t4[6] : null;
      }
      function Me(t4, e4, n3) {
        if (n3 & Et.SkipSelf) {
          let r3 = e4, s2 = t4;
          for (; r3 = r3.parent, !(null !== r3 || n3 & Et.Host || (r3 = He(s2), null === r3 || (s2 = s2[15], 10 & r3.type))); )
            ;
          if (null === r3)
            return false;
          e4 = r3, t4 = s2;
        }
        const r2 = Te.lFrame = Le();
        return r2.currentTNode = e4, r2.lView = t4, true;
      }
      function Ze(t4) {
        const e4 = Le(), n3 = t4[1];
        Te.lFrame = e4, e4.currentTNode = n3.firstChild, e4.lView = t4, e4.tView = n3, e4.contextLView = t4, e4.bindingIndex = n3.bindingStartIndex, e4.inI18n = false;
      }
      function Le() {
        const t4 = Te.lFrame, e4 = null === t4 ? null : t4.child;
        return null === e4 ? ze(t4) : e4;
      }
      function ze(t4) {
        const e4 = { currentTNode: null, isParent: true, lView: null, tView: null, selectedIndex: -1, contextLView: null, elementDepthCount: 0, currentNamespace: null, currentDirectiveIndex: -1, bindingRootIndex: -1, bindingIndex: -1, currentQueryIndex: 0, parent: t4, child: null, inI18n: false };
        return null !== t4 && (t4.child = e4), e4;
      }
      function Be() {
        const t4 = Te.lFrame;
        return Te.lFrame = t4.parent, t4.currentTNode = null, t4.lView = null, t4;
      }
      const Ue = Be;
      function qe() {
        const t4 = Be();
        t4.isParent = true, t4.tView = null, t4.selectedIndex = -1, t4.contextLView = null, t4.elementDepthCount = 0, t4.currentDirectiveIndex = -1, t4.currentNamespace = null, t4.bindingRootIndex = -1, t4.bindingIndex = -1, t4.currentQueryIndex = 0;
      }
      function $e() {
        return Te.lFrame.selectedIndex;
      }
      function Ge(t4) {
        Te.lFrame.selectedIndex = t4;
      }
      function We(t4, e4) {
        for (let n3 = e4.directiveStart, r2 = e4.directiveEnd; n3 < r2; n3++) {
          const e5 = t4.data[n3].type.prototype, { ngAfterContentInit: r3, ngAfterContentChecked: s2, ngAfterViewInit: o2, ngAfterViewChecked: i2, ngOnDestroy: l2 } = e5;
          r3 && (t4.contentHooks || (t4.contentHooks = [])).push(-n3, r3), s2 && ((t4.contentHooks || (t4.contentHooks = [])).push(n3, s2), (t4.contentCheckHooks || (t4.contentCheckHooks = [])).push(n3, s2)), o2 && (t4.viewHooks || (t4.viewHooks = [])).push(-n3, o2), i2 && ((t4.viewHooks || (t4.viewHooks = [])).push(n3, i2), (t4.viewCheckHooks || (t4.viewCheckHooks = [])).push(n3, i2)), null != l2 && (t4.destroyHooks || (t4.destroyHooks = [])).push(n3, l2);
        }
      }
      function Qe(t4, e4, n3) {
        Je(t4, e4, 3, n3);
      }
      function Ke(t4, e4, n3, r2) {
        (3 & t4[2]) === n3 && Je(t4, e4, n3, r2);
      }
      function Xe(t4, e4) {
        let n3 = t4[2];
        (3 & n3) === e4 && (n3 &= 2047, n3 += 1, t4[2] = n3);
      }
      function Je(t4, e4, n3, r2) {
        const s2 = r2 != null ? r2 : -1, o2 = e4.length - 1;
        let i2 = 0;
        for (let l2 = void 0 !== r2 ? 65535 & t4[18] : 0; l2 < o2; l2++)
          if ("number" == typeof e4[l2 + 1]) {
            if (i2 = e4[l2], null != r2 && i2 >= r2)
              break;
          } else
            e4[l2] < 0 && (t4[18] += 65536), (i2 < s2 || -1 == s2) && (Ye(t4, n3, e4, l2), t4[18] = (4294901760 & t4[18]) + l2 + 2), l2++;
      }
      function Ye(t4, e4, n3, r2) {
        const s2 = n3[r2] < 0, o2 = n3[r2 + 1], i2 = t4[s2 ? -n3[r2] : n3[r2]];
        if (s2) {
          if (t4[2] >> 11 < t4[18] >> 16 && (3 & t4[2]) === e4) {
            t4[2] += 2048;
            try {
              o2.call(i2);
            } finally {
            }
          }
        } else
          try {
            o2.call(i2);
          } finally {
          }
      }
      class tn {
        constructor(t4, e4, n3) {
          this.factory = t4, this.resolving = false, this.canSeeViewProviders = e4, this.injectImpl = n3;
        }
      }
      function en(t4, e4, n3) {
        let r2 = 0;
        for (; r2 < n3.length; ) {
          const s2 = n3[r2];
          if ("number" == typeof s2) {
            if (0 !== s2)
              break;
            r2++;
            const o2 = n3[r2++], i2 = n3[r2++], l2 = n3[r2++];
            t4.setAttribute(e4, i2, l2, o2);
          } else {
            const o2 = s2, i2 = n3[++r2];
            rn(o2) ? t4.setProperty(e4, o2, i2) : t4.setAttribute(e4, o2, i2), r2++;
          }
        }
        return r2;
      }
      function nn(t4) {
        return 3 === t4 || 4 === t4 || 6 === t4;
      }
      function rn(t4) {
        return 64 === t4.charCodeAt(0);
      }
      function sn(t4, e4) {
        if (null !== e4 && 0 !== e4.length)
          if (null === t4 || 0 === t4.length)
            t4 = e4.slice();
          else {
            let n3 = -1;
            for (let r2 = 0; r2 < e4.length; r2++) {
              const s2 = e4[r2];
              "number" == typeof s2 ? n3 = s2 : 0 === n3 || on(t4, n3, s2, null, -1 === n3 || 2 === n3 ? e4[++r2] : null);
            }
          }
        return t4;
      }
      function on(t4, e4, n3, r2, s2) {
        let o2 = 0, i2 = t4.length;
        if (-1 === e4)
          i2 = -1;
        else
          for (; o2 < t4.length; ) {
            const n4 = t4[o2++];
            if ("number" == typeof n4) {
              if (n4 === e4) {
                i2 = -1;
                break;
              }
              if (n4 > e4) {
                i2 = o2 - 1;
                break;
              }
            }
          }
        for (; o2 < t4.length; ) {
          const e5 = t4[o2];
          if ("number" == typeof e5)
            break;
          if (e5 === n3) {
            if (null === r2)
              return void (null !== s2 && (t4[o2 + 1] = s2));
            if (r2 === t4[o2 + 1])
              return void (t4[o2 + 2] = s2);
          }
          o2++, null !== r2 && o2++, null !== s2 && o2++;
        }
        -1 !== i2 && (t4.splice(i2, 0, e4), o2 = i2 + 1), t4.splice(o2++, 0, n3), null !== r2 && t4.splice(o2++, 0, r2), null !== s2 && t4.splice(o2++, 0, s2);
      }
      function ln(t4) {
        return -1 !== t4;
      }
      function an(t4) {
        return 32767 & t4;
      }
      function un(t4, e4) {
        let n3 = function(t5) {
          return t5 >> 16;
        }(t4), r2 = e4;
        for (; n3 > 0; )
          r2 = r2[15], n3--;
        return r2;
      }
      let cn = true;
      function hn(t4) {
        const e4 = cn;
        return cn = t4, e4;
      }
      let dn = 0;
      const fn = {};
      function pn(t4, e4) {
        const n3 = _n(t4, e4);
        if (-1 !== n3)
          return n3;
        const r2 = e4[1];
        r2.firstCreatePass && (t4.injectorIndex = e4.length, gn(r2.data, t4), gn(e4, null), gn(r2.blueprint, null));
        const s2 = yn(t4, e4), o2 = t4.injectorIndex;
        if (ln(s2)) {
          const t5 = an(s2), n4 = un(s2, e4), r3 = n4[1].data;
          for (let s3 = 0; s3 < 8; s3++)
            e4[o2 + s3] = n4[t5 + s3] | r3[t5 + s3];
        }
        return e4[o2 + 8] = s2, o2;
      }
      function gn(t4, e4) {
        t4.push(0, 0, 0, 0, 0, 0, 0, 0, e4);
      }
      function _n(t4, e4) {
        return -1 === t4.injectorIndex || t4.parent && t4.parent.injectorIndex === t4.injectorIndex || null === e4[t4.injectorIndex + 8] ? -1 : t4.injectorIndex;
      }
      function yn(t4, e4) {
        if (t4.parent && -1 !== t4.parent.injectorIndex)
          return t4.parent.injectorIndex;
        let n3 = 0, r2 = null, s2 = e4;
        for (; null !== s2; ) {
          if (r2 = On(s2), null === r2)
            return -1;
          if (n3++, s2 = s2[15], -1 !== r2.injectorIndex)
            return r2.injectorIndex | n3 << 16;
        }
        return -1;
      }
      function mn(t4, e4, n3) {
        !function(t5, e5, n4) {
          let r2;
          "string" == typeof n4 ? r2 = n4.charCodeAt(0) || 0 : n4.hasOwnProperty(Lt) && (r2 = n4[Lt]), null == r2 && (r2 = n4[Lt] = dn++);
          const s2 = 255 & r2;
          e5.data[t5 + (s2 >> 5)] |= 1 << s2;
        }(t4, e4, n3);
      }
      function vn(t4, e4, n3) {
        if (n3 & Et.Optional || void 0 !== t4)
          return t4;
        gt();
      }
      function wn(t4, e4, n3, r2) {
        if (n3 & Et.Optional && void 0 === r2 && (r2 = null), 0 == (n3 & (Et.Self | Et.Host))) {
          const s2 = t4[9], o2 = St(void 0);
          try {
            return s2 ? s2.get(e4, r2, n3 & Et.Optional) : At(e4, r2, n3 & Et.Optional);
          } finally {
            St(o2);
          }
        }
        return vn(r2, 0, n3);
      }
      function bn(t4, e4, n3, r2 = Et.Default, s2) {
        if (null !== t4) {
          if (1024 & e4[2]) {
            const s4 = function(t5, e5, n4, r3, s5) {
              let o2 = t5, i2 = e5;
              for (; null !== o2 && null !== i2 && 1024 & i2[2] && !(256 & i2[2]); ) {
                const t6 = kn(o2, i2, n4, r3 | Et.Self, fn);
                if (t6 !== fn)
                  return t6;
                let e6 = o2.parent;
                if (!e6) {
                  const t7 = i2[21];
                  if (t7) {
                    const e7 = t7.get(n4, fn, r3);
                    if (e7 !== fn)
                      return e7;
                  }
                  e6 = On(i2), i2 = i2[15];
                }
                o2 = e6;
              }
              return s5;
            }(t4, e4, n3, r2, fn);
            if (s4 !== fn)
              return s4;
          }
          const s3 = kn(t4, e4, n3, r2, fn);
          if (s3 !== fn)
            return s3;
        }
        return wn(e4, n3, r2, s2);
      }
      function kn(t4, e4, n3, r2, s2) {
        const o2 = function(t5) {
          if ("string" == typeof t5)
            return t5.charCodeAt(0) || 0;
          const e5 = t5.hasOwnProperty(Lt) ? t5[Lt] : void 0;
          return "number" == typeof e5 ? e5 >= 0 ? 255 & e5 : An : e5;
        }(n3);
        if ("function" == typeof o2) {
          if (!Me(e4, t4, r2))
            return r2 & Et.Host ? vn(s2, 0, r2) : wn(e4, n3, r2, s2);
          try {
            const t5 = o2(r2);
            if (null != t5 || r2 & Et.Optional)
              return t5;
            gt();
          } finally {
            Ue();
          }
        } else if ("number" == typeof o2) {
          let s3 = null, i2 = _n(t4, e4), l2 = -1, a2 = r2 & Et.Host ? e4[16][6] : null;
          for ((-1 === i2 || r2 & Et.SkipSelf) && (l2 = -1 === i2 ? yn(t4, e4) : e4[i2 + 8], -1 !== l2 && xn(r2, false) ? (s3 = e4[1], i2 = an(l2), e4 = un(l2, e4)) : i2 = -1); -1 !== i2; ) {
            const t5 = e4[1];
            if (En(o2, i2, t5.data)) {
              const t6 = Cn(i2, e4, n3, s3, r2, a2);
              if (t6 !== fn)
                return t6;
            }
            l2 = e4[i2 + 8], -1 !== l2 && xn(r2, e4[1].data[i2 + 8] === a2) && En(o2, i2, e4) ? (s3 = t5, i2 = an(l2), e4 = un(l2, e4)) : i2 = -1;
          }
        }
        return s2;
      }
      function Cn(t4, e4, n3, r2, s2, o2) {
        const i2 = e4[1], l2 = i2.data[t4 + 8], a2 = function(t5, e5, n4, r3, s3) {
          const o3 = t5.providerIndexes, i3 = e5.data, l3 = 1048575 & o3, a3 = t5.directiveStart, u2 = o3 >> 20, c2 = s3 ? l3 + u2 : t5.directiveEnd;
          for (let t6 = r3 ? l3 : l3 + u2; t6 < c2; t6++) {
            const e6 = i3[t6];
            if (t6 < a3 && n4 === e6 || t6 >= a3 && e6.type === n4)
              return t6;
          }
          if (s3) {
            const t6 = i3[a3];
            if (t6 && oe(t6) && t6.type === n4)
              return a3;
          }
          return null;
        }(l2, i2, n3, null == r2 ? re(l2) && cn : r2 != i2 && 0 != (3 & l2.type), s2 & Et.Host && o2 === l2);
        return null !== a2 ? Tn(e4, i2, a2, l2) : fn;
      }
      function Tn(t4, e4, n3, r2) {
        let s2 = t4[n3];
        const o2 = e4.data;
        if (function(t5) {
          return t5 instanceof tn;
        }(s2)) {
          const i2 = s2;
          i2.resolving && function(t5, e5) {
            throw new ft(-200, `Circular dependency in DI detected for ${t5}`);
          }(function(t5) {
            return "function" == typeof t5 ? t5.name || t5.toString() : "object" == typeof t5 && null != t5 && "function" == typeof t5.type ? t5.type.name || t5.type.toString() : pt(t5);
          }(o2[n3]));
          const l2 = hn(i2.canSeeViewProviders);
          i2.resolving = true;
          const a2 = i2.injectImpl ? St(i2.injectImpl) : null;
          Me(t4, r2, Et.Default);
          try {
            s2 = t4[n3] = i2.factory(void 0, o2, t4, r2), e4.firstCreatePass && n3 >= r2.directiveStart && function(t5, e5, n4) {
              const { ngOnChanges: r3, ngOnInit: s3, ngDoCheck: o3 } = e5.type.prototype;
              if (r3) {
                const r4 = ce(e5);
                (n4.preOrderHooks || (n4.preOrderHooks = [])).push(t5, r4), (n4.preOrderCheckHooks || (n4.preOrderCheckHooks = [])).push(t5, r4);
              }
              s3 && (n4.preOrderHooks || (n4.preOrderHooks = [])).push(0 - t5, s3), o3 && ((n4.preOrderHooks || (n4.preOrderHooks = [])).push(t5, o3), (n4.preOrderCheckHooks || (n4.preOrderCheckHooks = [])).push(t5, o3));
            }(n3, o2[n3], e4);
          } finally {
            null !== a2 && St(a2), hn(l2), i2.resolving = false, Ue();
          }
        }
        return s2;
      }
      function En(t4, e4, n3) {
        return !!(n3[e4 + (t4 >> 5)] & 1 << t4);
      }
      function xn(t4, e4) {
        return !(t4 & Et.Self || t4 & Et.Host && e4);
      }
      class Sn {
        constructor(t4, e4) {
          this._tNode = t4, this._lView = e4;
        }
        get(t4, e4, n3) {
          return bn(this._tNode, this._lView, t4, n3, e4);
        }
      }
      function An() {
        return new Sn(Oe(), xe());
      }
      function In(t4) {
        return dt(t4) ? () => {
          const e4 = In(ht(t4));
          return e4 && e4();
        } : le(t4);
      }
      function On(t4) {
        const e4 = t4[1], n3 = e4.type;
        return 2 === n3 ? e4.declTNode : 1 === n3 ? t4[6] : null;
      }
      const Dn = "__parameters__";
      function Vn(t4, e4, n3) {
        return It(() => {
          const r2 = function(t5) {
            return function(...e5) {
              if (t5) {
                const n4 = t5(...e5);
                for (const t6 in n4)
                  this[t6] = n4[t6];
              }
            };
          }(e4);
          function s2(...t5) {
            if (this instanceof s2)
              return r2.apply(this, t5), this;
            const e5 = new s2(...t5);
            return n4.annotation = e5, n4;
            function n4(t6, n5, r3) {
              const s3 = t6.hasOwnProperty(Dn) ? t6[Dn] : Object.defineProperty(t6, Dn, { value: [] })[Dn];
              for (; s3.length <= r3; )
                s3.push(null);
              return (s3[r3] = s3[r3] || []).push(e5), t6;
            }
          }
          return n3 && (s2.prototype = Object.create(n3.prototype)), s2.prototype.ngMetadataName = t4, s2.annotationCls = s2, s2;
        });
      }
      class Pn {
        constructor(t4, e4) {
          this._desc = t4, this.ngMetadataName = "InjectionToken", this.\u0275prov = void 0, "number" == typeof e4 ? this.__NG_ELEMENT_ID__ = e4 : void 0 !== e4 && (this.\u0275prov = _t({ token: this, providedIn: e4.providedIn || "root", factory: e4.factory }));
        }
        get multi() {
          return this;
        }
        toString() {
          return `InjectionToken ${this._desc}`;
        }
      }
      function Rn(t4, e4) {
        t4.forEach((t5) => Array.isArray(t5) ? Rn(t5, e4) : e4(t5));
      }
      function jn(t4, e4, n3) {
        e4 >= t4.length ? t4.push(n3) : t4.splice(e4, 0, n3);
      }
      function Nn(t4, e4) {
        return e4 >= t4.length - 1 ? t4.pop() : t4.splice(e4, 1)[0];
      }
      function Fn(t4, e4, n3) {
        let r2 = Mn(t4, e4);
        return r2 >= 0 ? t4[1 | r2] = n3 : (r2 = ~r2, function(t5, e5, n4, r3) {
          let s2 = t5.length;
          if (s2 == e5)
            t5.push(n4, r3);
          else if (1 === s2)
            t5.push(r3, t5[0]), t5[0] = n4;
          else {
            for (s2--, t5.push(t5[s2 - 1], t5[s2]); s2 > e5; )
              t5[s2] = t5[s2 - 2], s2--;
            t5[e5] = n4, t5[e5 + 1] = r3;
          }
        }(t4, r2, e4, n3)), r2;
      }
      function Hn(t4, e4) {
        const n3 = Mn(t4, e4);
        if (n3 >= 0)
          return t4[1 | n3];
      }
      function Mn(t4, e4) {
        return function(t5, e5, n3) {
          let r2 = 0, s2 = t5.length >> 1;
          for (; s2 !== r2; ) {
            const n4 = r2 + (s2 - r2 >> 1), o2 = t5[n4 << 1];
            if (e5 === o2)
              return n4 << 1;
            o2 > e5 ? s2 = n4 : r2 = n4 + 1;
          }
          return ~(s2 << 1);
        }(t4, e4);
      }
      const Zn = {}, Ln = "__NG_DI_FLAG__", zn = "ngTempTokenPath", Bn = /\n/gm, Un = "__source";
      let qn;
      function $n(t4) {
        const e4 = qn;
        return qn = t4, e4;
      }
      function Gn(t4, e4 = Et.Default) {
        if (void 0 === qn)
          throw new ft(-203, false);
        return null === qn ? At(t4, void 0, e4) : qn.get(t4, e4 & Et.Optional ? null : void 0, e4);
      }
      function Wn(t4, e4 = Et.Default) {
        return (xt || Gn)(ht(t4), e4);
      }
      function Qn(t4) {
        const e4 = [];
        for (let n3 = 0; n3 < t4.length; n3++) {
          const r2 = ht(t4[n3]);
          if (Array.isArray(r2)) {
            if (0 === r2.length)
              throw new ft(900, false);
            let t5, n4 = Et.Default;
            for (let e5 = 0; e5 < r2.length; e5++) {
              const s2 = r2[e5], o2 = Xn(s2);
              "number" == typeof o2 ? -1 === o2 ? t5 = s2.token : n4 |= o2 : t5 = s2;
            }
            e4.push(Wn(t5, n4));
          } else
            e4.push(Wn(r2));
        }
        return e4;
      }
      function Kn(t4, e4) {
        return t4[Ln] = e4, t4.prototype[Ln] = e4, t4;
      }
      function Xn(t4) {
        return t4[Ln];
      }
      const Jn = Kn(Vn("Optional"), 8), Yn = Kn(Vn("SkipSelf"), 4);
      var tr = ((tr = tr || {})[tr.Important = 1] = "Important", tr[tr.DashCase = 2] = "DashCase", tr);
      const er = /* @__PURE__ */ new Map();
      let nr = 0;
      const rr = "__ngContext__";
      function sr(t4, e4) {
        te(e4) ? (t4[rr] = e4[20], function(t5) {
          er.set(t5[20], t5);
        }(e4)) : t4[rr] = e4;
      }
      function or(t4, e4) {
        return (void 0)(t4, e4);
      }
      function ir(t4) {
        const e4 = t4[3];
        return ee(e4) ? e4[3] : e4;
      }
      function lr(t4) {
        return ur(t4[13]);
      }
      function ar(t4) {
        return ur(t4[4]);
      }
      function ur(t4) {
        for (; null !== t4 && !ee(t4); )
          t4 = t4[4];
        return t4;
      }
      function cr(t4, e4, n3, r2, s2) {
        if (null != r2) {
          let o2, i2 = false;
          ee(r2) ? o2 = r2 : te(r2) && (i2 = true, r2 = r2[0]);
          const l2 = ge(r2);
          0 === t4 && null !== n3 ? null == s2 ? yr(e4, n3, l2) : _r(e4, n3, l2, s2 || null, true) : 1 === t4 && null !== n3 ? _r(e4, n3, l2, s2 || null, true) : 2 === t4 ? function(t5, e5, n4) {
            const r3 = vr(t5, e5);
            r3 && function(t6, e6, n5, r4) {
              t6.removeChild(e6, n5, r4);
            }(t5, r3, e5, n4);
          }(e4, l2, i2) : 3 === t4 && e4.destroyNode(l2), null != o2 && function(t5, e5, n4, r3, s3) {
            const o3 = n4[7];
            o3 !== ge(n4) && cr(e5, t5, r3, o3, s3);
            for (let s4 = 10; s4 < n4.length; s4++) {
              const i3 = n4[s4];
              Sr(i3[1], i3, t5, e5, r3, o3);
            }
          }(e4, t4, o2, n3, s2);
        }
      }
      function hr(t4, e4, n3) {
        return t4.createElement(e4, n3);
      }
      function dr(t4, e4) {
        const n3 = t4[9], r2 = n3.indexOf(e4), s2 = e4[3];
        512 & e4[2] && (e4[2] &= -513, Ce(s2, -1)), n3.splice(r2, 1);
      }
      function fr(t4, e4) {
        if (t4.length <= 10)
          return;
        const n3 = 10 + e4, r2 = t4[n3];
        if (r2) {
          const s2 = r2[17];
          null !== s2 && s2 !== t4 && dr(s2, r2), e4 > 0 && (t4[n3 - 1][4] = r2[4]);
          const o2 = Nn(t4, 10 + e4);
          !function(t5, e5) {
            Sr(t5, e5, e5[Jt], 2, null, null), e5[0] = null, e5[6] = null;
          }(r2[1], r2);
          const i2 = o2[19];
          null !== i2 && i2.detachView(o2[1]), r2[3] = null, r2[4] = null, r2[2] &= -65;
        }
        return r2;
      }
      function pr(t4, e4) {
        if (!(128 & e4[2])) {
          const n3 = e4[Jt];
          n3.destroyNode && Sr(t4, e4, n3, 3, null, null), function(t5) {
            let e5 = t5[13];
            if (!e5)
              return gr(t5[1], t5);
            for (; e5; ) {
              let n4 = null;
              if (te(e5))
                n4 = e5[13];
              else {
                const t6 = e5[10];
                t6 && (n4 = t6);
              }
              if (!n4) {
                for (; e5 && !e5[4] && e5 !== t5; )
                  te(e5) && gr(e5[1], e5), e5 = e5[3];
                null === e5 && (e5 = t5), te(e5) && gr(e5[1], e5), n4 = e5 && e5[4];
              }
              e5 = n4;
            }
          }(e4);
        }
      }
      function gr(t4, e4) {
        if (!(128 & e4[2])) {
          e4[2] &= -65, e4[2] |= 128, function(t5, e5) {
            let n4;
            if (null != t5 && null != (n4 = t5.destroyHooks))
              for (let t6 = 0; t6 < n4.length; t6 += 2) {
                const r2 = e5[n4[t6]];
                if (!(r2 instanceof tn)) {
                  const e6 = n4[t6 + 1];
                  if (Array.isArray(e6))
                    for (let t7 = 0; t7 < e6.length; t7 += 2) {
                      const n5 = r2[e6[t7]], s2 = e6[t7 + 1];
                      try {
                        s2.call(n5);
                      } finally {
                      }
                    }
                  else
                    try {
                      e6.call(r2);
                    } finally {
                    }
                }
              }
          }(t4, e4), function(t5, e5) {
            const n4 = t5.cleanup, r2 = e5[7];
            let s2 = -1;
            if (null !== n4)
              for (let t6 = 0; t6 < n4.length - 1; t6 += 2)
                if ("string" == typeof n4[t6]) {
                  const o2 = n4[t6 + 1], i2 = "function" == typeof o2 ? o2(e5) : ge(e5[o2]), l2 = r2[s2 = n4[t6 + 2]], a2 = n4[t6 + 3];
                  "boolean" == typeof a2 ? i2.removeEventListener(n4[t6], l2, a2) : a2 >= 0 ? r2[s2 = a2]() : r2[s2 = -a2].unsubscribe(), t6 += 2;
                } else {
                  const e6 = r2[s2 = n4[t6 + 1]];
                  n4[t6].call(e6);
                }
            if (null !== r2) {
              for (let t6 = s2 + 1; t6 < r2.length; t6++)
                (0, r2[t6])();
              e5[7] = null;
            }
          }(t4, e4), 1 === e4[1].type && e4[Jt].destroy();
          const n3 = e4[17];
          if (null !== n3 && ee(e4[3])) {
            n3 !== e4[3] && dr(n3, e4);
            const r2 = e4[19];
            null !== r2 && r2.detachView(t4);
          }
          !function(t5) {
            er.delete(t5[20]);
          }(e4);
        }
      }
      function _r(t4, e4, n3, r2, s2) {
        t4.insertBefore(e4, n3, r2, s2);
      }
      function yr(t4, e4, n3) {
        t4.appendChild(e4, n3);
      }
      function mr(t4, e4, n3, r2, s2) {
        null !== r2 ? _r(t4, e4, n3, r2, s2) : yr(t4, e4, n3);
      }
      function vr(t4, e4) {
        return t4.parentNode(e4);
      }
      let wr, br = function(t4, e4, n3) {
        return 40 & t4.type ? ye(t4, n3) : null;
      };
      function kr(t4, e4, n3, r2) {
        const s2 = function(t5, e5, n4) {
          return function(t6, e6, n5) {
            let r3 = e6;
            for (; null !== r3 && 40 & r3.type; )
              r3 = (e6 = r3).parent;
            if (null === r3)
              return n5[0];
            if (2 & r3.flags) {
              const e7 = t6.data[r3.directiveStart].encapsulation;
              if (e7 === Vt.None || e7 === Vt.Emulated)
                return null;
            }
            return ye(r3, n5);
          }(t5, e5.parent, n4);
        }(t4, r2, e4), o2 = e4[Jt], i2 = function(t5, e5, n4) {
          return br(t5, e5, n4);
        }(r2.parent || e4[6], r2, e4);
        if (null != s2)
          if (Array.isArray(n3))
            for (let t5 = 0; t5 < n3.length; t5++)
              mr(o2, s2, n3[t5], i2, false);
          else
            mr(o2, s2, n3, i2, false);
      }
      function Cr(t4, e4) {
        if (null !== e4) {
          const n3 = e4.type;
          if (3 & n3)
            return ye(e4, t4);
          if (4 & n3)
            return Er(-1, t4[e4.index]);
          if (8 & n3) {
            const n4 = e4.child;
            if (null !== n4)
              return Cr(t4, n4);
            {
              const n5 = t4[e4.index];
              return ee(n5) ? Er(-1, n5) : ge(n5);
            }
          }
          if (32 & n3)
            return or(e4, t4)() || ge(t4[e4.index]);
          {
            const n4 = Tr(t4, e4);
            return null !== n4 ? Array.isArray(n4) ? n4[0] : Cr(ir(t4[16]), n4) : Cr(t4, e4.next);
          }
        }
        return null;
      }
      function Tr(t4, e4) {
        return null !== e4 ? t4[16][6].projection[e4.projection] : null;
      }
      function Er(t4, e4) {
        const n3 = 10 + t4 + 1;
        if (n3 < e4.length) {
          const t5 = e4[n3], r2 = t5[1].firstChild;
          if (null !== r2)
            return Cr(t5, r2);
        }
        return e4[7];
      }
      function xr(t4, e4, n3, r2, s2, o2, i2) {
        for (; null != n3; ) {
          const l2 = r2[n3.index], a2 = n3.type;
          if (i2 && 0 === e4 && (l2 && sr(ge(l2), r2), n3.flags |= 4), 64 != (64 & n3.flags))
            if (8 & a2)
              xr(t4, e4, n3.child, r2, s2, o2, false), cr(e4, t4, s2, l2, o2);
            else if (32 & a2) {
              const i3 = or(n3, r2);
              let a3;
              for (; a3 = i3(); )
                cr(e4, t4, s2, a3, o2);
              cr(e4, t4, s2, l2, o2);
            } else
              16 & a2 ? Ar(t4, e4, r2, n3, s2, o2) : cr(e4, t4, s2, l2, o2);
          n3 = i2 ? n3.projectionNext : n3.next;
        }
      }
      function Sr(t4, e4, n3, r2, s2, o2) {
        xr(n3, r2, t4.firstChild, e4, s2, o2, false);
      }
      function Ar(t4, e4, n3, r2, s2, o2) {
        const i2 = n3[16], l2 = i2[6].projection[r2.projection];
        if (Array.isArray(l2))
          for (let n4 = 0; n4 < l2.length; n4++)
            cr(e4, t4, s2, l2[n4], o2);
        else
          xr(t4, e4, l2, i2[3], s2, o2, true);
      }
      function Ir(t4, e4, n3) {
        t4.setAttribute(e4, "style", n3);
      }
      function Or(t4, e4, n3) {
        "" === n3 ? t4.removeAttribute(e4, "class") : t4.setAttribute(e4, "class", n3);
      }
      const Dr = new Pn("ENVIRONMENT_INITIALIZER"), Vr = new Pn("INJECTOR", -1), Pr = new Pn("INJECTOR_DEF_TYPES");
      class Rr {
        get(t4, e4 = Zn) {
          if (e4 === Zn) {
            const e5 = new Error(`NullInjectorError: No provider for ${lt(t4)}!`);
            throw e5.name = "NullInjectorError", e5;
          }
          return e4;
        }
      }
      function jr(...t4) {
        return { \u0275providers: Nr(0, t4) };
      }
      function Nr(t4, ...e4) {
        const n3 = [], r2 = /* @__PURE__ */ new Set();
        let s2;
        return Rn(e4, (t5) => {
          const e5 = t5;
          Hr(e5, n3, [], r2) && (s2 || (s2 = []), s2.push(e5));
        }), void 0 !== s2 && Fr(s2, n3), n3;
      }
      function Fr(t4, e4) {
        for (let n3 = 0; n3 < t4.length; n3++) {
          const { providers: r2 } = t4[n3];
          Rn(r2, (t5) => {
            e4.push(t5);
          });
        }
      }
      function Hr(t4, e4, n3, r2) {
        if (!(t4 = ht(t4)))
          return false;
        let s2 = null, o2 = wt(t4);
        const i2 = !o2 && Qt(t4);
        if (o2 || i2) {
          if (i2 && !i2.standalone)
            return false;
          s2 = t4;
        } else {
          const e5 = t4.ngModule;
          if (o2 = wt(e5), !o2)
            return false;
          s2 = e5;
        }
        const l2 = r2.has(s2);
        if (i2) {
          if (l2)
            return false;
          if (r2.add(s2), i2.dependencies) {
            const t5 = "function" == typeof i2.dependencies ? i2.dependencies() : i2.dependencies;
            for (const s3 of t5)
              Hr(s3, e4, n3, r2);
          }
        } else {
          if (!o2)
            return false;
          {
            if (null != o2.imports && !l2) {
              let t6;
              r2.add(s2);
              try {
                Rn(o2.imports, (s3) => {
                  Hr(s3, e4, n3, r2) && (t6 || (t6 = []), t6.push(s3));
                });
              } finally {
              }
              void 0 !== t6 && Fr(t6, e4);
            }
            if (!l2) {
              const t6 = le(s2) || (() => new s2());
              e4.push({ provide: s2, useFactory: t6, deps: jt }, { provide: Pr, useValue: s2, multi: true }, { provide: Dr, useValue: () => Wn(s2), multi: true });
            }
            const t5 = o2.providers;
            null == t5 || l2 || Rn(t5, (t6) => {
              e4.push(t6);
            });
          }
        }
        return s2 !== t4 && void 0 !== t4.providers;
      }
      const Mr = ot({ provide: String, useValue: ot });
      function Zr(t4) {
        return null !== t4 && "object" == typeof t4 && Mr in t4;
      }
      function Lr(t4) {
        return "function" == typeof t4;
      }
      const zr = new Pn("Set Injector scope."), Br = {}, Ur = {};
      let qr;
      function $r() {
        return void 0 === qr && (qr = new Rr()), qr;
      }
      class Gr {
      }
      class Wr extends Gr {
        constructor(t4, e4, n3, r2) {
          super(), this.parent = e4, this.source = n3, this.scopes = r2, this.records = /* @__PURE__ */ new Map(), this._ngOnDestroyHooks = /* @__PURE__ */ new Set(), this._onDestroyHooks = [], this._destroyed = false, Yr(t4, (t5) => this.processProvider(t5)), this.records.set(Vr, Xr(void 0, this)), r2.has("environment") && this.records.set(Gr, Xr(void 0, this));
          const s2 = this.records.get(zr);
          null != s2 && "string" == typeof s2.value && this.scopes.add(s2.value), this.injectorDefTypes = new Set(this.get(Pr.multi, jt, Et.Self));
        }
        get destroyed() {
          return this._destroyed;
        }
        destroy() {
          this.assertNotDestroyed(), this._destroyed = true;
          try {
            for (const t4 of this._ngOnDestroyHooks)
              t4.ngOnDestroy();
            for (const t4 of this._onDestroyHooks)
              t4();
          } finally {
            this.records.clear(), this._ngOnDestroyHooks.clear(), this.injectorDefTypes.clear(), this._onDestroyHooks.length = 0;
          }
        }
        onDestroy(t4) {
          this._onDestroyHooks.push(t4);
        }
        runInContext(t4) {
          this.assertNotDestroyed();
          const e4 = $n(this), n3 = St(void 0);
          try {
            return t4();
          } finally {
            $n(e4), St(n3);
          }
        }
        get(t4, e4 = Zn, n3 = Et.Default) {
          this.assertNotDestroyed();
          const r2 = $n(this), s2 = St(void 0);
          try {
            if (!(n3 & Et.SkipSelf)) {
              let e5 = this.records.get(t4);
              if (void 0 === e5) {
                const n4 = function(t5) {
                  return "function" == typeof t5 || "object" == typeof t5 && t5 instanceof Pn;
                }(t4) && mt(t4);
                e5 = n4 && this.injectableDefInScope(n4) ? Xr(Qr(t4), Br) : null, this.records.set(t4, e5);
              }
              if (null != e5)
                return this.hydrate(t4, e5);
            }
            return (n3 & Et.Self ? $r() : this.parent).get(t4, e4 = n3 & Et.Optional && e4 === Zn ? null : e4);
          } catch (e5) {
            if ("NullInjectorError" === e5.name) {
              if ((e5[zn] = e5[zn] || []).unshift(lt(t4)), r2)
                throw e5;
              return function(t5, e6, n4, r3) {
                const s3 = t5[zn];
                throw e6[Un] && s3.unshift(e6[Un]), t5.message = function(t6, e7, n5, r4 = null) {
                  t6 = t6 && "\n" === t6.charAt(0) && "\u0275" == t6.charAt(1) ? t6.slice(2) : t6;
                  let s4 = lt(e7);
                  if (Array.isArray(e7))
                    s4 = e7.map(lt).join(" -> ");
                  else if ("object" == typeof e7) {
                    let t7 = [];
                    for (let n6 in e7)
                      if (e7.hasOwnProperty(n6)) {
                        let r5 = e7[n6];
                        t7.push(n6 + ":" + ("string" == typeof r5 ? JSON.stringify(r5) : lt(r5)));
                      }
                    s4 = `{${t7.join(", ")}}`;
                  }
                  return `${n5}${r4 ? "(" + r4 + ")" : ""}[${s4}]: ${t6.replace(Bn, "\n  ")}`;
                }("\n" + t5.message, s3, "R3InjectorError", r3), t5.ngTokenPath = s3, t5[zn] = null, t5;
              }(e5, t4, 0, this.source);
            }
            throw e5;
          } finally {
            St(s2), $n(r2);
          }
        }
        resolveInjectorInitializers() {
          const t4 = $n(this), e4 = St(void 0);
          try {
            const t5 = this.get(Dr.multi, jt, Et.Self);
            for (const e5 of t5)
              e5();
          } finally {
            $n(t4), St(e4);
          }
        }
        toString() {
          const t4 = [], e4 = this.records;
          for (const n3 of e4.keys())
            t4.push(lt(n3));
          return `R3Injector[${t4.join(", ")}]`;
        }
        assertNotDestroyed() {
          if (this._destroyed)
            throw new ft(205, false);
        }
        processProvider(t4) {
          let e4 = Lr(t4 = ht(t4)) ? t4 : ht(t4 && t4.provide);
          const n3 = function(t5) {
            return Zr(t5) ? Xr(void 0, t5.useValue) : Xr(Kr(t5), Br);
          }(t4);
          if (Lr(t4) || true !== t4.multi)
            this.records.get(e4);
          else {
            let n4 = this.records.get(e4);
            n4 || (n4 = Xr(void 0, Br, true), n4.factory = () => Qn(n4.multi), this.records.set(e4, n4)), e4 = t4, n4.multi.push(t4);
          }
          this.records.set(e4, n3);
        }
        hydrate(t4, e4) {
          return e4.value === Br && (e4.value = Ur, e4.value = e4.factory()), "object" == typeof e4.value && e4.value && function(t5) {
            return null !== t5 && "object" == typeof t5 && "function" == typeof t5.ngOnDestroy;
          }(e4.value) && this._ngOnDestroyHooks.add(e4.value), e4.value;
        }
        injectableDefInScope(t4) {
          if (!t4.providedIn)
            return false;
          const e4 = ht(t4.providedIn);
          return "string" == typeof e4 ? "any" === e4 || this.scopes.has(e4) : this.injectorDefTypes.has(e4);
        }
      }
      function Qr(t4) {
        const e4 = mt(t4), n3 = null !== e4 ? e4.factory : le(t4);
        if (null !== n3)
          return n3;
        if (t4 instanceof Pn)
          throw new ft(204, false);
        if (t4 instanceof Function)
          return function(t5) {
            const e5 = t5.length;
            if (e5 > 0)
              throw function(t6, e6) {
                const n5 = [];
                for (let e7 = 0; e7 < t6; e7++)
                  n5.push("?");
              }(e5), new ft(204, false);
            const n4 = function(t6) {
              const e6 = t6 && (t6[bt] || t6[Ct]);
              if (e6) {
                const n5 = function(t7) {
                  if (t7.hasOwnProperty("name"))
                    return t7.name;
                  const e7 = ("" + t7).match(/^function\s*([^\s(]+)/);
                  return null === e7 ? "" : e7[1];
                }(t6);
                return console.warn(`DEPRECATED: DI is instantiating a token "${n5}" that inherits its @Injectable decorator but does not provide one itself.
This will become an error in a future version of Angular. Please add @Injectable() to the "${n5}" class.`), e6;
              }
              return null;
            }(t5);
            return null !== n4 ? () => n4.factory(t5) : () => new t5();
          }(t4);
        throw new ft(204, false);
      }
      function Kr(t4, e4, n3) {
        let r2;
        if (Lr(t4)) {
          const e5 = ht(t4);
          return le(e5) || Qr(e5);
        }
        if (Zr(t4))
          r2 = () => ht(t4.useValue);
        else if (function(t5) {
          return !(!t5 || !t5.useFactory);
        }(t4))
          r2 = () => t4.useFactory(...Qn(t4.deps || []));
        else if (function(t5) {
          return !(!t5 || !t5.useExisting);
        }(t4))
          r2 = () => Wn(ht(t4.useExisting));
        else {
          const e5 = ht(t4 && (t4.useClass || t4.provide));
          if (!function(t5) {
            return !!t5.deps;
          }(t4))
            return le(e5) || Qr(e5);
          r2 = () => new e5(...Qn(t4.deps));
        }
        return r2;
      }
      function Xr(t4, e4, n3 = false) {
        return { factory: t4, value: e4, multi: n3 ? [] : void 0 };
      }
      function Jr(t4) {
        return !!t4.\u0275providers;
      }
      function Yr(t4, e4) {
        for (const n3 of t4)
          Array.isArray(n3) ? Yr(n3, e4) : Jr(n3) ? Yr(n3.\u0275providers, e4) : e4(n3);
      }
      class ts {
      }
      class es {
        resolveComponentFactory(t4) {
          throw function(t5) {
            const e4 = Error(`No component factory found for ${lt(t5)}. Did you add it to @NgModule.entryComponents?`);
            return e4.ngComponent = t5, e4;
          }(t4);
        }
      }
      let ns = (() => {
        class t4 {
        }
        return t4.NULL = new es(), t4;
      })();
      function rs() {
        return ss(Oe(), xe());
      }
      function ss(t4, e4) {
        return new os(ye(t4, e4));
      }
      let os = (() => {
        class t4 {
          constructor(t5) {
            this.nativeElement = t5;
          }
        }
        return t4.__NG_ELEMENT_ID__ = rs, t4;
      })();
      class is {
      }
      let ls = (() => {
        class t4 {
        }
        return t4.__NG_ELEMENT_ID__ = () => function() {
          const t5 = xe(), e4 = ve(Oe().index, t5);
          return (te(e4) ? e4 : t5)[Jt];
        }(), t4;
      })(), as = (() => {
        class t4 {
        }
        return t4.\u0275prov = _t({ token: t4, providedIn: "root", factory: () => null }), t4;
      })();
      const us = new class {
        constructor(t4) {
          this.full = t4, this.major = t4.split(".")[0], this.minor = t4.split(".")[1], this.patch = t4.split(".").slice(2).join(".");
        }
      }("14.3.0"), cs = {};
      function hs(t4) {
        return t4.ngOriginalError;
      }
      class ds {
        constructor() {
          this._console = console;
        }
        handleError(t4) {
          const e4 = this._findOriginalError(t4);
          this._console.error("ERROR", t4), e4 && this._console.error("ORIGINAL ERROR", e4);
        }
        _findOriginalError(t4) {
          let e4 = t4 && hs(t4);
          for (; e4 && hs(e4); )
            e4 = hs(e4);
          return e4 || null;
        }
      }
      function fs(t4, e4, n3) {
        let r2 = t4.length;
        for (; ; ) {
          const s2 = t4.indexOf(e4, n3);
          if (-1 === s2)
            return s2;
          if (0 === s2 || t4.charCodeAt(s2 - 1) <= 32) {
            const n4 = e4.length;
            if (s2 + n4 === r2 || t4.charCodeAt(s2 + n4) <= 32)
              return s2;
          }
          n3 = s2 + 1;
        }
      }
      const ps = "ng-template";
      function gs(t4, e4, n3) {
        let r2 = 0;
        for (; r2 < t4.length; ) {
          let s2 = t4[r2++];
          if (n3 && "class" === s2) {
            if (s2 = t4[r2], -1 !== fs(s2.toLowerCase(), e4, 0))
              return true;
          } else if (1 === s2) {
            for (; r2 < t4.length && "string" == typeof (s2 = t4[r2++]); )
              if (s2.toLowerCase() === e4)
                return true;
            return false;
          }
        }
        return false;
      }
      function _s(t4) {
        return 4 === t4.type && t4.value !== ps;
      }
      function ys(t4, e4, n3) {
        return e4 === (4 !== t4.type || n3 ? t4.value : ps);
      }
      function ms(t4, e4, n3) {
        let r2 = 4;
        const s2 = t4.attrs || [], o2 = function(t5) {
          for (let e5 = 0; e5 < t5.length; e5++)
            if (nn(t5[e5]))
              return e5;
          return t5.length;
        }(s2);
        let i2 = false;
        for (let l2 = 0; l2 < e4.length; l2++) {
          const a2 = e4[l2];
          if ("number" != typeof a2) {
            if (!i2)
              if (4 & r2) {
                if (r2 = 2 | 1 & r2, "" !== a2 && !ys(t4, a2, n3) || "" === a2 && 1 === e4.length) {
                  if (vs(r2))
                    return false;
                  i2 = true;
                }
              } else {
                const u2 = 8 & r2 ? a2 : e4[++l2];
                if (8 & r2 && null !== t4.attrs) {
                  if (!gs(t4.attrs, u2, n3)) {
                    if (vs(r2))
                      return false;
                    i2 = true;
                  }
                  continue;
                }
                const c2 = ws(8 & r2 ? "class" : a2, s2, _s(t4), n3);
                if (-1 === c2) {
                  if (vs(r2))
                    return false;
                  i2 = true;
                  continue;
                }
                if ("" !== u2) {
                  let t5;
                  t5 = c2 > o2 ? "" : s2[c2 + 1].toLowerCase();
                  const e5 = 8 & r2 ? t5 : null;
                  if (e5 && -1 !== fs(e5, u2, 0) || 2 & r2 && u2 !== t5) {
                    if (vs(r2))
                      return false;
                    i2 = true;
                  }
                }
              }
          } else {
            if (!i2 && !vs(r2) && !vs(a2))
              return false;
            if (i2 && vs(a2))
              continue;
            i2 = false, r2 = a2 | 1 & r2;
          }
        }
        return vs(r2) || i2;
      }
      function vs(t4) {
        return 0 == (1 & t4);
      }
      function ws(t4, e4, n3, r2) {
        if (null === e4)
          return -1;
        let s2 = 0;
        if (r2 || !n3) {
          let n4 = false;
          for (; s2 < e4.length; ) {
            const r3 = e4[s2];
            if (r3 === t4)
              return s2;
            if (3 === r3 || 6 === r3)
              n4 = true;
            else {
              if (1 === r3 || 2 === r3) {
                let t5 = e4[++s2];
                for (; "string" == typeof t5; )
                  t5 = e4[++s2];
                continue;
              }
              if (4 === r3)
                break;
              if (0 === r3) {
                s2 += 4;
                continue;
              }
            }
            s2 += n4 ? 1 : 2;
          }
          return -1;
        }
        return function(t5, e5) {
          let n4 = t5.indexOf(4);
          if (n4 > -1)
            for (n4++; n4 < t5.length; ) {
              const r3 = t5[n4];
              if ("number" == typeof r3)
                return -1;
              if (r3 === e5)
                return n4;
              n4++;
            }
          return -1;
        }(e4, t4);
      }
      function bs(t4, e4, n3 = false) {
        for (let r2 = 0; r2 < e4.length; r2++)
          if (ms(t4, e4[r2], n3))
            return true;
        return false;
      }
      function ks(t4, e4) {
        return t4 ? ":not(" + e4.trim() + ")" : e4;
      }
      function Cs(t4) {
        let e4 = t4[0], n3 = 1, r2 = 2, s2 = "", o2 = false;
        for (; n3 < t4.length; ) {
          let i2 = t4[n3];
          if ("string" == typeof i2)
            if (2 & r2) {
              const e5 = t4[++n3];
              s2 += "[" + i2 + (e5.length > 0 ? '="' + e5 + '"' : "") + "]";
            } else
              8 & r2 ? s2 += "." + i2 : 4 & r2 && (s2 += " " + i2);
          else
            "" !== s2 && !vs(i2) && (e4 += ks(o2, s2), s2 = ""), r2 = i2, o2 = o2 || !vs(r2);
          n3++;
        }
        return "" !== s2 && (e4 += ks(o2, s2)), e4;
      }
      const Ts = {};
      function Es(t4) {
        xs(Se(), xe(), $e() + t4, false);
      }
      function xs(t4, e4, n3, r2) {
        if (!r2)
          if (3 == (3 & e4[2])) {
            const r3 = t4.preOrderCheckHooks;
            null !== r3 && Qe(e4, r3, n3);
          } else {
            const r3 = t4.preOrderHooks;
            null !== r3 && Ke(e4, r3, 0, n3);
          }
        Ge(n3);
      }
      function Ss(t4, e4 = null, n3 = null, r2) {
        const s2 = As(t4, e4, n3, r2);
        return s2.resolveInjectorInitializers(), s2;
      }
      function As(t4, e4 = null, n3 = null, r2, s2 = /* @__PURE__ */ new Set()) {
        const o2 = [n3 || jt, jr(t4)];
        return r2 = r2 || ("object" == typeof t4 ? void 0 : lt(t4)), new Wr(o2, e4 || $r(), r2 || null, s2);
      }
      let Is = (() => {
        class t4 {
          static create(t5, e4) {
            var _a2;
            if (Array.isArray(t5))
              return Ss({ name: "" }, e4, t5, "");
            {
              const e5 = (_a2 = t5.name) != null ? _a2 : "";
              return Ss({ name: e5 }, t5.parent, t5.providers, e5);
            }
          }
        }
        return t4.THROW_IF_NOT_FOUND = Zn, t4.NULL = new Rr(), t4.\u0275prov = _t({ token: t4, providedIn: "any", factory: () => Wn(Vr) }), t4.__NG_ELEMENT_ID__ = -1, t4;
      })();
      function Os(t4, e4 = Et.Default) {
        const n3 = xe();
        return null === n3 ? Wn(t4, e4) : bn(Oe(), n3, ht(t4), e4);
      }
      function Ds(t4, e4) {
        return t4 << 17 | e4 << 2;
      }
      function Vs(t4) {
        return t4 >> 17 & 32767;
      }
      function Ps(t4) {
        return 2 | t4;
      }
      function Rs(t4) {
        return (131068 & t4) >> 2;
      }
      function js(t4, e4) {
        return -131069 & t4 | e4 << 2;
      }
      function Ns(t4) {
        return 1 | t4;
      }
      function Fs(t4, e4) {
        const n3 = t4.contentQueries;
        if (null !== n3)
          for (let r2 = 0; r2 < n3.length; r2 += 2) {
            const s2 = n3[r2], o2 = n3[r2 + 1];
            if (-1 !== o2) {
              const n4 = t4.data[o2];
              Fe(s2), n4.contentQueries(2, e4[o2], o2);
            }
          }
      }
      function Hs(t4, e4, n3, r2, s2, o2, i2, l2, a2, u2, c2) {
        const h2 = e4.blueprint.slice();
        return h2[0] = s2, h2[2] = 76 | r2, (null !== c2 || t4 && 1024 & t4[2]) && (h2[2] |= 1024), ke(h2), h2[3] = h2[15] = t4, h2[8] = n3, h2[10] = i2 || t4 && t4[10], h2[Jt] = l2 || t4 && t4[Jt], h2[12] = a2 || t4 && t4[12] || null, h2[9] = u2 || t4 && t4[9] || null, h2[6] = o2, h2[20] = nr++, h2[21] = c2, h2[16] = 2 == e4.type ? t4[16] : h2, h2;
      }
      function Ms(t4, e4, n3, r2, s2) {
        let o2 = t4.data[e4];
        if (null === o2)
          o2 = function(t5, e5, n4, r3, s3) {
            const o3 = De(), i2 = Pe(), l2 = t5.data[e5] = function(t6, e6, n5, r4, s4, o4) {
              return { type: n5, index: r4, insertBeforeIndex: null, injectorIndex: e6 ? e6.injectorIndex : -1, directiveStart: -1, directiveEnd: -1, directiveStylingLast: -1, propertyBindings: null, flags: 0, providerIndexes: 0, value: s4, attrs: o4, mergedAttrs: null, localNames: null, initialInputs: void 0, inputs: null, outputs: null, tViews: null, next: null, projectionNext: null, child: null, parent: e6, projection: null, styles: null, stylesWithoutHost: null, residualStyles: void 0, classes: null, classesWithoutHost: null, residualClasses: void 0, classBindings: 0, styleBindings: 0 };
            }(0, i2 ? o3 : o3 && o3.parent, n4, e5, r3, s3);
            return null === t5.firstChild && (t5.firstChild = l2), null !== o3 && (i2 ? null == o3.child && null !== l2.parent && (o3.child = l2) : null === o3.next && (o3.next = l2)), l2;
          }(t4, e4, n3, r2, s2), Te.lFrame.inI18n && (o2.flags |= 64);
        else if (64 & o2.type) {
          o2.type = n3, o2.value = r2, o2.attrs = s2;
          const t5 = function() {
            const t6 = Te.lFrame, e5 = t6.currentTNode;
            return t6.isParent ? e5 : e5.parent;
          }();
          o2.injectorIndex = null === t5 ? -1 : t5.injectorIndex;
        }
        return Ve(o2, true), o2;
      }
      function Zs(t4, e4, n3, r2) {
        if (0 === n3)
          return -1;
        const s2 = e4.length;
        for (let s3 = 0; s3 < n3; s3++)
          e4.push(r2), t4.blueprint.push(r2), t4.data.push(null);
        return s2;
      }
      function Ls(t4, e4, n3) {
        Ze(e4);
        try {
          const r2 = t4.viewQuery;
          null !== r2 && go(1, r2, n3);
          const s2 = t4.template;
          null !== s2 && Bs(t4, e4, s2, 1, n3), t4.firstCreatePass && (t4.firstCreatePass = false), t4.staticContentQueries && Fs(t4, e4), t4.staticViewQueries && go(2, t4.viewQuery, n3);
          const o2 = t4.components;
          null !== o2 && function(t5, e5) {
            for (let n4 = 0; n4 < e5.length; n4++)
              co(t5, e5[n4]);
          }(e4, o2);
        } catch (e5) {
          throw t4.firstCreatePass && (t4.incompleteFirstPass = true, t4.firstCreatePass = false), e5;
        } finally {
          e4[2] &= -5, qe();
        }
      }
      function zs(t4, e4, n3, r2) {
        const s2 = e4[2];
        if (128 != (128 & s2)) {
          Ze(e4);
          try {
            ke(e4), function(t5) {
              Te.lFrame.bindingIndex = t5;
            }(t4.bindingStartIndex), null !== n3 && Bs(t4, e4, n3, 2, r2);
            const o2 = 3 == (3 & s2);
            if (o2) {
              const n4 = t4.preOrderCheckHooks;
              null !== n4 && Qe(e4, n4, null);
            } else {
              const n4 = t4.preOrderHooks;
              null !== n4 && Ke(e4, n4, 0, null), Xe(e4, 0);
            }
            if (function(t5) {
              for (let e5 = lr(t5); null !== e5; e5 = ar(e5)) {
                if (!e5[2])
                  continue;
                const t6 = e5[9];
                for (let e6 = 0; e6 < t6.length; e6++) {
                  const n4 = t6[e6], r3 = n4[3];
                  0 == (512 & n4[2]) && Ce(r3, 1), n4[2] |= 512;
                }
              }
            }(e4), function(t5) {
              for (let e5 = lr(t5); null !== e5; e5 = ar(e5))
                for (let t6 = 10; t6 < e5.length; t6++) {
                  const n4 = e5[t6], r3 = n4[1];
                  we(n4) && zs(r3, n4, r3.template, n4[8]);
                }
            }(e4), null !== t4.contentQueries && Fs(t4, e4), o2) {
              const n4 = t4.contentCheckHooks;
              null !== n4 && Qe(e4, n4);
            } else {
              const n4 = t4.contentHooks;
              null !== n4 && Ke(e4, n4, 1), Xe(e4, 1);
            }
            !function(t5, e5) {
              const n4 = t5.hostBindingOpCodes;
              if (null !== n4)
                try {
                  for (let t6 = 0; t6 < n4.length; t6++) {
                    const r3 = n4[t6];
                    if (r3 < 0)
                      Ge(~r3);
                    else {
                      const s3 = r3, o3 = n4[++t6], i3 = n4[++t6];
                      je(o3, s3), i3(2, e5[s3]);
                    }
                  }
                } finally {
                  Ge(-1);
                }
            }(t4, e4);
            const i2 = t4.components;
            null !== i2 && function(t5, e5) {
              for (let n4 = 0; n4 < e5.length; n4++)
                ao(t5, e5[n4]);
            }(e4, i2);
            const l2 = t4.viewQuery;
            if (null !== l2 && go(2, l2, r2), o2) {
              const n4 = t4.viewCheckHooks;
              null !== n4 && Qe(e4, n4);
            } else {
              const n4 = t4.viewHooks;
              null !== n4 && Ke(e4, n4, 2), Xe(e4, 2);
            }
            true === t4.firstUpdatePass && (t4.firstUpdatePass = false), e4[2] &= -41, 512 & e4[2] && (e4[2] &= -513, Ce(e4[3], -1));
          } finally {
            qe();
          }
        }
      }
      function Bs(t4, e4, n3, r2, s2) {
        const o2 = $e(), i2 = 2 & r2;
        try {
          Ge(-1), i2 && e4.length > Yt && xs(t4, e4, Yt, false), n3(r2, s2);
        } finally {
          Ge(o2);
        }
      }
      function Us(t4, e4, n3) {
        !Ee() || (function(t5, e5, n4, r2) {
          const s2 = n4.directiveStart, o2 = n4.directiveEnd;
          t5.firstCreatePass || pn(n4, e5), sr(r2, e5);
          const i2 = n4.initialInputs;
          for (let r3 = s2; r3 < o2; r3++) {
            const o3 = t5.data[r3], l2 = oe(o3);
            l2 && so(e5, n4, o3);
            const a2 = Tn(e5, t5, r3, n4);
            sr(a2, e5), null !== i2 && oo(0, r3 - s2, a2, o3, 0, i2), l2 && (ve(n4.index, e5)[8] = a2);
          }
        }(t4, e4, n3, ye(n3, e4)), 128 == (128 & n3.flags) && function(t5, e5, n4) {
          const r2 = n4.directiveStart, s2 = n4.directiveEnd, o2 = n4.index, i2 = Te.lFrame.currentDirectiveIndex;
          try {
            Ge(o2);
            for (let n5 = r2; n5 < s2; n5++) {
              const r3 = t5.data[n5], s3 = e5[n5];
              Ne(n5), (null !== r3.hostBindings || 0 !== r3.hostVars || null !== r3.hostAttrs) && Ys(r3, s3);
            }
          } finally {
            Ge(-1), Ne(i2);
          }
        }(t4, e4, n3));
      }
      function qs(t4, e4, n3 = ye) {
        const r2 = e4.localNames;
        if (null !== r2) {
          let s2 = e4.index + 1;
          for (let o2 = 0; o2 < r2.length; o2 += 2) {
            const i2 = r2[o2 + 1], l2 = -1 === i2 ? n3(e4, t4) : t4[i2];
            t4[s2++] = l2;
          }
        }
      }
      function $s(t4) {
        const e4 = t4.tView;
        return null === e4 || e4.incompleteFirstPass ? t4.tView = Gs(1, null, t4.template, t4.decls, t4.vars, t4.directiveDefs, t4.pipeDefs, t4.viewQuery, t4.schemas, t4.consts) : e4;
      }
      function Gs(t4, e4, n3, r2, s2, o2, i2, l2, a2, u2) {
        const c2 = Yt + r2, h2 = c2 + s2, d2 = function(t5, e5) {
          const n4 = [];
          for (let r3 = 0; r3 < e5; r3++)
            n4.push(r3 < t5 ? null : Ts);
          return n4;
        }(c2, h2), f2 = "function" == typeof u2 ? u2() : u2;
        return d2[1] = { type: t4, blueprint: d2, template: n3, queries: null, viewQuery: l2, declTNode: e4, data: d2.slice().fill(null, c2), bindingStartIndex: c2, expandoStartIndex: h2, hostBindingOpCodes: null, firstCreatePass: true, firstUpdatePass: true, staticViewQueries: false, staticContentQueries: false, preOrderHooks: null, preOrderCheckHooks: null, contentHooks: null, contentCheckHooks: null, viewHooks: null, viewCheckHooks: null, destroyHooks: null, cleanup: null, contentQueries: null, components: null, directiveRegistry: "function" == typeof o2 ? o2() : o2, pipeRegistry: "function" == typeof i2 ? i2() : i2, firstChild: null, schemas: a2, consts: f2, incompleteFirstPass: false };
      }
      function Ws(t4, e4, n3) {
        for (let r2 in t4)
          if (t4.hasOwnProperty(r2)) {
            const s2 = t4[r2];
            (n3 = null === n3 ? {} : n3).hasOwnProperty(r2) ? n3[r2].push(e4, s2) : n3[r2] = [e4, s2];
          }
        return n3;
      }
      function Qs(t4, e4) {
        const n3 = e4.directiveEnd, r2 = t4.data, s2 = e4.attrs, o2 = [];
        let i2 = null, l2 = null;
        for (let t5 = e4.directiveStart; t5 < n3; t5++) {
          const n4 = r2[t5], a2 = n4.inputs, u2 = null === s2 || _s(e4) ? null : io(a2, s2);
          o2.push(u2), i2 = Ws(a2, t5, i2), l2 = Ws(n4.outputs, t5, l2);
        }
        null !== i2 && (i2.hasOwnProperty("class") && (e4.flags |= 16), i2.hasOwnProperty("style") && (e4.flags |= 32)), e4.initialInputs = o2, e4.inputs = i2, e4.outputs = l2;
      }
      function Ks(t4, e4) {
        const n3 = ve(e4, t4);
        16 & n3[2] || (n3[2] |= 32);
      }
      function Xs(t4, e4, n3, r2) {
        let s2 = false;
        if (Ee()) {
          const o2 = function(t5, e5, n4) {
            const r3 = t5.directiveRegistry;
            let s3 = null;
            if (r3)
              for (let o3 = 0; o3 < r3.length; o3++) {
                const i3 = r3[o3];
                bs(n4, i3.selectors, false) && (s3 || (s3 = []), mn(pn(n4, e5), t5, i3.type), oe(i3) ? (to(t5, n4), s3.unshift(i3)) : s3.push(i3));
              }
            return s3;
          }(t4, e4, n3), i2 = null === r2 ? null : { "": -1 };
          if (null !== o2) {
            s2 = true, no(n3, t4.data.length, o2.length);
            for (let t5 = 0; t5 < o2.length; t5++) {
              const e5 = o2[t5];
              e5.providersResolver && e5.providersResolver(e5);
            }
            let r3 = false, l2 = false, a2 = Zs(t4, e4, o2.length, null);
            for (let s3 = 0; s3 < o2.length; s3++) {
              const u2 = o2[s3];
              n3.mergedAttrs = sn(n3.mergedAttrs, u2.hostAttrs), ro(t4, n3, e4, a2, u2), eo(a2, u2, i2), null !== u2.contentQueries && (n3.flags |= 8), (null !== u2.hostBindings || null !== u2.hostAttrs || 0 !== u2.hostVars) && (n3.flags |= 128);
              const c2 = u2.type.prototype;
              !r3 && (c2.ngOnChanges || c2.ngOnInit || c2.ngDoCheck) && ((t4.preOrderHooks || (t4.preOrderHooks = [])).push(n3.index), r3 = true), !l2 && (c2.ngOnChanges || c2.ngDoCheck) && ((t4.preOrderCheckHooks || (t4.preOrderCheckHooks = [])).push(n3.index), l2 = true), a2++;
            }
            Qs(t4, n3);
          }
          i2 && function(t5, e5, n4) {
            if (e5) {
              const r3 = t5.localNames = [];
              for (let t6 = 0; t6 < e5.length; t6 += 2) {
                const s3 = n4[e5[t6 + 1]];
                if (null == s3)
                  throw new ft(-301, false);
                r3.push(e5[t6], s3);
              }
            }
          }(n3, r2, i2);
        }
        return n3.mergedAttrs = sn(n3.mergedAttrs, n3.attrs), s2;
      }
      function Js(t4, e4, n3, r2, s2, o2) {
        const i2 = o2.hostBindings;
        if (i2) {
          let n4 = t4.hostBindingOpCodes;
          null === n4 && (n4 = t4.hostBindingOpCodes = []);
          const o3 = ~e4.index;
          (function(t5) {
            let e5 = t5.length;
            for (; e5 > 0; ) {
              const n5 = t5[--e5];
              if ("number" == typeof n5 && n5 < 0)
                return n5;
            }
            return 0;
          })(n4) != o3 && n4.push(o3), n4.push(r2, s2, i2);
        }
      }
      function Ys(t4, e4) {
        null !== t4.hostBindings && t4.hostBindings(1, e4);
      }
      function to(t4, e4) {
        e4.flags |= 2, (t4.components || (t4.components = [])).push(e4.index);
      }
      function eo(t4, e4, n3) {
        if (n3) {
          if (e4.exportAs)
            for (let r2 = 0; r2 < e4.exportAs.length; r2++)
              n3[e4.exportAs[r2]] = t4;
          oe(e4) && (n3[""] = t4);
        }
      }
      function no(t4, e4, n3) {
        t4.flags |= 1, t4.directiveStart = e4, t4.directiveEnd = e4 + n3, t4.providerIndexes = e4;
      }
      function ro(t4, e4, n3, r2, s2) {
        t4.data[r2] = s2;
        const o2 = s2.factory || (s2.factory = le(s2.type)), i2 = new tn(o2, oe(s2), Os);
        t4.blueprint[r2] = i2, n3[r2] = i2, Js(t4, e4, 0, r2, Zs(t4, n3, s2.hostVars, Ts), s2);
      }
      function so(t4, e4, n3) {
        const r2 = ye(e4, t4), s2 = $s(n3), o2 = t4[10], i2 = ho(t4, Hs(t4, s2, null, n3.onPush ? 32 : 16, r2, e4, o2, o2.createRenderer(r2, n3), null, null, null));
        t4[e4.index] = i2;
      }
      function oo(t4, e4, n3, r2, s2, o2) {
        const i2 = o2[e4];
        if (null !== i2) {
          const t5 = r2.setInput;
          for (let e5 = 0; e5 < i2.length; ) {
            const s3 = i2[e5++], o3 = i2[e5++], l2 = i2[e5++];
            null !== t5 ? r2.setInput(n3, l2, s3, o3) : n3[o3] = l2;
          }
        }
      }
      function io(t4, e4) {
        let n3 = null, r2 = 0;
        for (; r2 < e4.length; ) {
          const s2 = e4[r2];
          if (0 !== s2)
            if (5 !== s2) {
              if ("number" == typeof s2)
                break;
              t4.hasOwnProperty(s2) && (null === n3 && (n3 = []), n3.push(s2, t4[s2], e4[r2 + 1])), r2 += 2;
            } else
              r2 += 2;
          else
            r2 += 4;
        }
        return n3;
      }
      function lo(t4, e4, n3, r2) {
        return new Array(t4, true, false, e4, null, 0, r2, n3, null, null);
      }
      function ao(t4, e4) {
        const n3 = ve(e4, t4);
        if (we(n3)) {
          const t5 = n3[1];
          48 & n3[2] ? zs(t5, n3, t5.template, n3[8]) : n3[5] > 0 && uo(n3);
        }
      }
      function uo(t4) {
        for (let e5 = lr(t4); null !== e5; e5 = ar(e5))
          for (let t5 = 10; t5 < e5.length; t5++) {
            const n3 = e5[t5];
            if (we(n3))
              if (512 & n3[2]) {
                const t6 = n3[1];
                zs(t6, n3, t6.template, n3[8]);
              } else
                n3[5] > 0 && uo(n3);
          }
        const e4 = t4[1].components;
        if (null !== e4)
          for (let n3 = 0; n3 < e4.length; n3++) {
            const r2 = ve(e4[n3], t4);
            we(r2) && r2[5] > 0 && uo(r2);
          }
      }
      function co(t4, e4) {
        const n3 = ve(e4, t4), r2 = n3[1];
        (function(t5, e5) {
          for (let n4 = e5.length; n4 < t5.blueprint.length; n4++)
            e5.push(t5.blueprint[n4]);
        })(r2, n3), Ls(r2, n3, n3[8]);
      }
      function ho(t4, e4) {
        return t4[13] ? t4[14][4] = e4 : t4[13] = e4, t4[14] = e4, e4;
      }
      function fo(t4) {
        for (; t4; ) {
          t4[2] |= 32;
          const e4 = ir(t4);
          if (ie(t4) && !e4)
            return t4;
          t4 = e4;
        }
        return null;
      }
      function po(t4, e4, n3, r2 = true) {
        const s2 = e4[10];
        s2.begin && s2.begin();
        try {
          zs(t4, e4, t4.template, n3);
        } catch (t5) {
          throw r2 && mo(e4, t5), t5;
        } finally {
          s2.end && s2.end();
        }
      }
      function go(t4, e4, n3) {
        Fe(0), e4(t4, n3);
      }
      function _o(t4) {
        return t4[7] || (t4[7] = []);
      }
      function yo(t4) {
        return t4.cleanup || (t4.cleanup = []);
      }
      function mo(t4, e4) {
        const n3 = t4[9], r2 = n3 ? n3.get(ds, null) : null;
        r2 && r2.handleError(e4);
      }
      function vo(t4, e4, n3, r2, s2) {
        for (let o2 = 0; o2 < n3.length; ) {
          const i2 = n3[o2++], l2 = n3[o2++], a2 = e4[i2], u2 = t4.data[i2];
          null !== u2.setInput ? u2.setInput(a2, s2, r2, l2) : a2[l2] = s2;
        }
      }
      function wo(t4, e4, n3) {
        let r2 = n3 ? t4.styles : null, s2 = n3 ? t4.classes : null, o2 = 0;
        if (null !== e4)
          for (let t5 = 0; t5 < e4.length; t5++) {
            const n4 = e4[t5];
            "number" == typeof n4 ? o2 = n4 : 1 == o2 ? s2 = at(s2, n4) : 2 == o2 && (r2 = at(r2, n4 + ": " + e4[++t5] + ";"));
          }
        n3 ? t4.styles = r2 : t4.stylesWithoutHost = r2, n3 ? t4.classes = s2 : t4.classesWithoutHost = s2;
      }
      function bo(t4, e4, n3, r2, s2 = false) {
        for (; null !== n3; ) {
          const o2 = e4[n3.index];
          if (null !== o2 && r2.push(ge(o2)), ee(o2))
            for (let t5 = 10; t5 < o2.length; t5++) {
              const e5 = o2[t5], n4 = e5[1].firstChild;
              null !== n4 && bo(e5[1], e5, n4, r2);
            }
          const i2 = n3.type;
          if (8 & i2)
            bo(t4, e4, n3.child, r2);
          else if (32 & i2) {
            const t5 = or(n3, e4);
            let s3;
            for (; s3 = t5(); )
              r2.push(s3);
          } else if (16 & i2) {
            const t5 = Tr(e4, n3);
            if (Array.isArray(t5))
              r2.push(...t5);
            else {
              const n4 = ir(e4[16]);
              bo(n4[1], n4, t5, r2, true);
            }
          }
          n3 = s2 ? n3.projectionNext : n3.next;
        }
        return r2;
      }
      class ko {
        constructor(t4, e4) {
          this._lView = t4, this._cdRefInjectingView = e4, this._appRef = null, this._attachedToViewContainer = false;
        }
        get rootNodes() {
          const t4 = this._lView, e4 = t4[1];
          return bo(e4, t4, e4.firstChild, []);
        }
        get context() {
          return this._lView[8];
        }
        set context(t4) {
          this._lView[8] = t4;
        }
        get destroyed() {
          return 128 == (128 & this._lView[2]);
        }
        destroy() {
          if (this._appRef)
            this._appRef.detachView(this);
          else if (this._attachedToViewContainer) {
            const t4 = this._lView[3];
            if (ee(t4)) {
              const e4 = t4[8], n3 = e4 ? e4.indexOf(this) : -1;
              n3 > -1 && (fr(t4, n3), Nn(e4, n3));
            }
            this._attachedToViewContainer = false;
          }
          pr(this._lView[1], this._lView);
        }
        onDestroy(t4) {
          !function(t5, e4, n3, r2) {
            const s2 = _o(e4);
            s2.push(r2);
          }(this._lView[1], this._lView, 0, t4);
        }
        markForCheck() {
          fo(this._cdRefInjectingView || this._lView);
        }
        detach() {
          this._lView[2] &= -65;
        }
        reattach() {
          this._lView[2] |= 64;
        }
        detectChanges() {
          po(this._lView[1], this._lView, this.context);
        }
        checkNoChanges() {
        }
        attachToViewContainerRef() {
          if (this._appRef)
            throw new ft(902, false);
          this._attachedToViewContainer = true;
        }
        detachFromAppRef() {
          this._appRef = null, function(t4, e4) {
            Sr(t4, e4, e4[Jt], 2, null, null);
          }(this._lView[1], this._lView);
        }
        attachToAppRef(t4) {
          if (this._attachedToViewContainer)
            throw new ft(902, false);
          this._appRef = t4;
        }
      }
      class Co extends ko {
        constructor(t4) {
          super(t4), this._view = t4;
        }
        detectChanges() {
          const t4 = this._view;
          po(t4[1], t4, t4[8], false);
        }
        checkNoChanges() {
        }
        get context() {
          return null;
        }
      }
      class To extends ns {
        constructor(t4) {
          super(), this.ngModule = t4;
        }
        resolveComponentFactory(t4) {
          const e4 = Qt(t4);
          return new So(e4, this.ngModule);
        }
      }
      function Eo(t4) {
        const e4 = [];
        for (let n3 in t4)
          t4.hasOwnProperty(n3) && e4.push({ propName: t4[n3], templateName: n3 });
        return e4;
      }
      class xo {
        constructor(t4, e4) {
          this.injector = t4, this.parentInjector = e4;
        }
        get(t4, e4, n3) {
          const r2 = this.injector.get(t4, cs, n3);
          return r2 !== cs || e4 === cs ? r2 : this.parentInjector.get(t4, e4, n3);
        }
      }
      class So extends ts {
        constructor(t4, e4) {
          super(), this.componentDef = t4, this.ngModule = e4, this.componentType = t4.type, this.selector = function(t5) {
            return t5.map(Cs).join(",");
          }(t4.selectors), this.ngContentSelectors = t4.ngContentSelectors ? t4.ngContentSelectors : [], this.isBoundToModule = !!e4;
        }
        get inputs() {
          return Eo(this.componentDef.inputs);
        }
        get outputs() {
          return Eo(this.componentDef.outputs);
        }
        create(t4, e4, n3, r2) {
          let s2 = (r2 = r2 || this.ngModule) instanceof Gr ? r2 : r2 == null ? void 0 : r2.injector;
          s2 && null !== this.componentDef.getStandaloneInjector && (s2 = this.componentDef.getStandaloneInjector(s2) || s2);
          const o2 = s2 ? new xo(t4, s2) : t4, i2 = o2.get(is, null);
          if (null === i2)
            throw new ft(407, false);
          const l2 = o2.get(as, null), a2 = i2.createRenderer(null, this.componentDef), u2 = this.componentDef.selectors[0][0] || "div", c2 = n3 ? function(t5, e5, n4) {
            return t5.selectRootElement(e5, n4 === Vt.ShadowDom);
          }(a2, n3, this.componentDef.encapsulation) : hr(a2, u2, function(t5) {
            const e5 = t5.toLowerCase();
            return "svg" === e5 ? "svg" : "math" === e5 ? "math" : null;
          }(u2)), h2 = this.componentDef.onPush ? 288 : 272, d2 = Gs(0, null, null, 1, 0, null, null, null, null, null), f2 = Hs(null, d2, null, h2, null, null, i2, a2, l2, o2, null);
          let p2, g2;
          Ze(f2);
          try {
            const t5 = function(t6, e5, n4, r3, s3, o3) {
              const i3 = n4[1];
              n4[22] = t6;
              const l3 = Ms(i3, 22, 2, "#host", null), a3 = l3.mergedAttrs = e5.hostAttrs;
              null !== a3 && (wo(l3, a3, true), null !== t6 && (en(s3, t6, a3), null !== l3.classes && Or(s3, t6, l3.classes), null !== l3.styles && Ir(s3, t6, l3.styles)));
              const u3 = r3.createRenderer(t6, e5), c3 = Hs(n4, $s(e5), null, e5.onPush ? 32 : 16, n4[22], l3, r3, u3, null, null, null);
              return i3.firstCreatePass && (mn(pn(l3, n4), i3, e5.type), to(i3, l3), no(l3, n4.length, 1)), ho(n4, c3), n4[22] = c3;
            }(c2, this.componentDef, f2, i2, a2);
            if (c2)
              if (n3)
                en(a2, c2, ["ng-version", us.full]);
              else {
                const { attrs: t6, classes: e5 } = function(t7) {
                  const e6 = [], n4 = [];
                  let r3 = 1, s3 = 2;
                  for (; r3 < t7.length; ) {
                    let o3 = t7[r3];
                    if ("string" == typeof o3)
                      2 === s3 ? "" !== o3 && e6.push(o3, t7[++r3]) : 8 === s3 && n4.push(o3);
                    else {
                      if (!vs(s3))
                        break;
                      s3 = o3;
                    }
                    r3++;
                  }
                  return { attrs: e6, classes: n4 };
                }(this.componentDef.selectors[0]);
                t6 && en(a2, c2, t6), e5 && e5.length > 0 && Or(a2, c2, e5.join(" "));
              }
            if (g2 = me(d2, Yt), void 0 !== e4) {
              const t6 = g2.projection = [];
              for (let n4 = 0; n4 < this.ngContentSelectors.length; n4++) {
                const r3 = e4[n4];
                t6.push(null != r3 ? Array.from(r3) : null);
              }
            }
            p2 = function(t6, e5, n4, r3) {
              const s3 = n4[1], o3 = function(t7, e6, n5) {
                const r4 = Oe();
                t7.firstCreatePass && (n5.providersResolver && n5.providersResolver(n5), ro(t7, r4, e6, Zs(t7, e6, 1, null), n5), Qs(t7, r4));
                const s4 = Tn(e6, t7, r4.directiveStart, r4);
                sr(s4, e6);
                const o4 = ye(r4, e6);
                return o4 && sr(o4, e6), s4;
              }(s3, n4, e5);
              if (t6[8] = n4[8] = o3, null !== r3)
                for (const t7 of r3)
                  t7(o3, e5);
              if (e5.contentQueries) {
                const t7 = Oe();
                e5.contentQueries(1, o3, t7.directiveStart);
              }
              const i3 = Oe();
              return !s3.firstCreatePass || null === e5.hostBindings && null === e5.hostAttrs || (Ge(i3.index), Js(n4[1], i3, 0, i3.directiveStart, i3.directiveEnd, e5), Ys(e5, o3)), o3;
            }(t5, this.componentDef, f2, [Io]), Ls(d2, f2, null);
          } finally {
            qe();
          }
          return new Ao(this.componentType, p2, ss(g2, f2), f2, g2);
        }
      }
      class Ao extends class {
      } {
        constructor(t4, e4, n3, r2, s2) {
          super(), this.location = n3, this._rootLView = r2, this._tNode = s2, this.instance = e4, this.hostView = this.changeDetectorRef = new Co(r2), this.componentType = t4;
        }
        setInput(t4, e4) {
          const n3 = this._tNode.inputs;
          let r2;
          if (null !== n3 && (r2 = n3[t4])) {
            const n4 = this._rootLView;
            vo(n4[1], n4, r2, t4, e4), Ks(n4, this._tNode.index);
          }
        }
        get injector() {
          return new Sn(this._tNode, this._rootLView);
        }
        destroy() {
          this.hostView.destroy();
        }
        onDestroy(t4) {
          this.hostView.onDestroy(t4);
        }
      }
      function Io() {
        const t4 = Oe();
        We(xe()[1], t4);
      }
      function Oo(t4) {
        let e4 = function(t5) {
          return Object.getPrototypeOf(t5.prototype).constructor;
        }(t4.type), n3 = true;
        const r2 = [t4];
        for (; e4; ) {
          let s2;
          if (oe(t4))
            s2 = e4.\u0275cmp || e4.\u0275dir;
          else {
            if (e4.\u0275cmp)
              throw new ft(903, false);
            s2 = e4.\u0275dir;
          }
          if (s2) {
            if (n3) {
              r2.push(s2);
              const e6 = t4;
              e6.inputs = Do(t4.inputs), e6.declaredInputs = Do(t4.declaredInputs), e6.outputs = Do(t4.outputs);
              const n4 = s2.hostBindings;
              n4 && Ro(t4, n4);
              const o2 = s2.viewQuery, i2 = s2.contentQueries;
              if (o2 && Vo(t4, o2), i2 && Po(t4, i2), it(t4.inputs, s2.inputs), it(t4.declaredInputs, s2.declaredInputs), it(t4.outputs, s2.outputs), oe(s2) && s2.data.animation) {
                const e7 = t4.data;
                e7.animation = (e7.animation || []).concat(s2.data.animation);
              }
            }
            const e5 = s2.features;
            if (e5)
              for (let r3 = 0; r3 < e5.length; r3++) {
                const s3 = e5[r3];
                s3 && s3.ngInherit && s3(t4), s3 === Oo && (n3 = false);
              }
          }
          e4 = Object.getPrototypeOf(e4);
        }
        !function(t5) {
          let e5 = 0, n4 = null;
          for (let r3 = t5.length - 1; r3 >= 0; r3--) {
            const s2 = t5[r3];
            s2.hostVars = e5 += s2.hostVars, s2.hostAttrs = sn(s2.hostAttrs, n4 = sn(n4, s2.hostAttrs));
          }
        }(r2);
      }
      function Do(t4) {
        return t4 === Rt ? {} : t4 === jt ? [] : t4;
      }
      function Vo(t4, e4) {
        const n3 = t4.viewQuery;
        t4.viewQuery = n3 ? (t5, r2) => {
          e4(t5, r2), n3(t5, r2);
        } : e4;
      }
      function Po(t4, e4) {
        const n3 = t4.contentQueries;
        t4.contentQueries = n3 ? (t5, r2, s2) => {
          e4(t5, r2, s2), n3(t5, r2, s2);
        } : e4;
      }
      function Ro(t4, e4) {
        const n3 = t4.hostBindings;
        t4.hostBindings = n3 ? (t5, r2) => {
          e4(t5, r2), n3(t5, r2);
        } : e4;
      }
      let jo = null;
      function No() {
        if (!jo) {
          const t4 = Pt.Symbol;
          if (t4 && t4.iterator)
            jo = t4.iterator;
          else {
            const t5 = Object.getOwnPropertyNames(Map.prototype);
            for (let e4 = 0; e4 < t5.length; ++e4) {
              const n3 = t5[e4];
              "entries" !== n3 && "size" !== n3 && Map.prototype[n3] === Map.prototype.entries && (jo = n3);
            }
          }
        }
        return jo;
      }
      function Fo(t4) {
        return !!Ho(t4) && (Array.isArray(t4) || !(t4 instanceof Map) && No() in t4);
      }
      function Ho(t4) {
        return null !== t4 && ("function" == typeof t4 || "object" == typeof t4);
      }
      function Mo(t4, e4, n3) {
        return !Object.is(t4[e4], n3) && (t4[e4] = n3, true);
      }
      function Zo(t4, e4, n3, r2, s2, o2, i2, l2) {
        const a2 = xe(), u2 = Se(), c2 = t4 + Yt, h2 = u2.firstCreatePass ? function(t5, e5, n4, r3, s3, o3, i3, l3, a3) {
          const u3 = e5.consts, c3 = Ms(e5, t5, 4, i3 || null, be(u3, l3));
          Xs(e5, n4, c3, be(u3, a3)), We(e5, c3);
          const h3 = c3.tViews = Gs(2, c3, r3, s3, o3, e5.directiveRegistry, e5.pipeRegistry, null, e5.schemas, u3);
          return null !== e5.queries && (e5.queries.template(e5, c3), h3.queries = e5.queries.embeddedTView(c3)), c3;
        }(c2, u2, a2, e4, n3, r2, s2, o2, i2) : u2.data[c2];
        Ve(h2, false);
        const d2 = a2[Jt].createComment("");
        kr(u2, a2, d2, h2), sr(d2, a2), ho(a2, a2[c2] = lo(d2, a2, d2, h2)), se(h2) && Us(u2, a2, h2), null != i2 && qs(a2, h2, l2);
      }
      function Lo(t4, e4, n3) {
        const r2 = xe();
        return Mo(r2, Re(), e4) && function(t5, e5, n4, r3, s2, o2, i2, l2) {
          const a2 = ye(e5, n4);
          let u2, c2 = e5.inputs;
          null != c2 && (u2 = c2[r3]) ? (vo(t5, n4, u2, r3, s2), re(e5) && Ks(n4, e5.index)) : 3 & e5.type && (r3 = function(t6) {
            return "class" === t6 ? "className" : "for" === t6 ? "htmlFor" : "formaction" === t6 ? "formAction" : "innerHtml" === t6 ? "innerHTML" : "readonly" === t6 ? "readOnly" : "tabindex" === t6 ? "tabIndex" : t6;
          }(r3), s2 = null != i2 ? i2(s2, e5.value || "", r3) : s2, o2.setProperty(a2, r3, s2));
        }(Se(), function() {
          const t5 = Te.lFrame;
          return me(t5.tView, t5.selectedIndex);
        }(), r2, t4, e4, r2[Jt], n3), Lo;
      }
      function zo(t4, e4, n3, r2, s2) {
        const o2 = s2 ? "class" : "style";
        vo(t4, n3, e4.inputs[o2], o2, r2);
      }
      function Bo(t4, e4, n3, r2) {
        const s2 = xe(), o2 = Se(), i2 = Yt + t4, l2 = s2[Jt], a2 = s2[i2] = hr(l2, e4, Te.lFrame.currentNamespace), u2 = o2.firstCreatePass ? function(t5, e5, n4, r3, s3, o3, i3) {
          const l3 = e5.consts, a3 = Ms(e5, t5, 2, s3, be(l3, o3));
          return Xs(e5, n4, a3, be(l3, i3)), null !== a3.attrs && wo(a3, a3.attrs, false), null !== a3.mergedAttrs && wo(a3, a3.mergedAttrs, true), null !== e5.queries && e5.queries.elementStart(e5, a3), a3;
        }(i2, o2, s2, 0, e4, n3, r2) : o2.data[i2];
        Ve(u2, true);
        const c2 = u2.mergedAttrs;
        null !== c2 && en(l2, a2, c2);
        const h2 = u2.classes;
        null !== h2 && Or(l2, a2, h2);
        const d2 = u2.styles;
        return null !== d2 && Ir(l2, a2, d2), 64 != (64 & u2.flags) && kr(o2, s2, a2, u2), 0 === Te.lFrame.elementDepthCount && sr(a2, s2), Te.lFrame.elementDepthCount++, se(u2) && (Us(o2, s2, u2), function(t5, e5, n4) {
          if (ne(e5)) {
            const r3 = e5.directiveEnd;
            for (let s3 = e5.directiveStart; s3 < r3; s3++) {
              const e6 = t5.data[s3];
              e6.contentQueries && e6.contentQueries(1, n4[s3], s3);
            }
          }
        }(o2, u2, s2)), null !== r2 && qs(s2, u2), Bo;
      }
      function Uo() {
        let t4 = Oe();
        Pe() ? Te.lFrame.isParent = false : (t4 = t4.parent, Ve(t4, false));
        const e4 = t4;
        Te.lFrame.elementDepthCount--;
        const n3 = Se();
        return n3.firstCreatePass && (We(n3, t4), ne(t4) && n3.queries.elementEnd(t4)), null != e4.classesWithoutHost && function(t5) {
          return 0 != (16 & t5.flags);
        }(e4) && zo(n3, e4, xe(), e4.classesWithoutHost, true), null != e4.stylesWithoutHost && function(t5) {
          return 0 != (32 & t5.flags);
        }(e4) && zo(n3, e4, xe(), e4.stylesWithoutHost, false), Uo;
      }
      function qo() {
        return xe();
      }
      function $o(t4) {
        return !!t4 && "function" == typeof t4.then;
      }
      const Go = function(t4) {
        return !!t4 && "function" == typeof t4.subscribe;
      };
      function Wo(t4, e4, n3, r2) {
        const s2 = xe(), o2 = Se(), i2 = Oe();
        return function(t5, e5, n4, r3, s3, o3, i3, l2) {
          const a2 = se(r3), u2 = t5.firstCreatePass && yo(t5), c2 = (e5[8], _o(e5));
          let h2 = true;
          if (3 & r3.type || l2) {
            const i4 = ye(r3, e5), d3 = l2 ? l2(i4) : i4, f3 = c2.length, p2 = l2 ? (t6) => l2(ge(t6[r3.index])) : r3.index;
            let g2 = null;
            if (!l2 && a2 && (g2 = function(t6, e6, n5, r4) {
              const s4 = t6.cleanup;
              if (null != s4)
                for (let t7 = 0; t7 < s4.length - 1; t7 += 2) {
                  const o4 = s4[t7];
                  if (o4 === n5 && s4[t7 + 1] === r4) {
                    const n6 = e6[7], r5 = s4[t7 + 2];
                    return n6.length > r5 ? n6[r5] : null;
                  }
                  "string" == typeof o4 && (t7 += 2);
                }
              return null;
            }(t5, e5, s3, r3.index)), null !== g2)
              (g2.__ngLastListenerFn__ || g2).__ngNextListenerFn__ = o3, g2.__ngLastListenerFn__ = o3, h2 = false;
            else {
              o3 = Ko(r3, e5, 0, o3, false);
              const t6 = n4.listen(d3, s3, o3);
              c2.push(o3, t6), u2 && u2.push(s3, p2, f3, f3 + 1);
            }
          } else
            o3 = Ko(r3, e5, 0, o3, false);
          const d2 = r3.outputs;
          let f2;
          if (h2 && null !== d2 && (f2 = d2[s3])) {
            const t6 = f2.length;
            if (t6)
              for (let n5 = 0; n5 < t6; n5 += 2) {
                const t7 = e5[f2[n5]][f2[n5 + 1]].subscribe(o3), i4 = c2.length;
                c2.push(o3, t7), u2 && u2.push(s3, r3.index, i4, -(i4 + 1));
              }
          }
        }(o2, s2, s2[Jt], i2, t4, e4, 0, r2), Wo;
      }
      function Qo(t4, e4, n3, r2) {
        try {
          return false !== n3(r2);
        } catch (e5) {
          return mo(t4, e5), false;
        }
      }
      function Ko(t4, e4, n3, r2, s2) {
        return function n4(o2) {
          if (o2 === Function)
            return r2;
          fo(2 & t4.flags ? ve(t4.index, e4) : e4);
          let i2 = Qo(e4, 0, r2, o2), l2 = n4.__ngNextListenerFn__;
          for (; l2; )
            i2 = Qo(e4, 0, l2, o2) && i2, l2 = l2.__ngNextListenerFn__;
          return s2 && false === i2 && (o2.preventDefault(), o2.returnValue = false), i2;
        };
      }
      function Xo(t4 = 1) {
        return function(t5) {
          return (Te.lFrame.contextLView = function(t6, e4) {
            for (; t6 > 0; )
              e4 = e4[15], t6--;
            return e4;
          }(t5, Te.lFrame.contextLView))[8];
        }(t4);
      }
      function Jo(t4, e4, n3, r2, s2) {
        const o2 = t4[n3 + 1], i2 = null === e4;
        let l2 = r2 ? Vs(o2) : Rs(o2), a2 = false;
        for (; 0 !== l2 && (false === a2 || i2); ) {
          const n4 = t4[l2 + 1];
          Yo(t4[l2], e4) && (a2 = true, t4[l2 + 1] = r2 ? Ns(n4) : Ps(n4)), l2 = r2 ? Vs(n4) : Rs(n4);
        }
        a2 && (t4[n3 + 1] = r2 ? Ps(o2) : Ns(o2));
      }
      function Yo(t4, e4) {
        return null === t4 || null == e4 || (Array.isArray(t4) ? t4[1] : t4) === e4 || !(!Array.isArray(t4) || "string" != typeof e4) && Mn(t4, e4) >= 0;
      }
      function ti(t4, e4) {
        return function(t5, e5, n3, r2) {
          const s2 = xe(), o2 = Se(), i2 = function(t6) {
            const e6 = Te.lFrame, n4 = e6.bindingIndex;
            return e6.bindingIndex = e6.bindingIndex + 2, n4;
          }();
          o2.firstUpdatePass && function(t6, e6, n4, r3) {
            const s3 = t6.data;
            if (null === s3[n4 + 1]) {
              const o3 = s3[$e()], i3 = function(t7, e7) {
                return e7 >= t7.expandoStartIndex;
              }(t6, n4);
              (function(t7, e7) {
                return 0 != (16 & t7.flags);
              })(o3) && null === e6 && !i3 && (e6 = false), e6 = function(t7, e7, n5, r4) {
                const s4 = function(t8) {
                  const e8 = Te.lFrame.currentDirectiveIndex;
                  return -1 === e8 ? null : t8[e8];
                }(t7);
                let o4 = e7.residualClasses;
                if (null === s4)
                  0 === e7.classBindings && (n5 = ni(n5 = ei(null, t7, e7, n5, r4), e7.attrs, r4), o4 = null);
                else {
                  const i4 = e7.directiveStylingLast;
                  if (-1 === i4 || t7[i4] !== s4)
                    if (n5 = ei(s4, t7, e7, n5, r4), null === o4) {
                      let n6 = function(t8, e8, n7) {
                        const r5 = e8.classBindings;
                        if (0 !== Rs(r5))
                          return t8[Vs(r5)];
                      }(t7, e7);
                      void 0 !== n6 && Array.isArray(n6) && (n6 = ei(null, t7, e7, n6[1], r4), n6 = ni(n6, e7.attrs, r4), function(t8, e8, n7, r5) {
                        t8[Vs(e8.classBindings)] = r5;
                      }(t7, e7, 0, n6));
                    } else
                      o4 = function(t8, e8, n6) {
                        let r5;
                        const s5 = e8.directiveEnd;
                        for (let n7 = 1 + e8.directiveStylingLast; n7 < s5; n7++)
                          r5 = ni(r5, t8[n7].hostAttrs, true);
                        return ni(r5, e8.attrs, true);
                      }(t7, e7);
                }
                return void 0 !== o4 && (e7.residualClasses = o4), n5;
              }(s3, o3, e6, r3), function(t7, e7, n5, r4, s4, o4) {
                let i4 = e7.classBindings, l2 = Vs(i4), a2 = Rs(i4);
                t7[r4] = n5;
                let u2, c2 = false;
                if (Array.isArray(n5)) {
                  const t8 = n5;
                  u2 = t8[1], (null === u2 || Mn(t8, u2) > 0) && (c2 = true);
                } else
                  u2 = n5;
                if (s4)
                  if (0 !== a2) {
                    const e8 = Vs(t7[l2 + 1]);
                    t7[r4 + 1] = Ds(e8, l2), 0 !== e8 && (t7[e8 + 1] = js(t7[e8 + 1], r4)), t7[l2 + 1] = function(t8, e9) {
                      return 131071 & t8 | e9 << 17;
                    }(t7[l2 + 1], r4);
                  } else
                    t7[r4 + 1] = Ds(l2, 0), 0 !== l2 && (t7[l2 + 1] = js(t7[l2 + 1], r4)), l2 = r4;
                else
                  t7[r4 + 1] = Ds(a2, 0), 0 === l2 ? l2 = r4 : t7[a2 + 1] = js(t7[a2 + 1], r4), a2 = r4;
                c2 && (t7[r4 + 1] = Ps(t7[r4 + 1])), Jo(t7, u2, r4, true), Jo(t7, u2, r4, false), function(t8, e8, n6, r5, s5) {
                  const o5 = t8.residualClasses;
                  null != o5 && "string" == typeof e8 && Mn(o5, e8) >= 0 && (n6[r5 + 1] = Ns(n6[r5 + 1]));
                }(e7, u2, t7, r4), i4 = Ds(l2, a2), e7.classBindings = i4;
              }(s3, o3, e6, n4, i3);
            }
          }(o2, t5, i2, true), e5 !== Ts && Mo(s2, i2, e5) && function(t6, e6, n4, r3, s3, o3, i3, l2) {
            if (!(3 & e6.type))
              return;
            const a2 = t6.data, u2 = a2[l2 + 1];
            si(function(t7) {
              return 1 == (1 & t7);
            }(u2) ? ri(a2, e6, n4, s3, Rs(u2), i3) : void 0) || (si(o3) || function(t7) {
              return 2 == (2 & t7);
            }(u2) && (o3 = ri(a2, null, n4, s3, l2, i3)), function(t7, e7, n5, r4, s4) {
              s4 ? t7.addClass(n5, r4) : t7.removeClass(n5, r4);
            }(r3, 0, _e($e(), n4), s3, o3));
          }(o2, o2.data[$e()], s2, s2[Jt], t5, s2[i2 + 1] = function(t6, e6) {
            return null == t6 || "object" == typeof t6 && (t6 = lt(function(t7) {
              return t7 instanceof class {
                constructor(t8) {
                  this.changingThisBreaksApplicationSecurity = t8;
                }
                toString() {
                  return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`;
                }
              } ? t7.changingThisBreaksApplicationSecurity : t7;
            }(t6))), t6;
          }(e5), true, i2);
        }(t4, e4), ti;
      }
      function ei(t4, e4, n3, r2, s2) {
        let o2 = null;
        const i2 = n3.directiveEnd;
        let l2 = n3.directiveStylingLast;
        for (-1 === l2 ? l2 = n3.directiveStart : l2++; l2 < i2 && (o2 = e4[l2], r2 = ni(r2, o2.hostAttrs, s2), o2 !== t4); )
          l2++;
        return null !== t4 && (n3.directiveStylingLast = l2), r2;
      }
      function ni(t4, e4, n3) {
        const r2 = n3 ? 1 : 2;
        let s2 = -1;
        if (null !== e4)
          for (let o2 = 0; o2 < e4.length; o2++) {
            const i2 = e4[o2];
            "number" == typeof i2 ? s2 = i2 : s2 === r2 && (Array.isArray(t4) || (t4 = void 0 === t4 ? [] : ["", t4]), Fn(t4, i2, !!n3 || e4[++o2]));
          }
        return void 0 === t4 ? null : t4;
      }
      function ri(t4, e4, n3, r2, s2, o2) {
        const i2 = null === e4;
        let l2;
        for (; s2 > 0; ) {
          const e5 = t4[s2], o3 = Array.isArray(e5), a2 = o3 ? e5[1] : e5, u2 = null === a2;
          let c2 = n3[s2 + 1];
          c2 === Ts && (c2 = u2 ? jt : void 0);
          let h2 = u2 ? Hn(c2, r2) : a2 === r2 ? c2 : void 0;
          if (o3 && !si(h2) && (h2 = Hn(e5, r2)), si(h2) && (l2 = h2, i2))
            return l2;
          const d2 = t4[s2 + 1];
          s2 = i2 ? Vs(d2) : Rs(d2);
        }
        if (null !== e4) {
          let t5 = o2 ? e4.residualClasses : e4.residualStyles;
          null != t5 && (l2 = Hn(t5, r2));
        }
        return l2;
      }
      function si(t4) {
        return void 0 !== t4;
      }
      function oi(t4, e4 = "") {
        const n3 = xe(), r2 = Se(), s2 = t4 + Yt, o2 = r2.firstCreatePass ? Ms(r2, s2, 1, e4, null) : r2.data[s2], i2 = n3[s2] = function(t5, e5) {
          return t5.createText(e5);
        }(n3[Jt], e4);
        kr(r2, n3, i2, o2), Ve(o2, false);
      }
      function ii(t4) {
        return li("", t4, ""), ii;
      }
      function li(t4, e4, n3) {
        const r2 = xe(), s2 = function(t5, e5, n4, r3) {
          return Mo(t5, Re(), n4) ? e5 + pt(n4) + r3 : Ts;
        }(r2, t4, e4, n3);
        return s2 !== Ts && function(t5, e5, n4) {
          const r3 = _e(e5, t5);
          !function(t6, e6, n5) {
            t6.setValue(e6, n5);
          }(t5[Jt], r3, n4);
        }(r2, $e(), s2), li;
      }
      const ai = "en-US";
      let ui = ai;
      function ci(t4, e4, n3, r2, s2) {
        if (t4 = ht(t4), Array.isArray(t4))
          for (let o2 = 0; o2 < t4.length; o2++)
            ci(t4[o2], e4, n3, r2, s2);
        else {
          const o2 = Se(), i2 = xe();
          let l2 = Lr(t4) ? t4 : ht(t4.provide), a2 = Kr(t4);
          const u2 = Oe(), c2 = 1048575 & u2.providerIndexes, h2 = u2.directiveStart, d2 = u2.providerIndexes >> 20;
          if (Lr(t4) || !t4.multi) {
            const r3 = new tn(a2, s2, Os), f2 = fi(l2, e4, s2 ? c2 : c2 + d2, h2);
            -1 === f2 ? (mn(pn(u2, i2), o2, l2), hi(o2, t4, e4.length), e4.push(l2), u2.directiveStart++, u2.directiveEnd++, s2 && (u2.providerIndexes += 1048576), n3.push(r3), i2.push(r3)) : (n3[f2] = r3, i2[f2] = r3);
          } else {
            const f2 = fi(l2, e4, c2 + d2, h2), p2 = fi(l2, e4, c2, c2 + d2), g2 = f2 >= 0 && n3[f2], _2 = p2 >= 0 && n3[p2];
            if (s2 && !_2 || !s2 && !g2) {
              mn(pn(u2, i2), o2, l2);
              const c3 = function(t5, e5, n4, r3, s3) {
                const o3 = new tn(t5, n4, Os);
                return o3.multi = [], o3.index = e5, o3.componentProviders = 0, di(o3, s3, r3 && !n4), o3;
              }(s2 ? gi : pi, n3.length, s2, r2, a2);
              !s2 && _2 && (n3[p2].providerFactory = c3), hi(o2, t4, e4.length, 0), e4.push(l2), u2.directiveStart++, u2.directiveEnd++, s2 && (u2.providerIndexes += 1048576), n3.push(c3), i2.push(c3);
            } else
              hi(o2, t4, f2 > -1 ? f2 : p2, di(n3[s2 ? p2 : f2], a2, !s2 && r2));
            !s2 && r2 && _2 && n3[p2].componentProviders++;
          }
        }
      }
      function hi(t4, e4, n3, r2) {
        const s2 = Lr(e4), o2 = function(t5) {
          return !!t5.useClass;
        }(e4);
        if (s2 || o2) {
          const i2 = (o2 ? ht(e4.useClass) : e4).prototype.ngOnDestroy;
          if (i2) {
            const o3 = t4.destroyHooks || (t4.destroyHooks = []);
            if (!s2 && e4.multi) {
              const t5 = o3.indexOf(n3);
              -1 === t5 ? o3.push(n3, [r2, i2]) : o3[t5 + 1].push(r2, i2);
            } else
              o3.push(n3, i2);
          }
        }
      }
      function di(t4, e4, n3) {
        return n3 && t4.componentProviders++, t4.multi.push(e4) - 1;
      }
      function fi(t4, e4, n3, r2) {
        for (let s2 = n3; s2 < r2; s2++)
          if (e4[s2] === t4)
            return s2;
        return -1;
      }
      function pi(t4, e4, n3, r2) {
        return _i(this.multi, []);
      }
      function gi(t4, e4, n3, r2) {
        const s2 = this.multi;
        let o2;
        if (this.providerFactory) {
          const t5 = this.providerFactory.componentProviders, e5 = Tn(n3, n3[1], this.providerFactory.index, r2);
          o2 = e5.slice(0, t5), _i(s2, o2);
          for (let n4 = t5; n4 < e5.length; n4++)
            o2.push(e5[n4]);
        } else
          o2 = [], _i(s2, o2);
        return o2;
      }
      function _i(t4, e4) {
        for (let n3 = 0; n3 < t4.length; n3++)
          e4.push((0, t4[n3])());
        return e4;
      }
      function yi(t4, e4 = []) {
        return (n3) => {
          n3.providersResolver = (n4, r2) => function(t5, e5, n5) {
            const r3 = Se();
            if (r3.firstCreatePass) {
              const s2 = oe(t5);
              ci(n5, r3.data, r3.blueprint, s2, true), ci(e5, r3.data, r3.blueprint, s2, false);
            }
          }(n4, r2 ? r2(t4) : t4, e4);
        };
      }
      class mi {
      }
      class vi extends mi {
        constructor(t4, e4) {
          super(), this._parent = e4, this._bootstrapComponents = [], this.destroyCbs = [], this.componentFactoryResolver = new To(this);
          const n3 = function(t5, e5) {
            const n4 = t5[Mt] || null;
            return n4;
          }(t4);
          this._bootstrapComponents = function(t5) {
            return t5 instanceof Function ? t5() : t5;
          }(n3.bootstrap), this._r3Injector = As(t4, e4, [{ provide: mi, useValue: this }, { provide: ns, useValue: this.componentFactoryResolver }], lt(t4), /* @__PURE__ */ new Set(["environment"])), this._r3Injector.resolveInjectorInitializers(), this.instance = this._r3Injector.get(t4);
        }
        get injector() {
          return this._r3Injector;
        }
        destroy() {
          const t4 = this._r3Injector;
          !t4.destroyed && t4.destroy(), this.destroyCbs.forEach((t5) => t5()), this.destroyCbs = null;
        }
        onDestroy(t4) {
          this.destroyCbs.push(t4);
        }
      }
      class wi extends class {
      } {
        constructor(t4) {
          super(), this.moduleType = t4;
        }
        create(t4) {
          return new vi(this.moduleType, t4);
        }
      }
      function bi(t4, e4, n3, r2) {
        return function(t5, e5, n4, r3, s2, o2) {
          const i2 = e5 + n4;
          return Mo(t5, i2, s2) ? function(t6, e6, n5) {
            return t6[e6] = n5;
          }(t5, i2 + 1, o2 ? r3.call(o2, s2) : r3(s2)) : function(t6, e6) {
            const n5 = t6[e6];
            return n5 === Ts ? void 0 : n5;
          }(t5, i2 + 1);
        }(xe(), function() {
          const t5 = Te.lFrame;
          let e5 = t5.bindingRootIndex;
          return -1 === e5 && (e5 = t5.bindingRootIndex = t5.tView.bindingStartIndex), e5;
        }(), t4, e4, n3, r2);
      }
      function ki(t4) {
        return (e4) => {
          setTimeout(t4, void 0, e4);
        };
      }
      const Ci = class extends O {
        constructor(t4 = false) {
          super(), this.__isAsync = t4;
        }
        emit(t4) {
          super.next(t4);
        }
        subscribe(t4, e4, n3) {
          var _a2, _b, _c;
          let r2 = t4, s2 = e4 || (() => null), i2 = n3;
          if (t4 && "object" == typeof t4) {
            const e5 = t4;
            r2 = (_a2 = e5.next) == null ? void 0 : _a2.bind(e5), s2 = (_b = e5.error) == null ? void 0 : _b.bind(e5), i2 = (_c = e5.complete) == null ? void 0 : _c.bind(e5);
          }
          this.__isAsync && (s2 = ki(s2), r2 && (r2 = ki(r2)), i2 && (i2 = ki(i2)));
          const l2 = super.subscribe({ next: r2, error: s2, complete: i2 });
          return t4 instanceof o && t4.add(l2), l2;
        }
      };
      let Ti = (() => {
        class t4 {
        }
        return t4.__NG_ELEMENT_ID__ = Si, t4;
      })();
      const Ei = Ti, xi = class extends Ei {
        constructor(t4, e4, n3) {
          super(), this._declarationLView = t4, this._declarationTContainer = e4, this.elementRef = n3;
        }
        createEmbeddedView(t4, e4) {
          const n3 = this._declarationTContainer.tViews, r2 = Hs(this._declarationLView, n3, t4, 16, null, n3.declTNode, null, null, null, null, e4 || null);
          r2[17] = this._declarationLView[this._declarationTContainer.index];
          const s2 = this._declarationLView[19];
          return null !== s2 && (r2[19] = s2.createEmbeddedView(n3)), Ls(n3, r2, t4), new ko(r2);
        }
      };
      function Si() {
        return function(t4, e4) {
          return 4 & t4.type ? new xi(e4, t4, ss(t4, e4)) : null;
        }(Oe(), xe());
      }
      let Ai = (() => {
        class t4 {
        }
        return t4.__NG_ELEMENT_ID__ = Ii, t4;
      })();
      function Ii() {
        return function(t4, e4) {
          let n3;
          const r2 = e4[t4.index];
          if (ee(r2))
            n3 = r2;
          else {
            let s2;
            if (8 & t4.type)
              s2 = ge(r2);
            else {
              const n4 = e4[Jt];
              s2 = n4.createComment("");
              const r3 = ye(t4, e4);
              _r(n4, vr(n4, r3), s2, function(t5, e5) {
                return t5.nextSibling(e5);
              }(n4, r3), false);
            }
            e4[t4.index] = n3 = lo(r2, e4, s2, t4), ho(e4, n3);
          }
          return new Di(n3, t4, e4);
        }(Oe(), xe());
      }
      const Oi = Ai, Di = class extends Oi {
        constructor(t4, e4, n3) {
          super(), this._lContainer = t4, this._hostTNode = e4, this._hostLView = n3;
        }
        get element() {
          return ss(this._hostTNode, this._hostLView);
        }
        get injector() {
          return new Sn(this._hostTNode, this._hostLView);
        }
        get parentInjector() {
          const t4 = yn(this._hostTNode, this._hostLView);
          if (ln(t4)) {
            const e4 = un(t4, this._hostLView), n3 = an(t4);
            return new Sn(e4[1].data[n3 + 8], e4);
          }
          return new Sn(null, this._hostLView);
        }
        clear() {
          for (; this.length > 0; )
            this.remove(this.length - 1);
        }
        get(t4) {
          const e4 = Vi(this._lContainer);
          return null !== e4 && e4[t4] || null;
        }
        get length() {
          return this._lContainer.length - 10;
        }
        createEmbeddedView(t4, e4, n3) {
          let r2, s2;
          "number" == typeof n3 ? r2 = n3 : null != n3 && (r2 = n3.index, s2 = n3.injector);
          const o2 = t4.createEmbeddedView(e4 || {}, s2);
          return this.insert(o2, r2), o2;
        }
        createComponent(t4, e4, n3, r2, s2) {
          const o2 = t4 && !function(t5) {
            return "function" == typeof t5;
          }(t4);
          let i2;
          if (o2)
            i2 = e4;
          else {
            const t5 = e4 || {};
            i2 = t5.index, n3 = t5.injector, r2 = t5.projectableNodes, s2 = t5.environmentInjector || t5.ngModuleRef;
          }
          const l2 = o2 ? t4 : new So(Qt(t4)), a2 = n3 || this.parentInjector;
          if (!s2 && null == l2.ngModule) {
            const t5 = (o2 ? a2 : this.parentInjector).get(Gr, null);
            t5 && (s2 = t5);
          }
          const u2 = l2.create(a2, r2, void 0, s2);
          return this.insert(u2.hostView, i2), u2;
        }
        insert(t4, e4) {
          const n3 = t4._lView, r2 = n3[1];
          if (function(t5) {
            return ee(t5[3]);
          }(n3)) {
            const e5 = this.indexOf(t4);
            if (-1 !== e5)
              this.detach(e5);
            else {
              const e6 = n3[3], r3 = new Di(e6, e6[6], e6[3]);
              r3.detach(r3.indexOf(t4));
            }
          }
          const s2 = this._adjustIndex(e4), o2 = this._lContainer;
          !function(t5, e5, n4, r3) {
            const s3 = 10 + r3, o3 = n4.length;
            r3 > 0 && (n4[s3 - 1][4] = e5), r3 < o3 - 10 ? (e5[4] = n4[s3], jn(n4, 10 + r3, e5)) : (n4.push(e5), e5[4] = null), e5[3] = n4;
            const i3 = e5[17];
            null !== i3 && n4 !== i3 && function(t6, e6) {
              const n5 = t6[9];
              e6[16] !== e6[3][3][16] && (t6[2] = true), null === n5 ? t6[9] = [e6] : n5.push(e6);
            }(i3, e5);
            const l3 = e5[19];
            null !== l3 && l3.insertView(t5), e5[2] |= 64;
          }(r2, n3, o2, s2);
          const i2 = Er(s2, o2), l2 = n3[Jt], a2 = vr(l2, o2[7]);
          return null !== a2 && function(t5, e5, n4, r3, s3, o3) {
            r3[0] = s3, r3[6] = e5, Sr(t5, r3, n4, 1, s3, o3);
          }(r2, o2[6], l2, n3, a2, i2), t4.attachToViewContainerRef(), jn(Pi(o2), s2, t4), t4;
        }
        move(t4, e4) {
          return this.insert(t4, e4);
        }
        indexOf(t4) {
          const e4 = Vi(this._lContainer);
          return null !== e4 ? e4.indexOf(t4) : -1;
        }
        remove(t4) {
          const e4 = this._adjustIndex(t4, -1), n3 = fr(this._lContainer, e4);
          n3 && (Nn(Pi(this._lContainer), e4), pr(n3[1], n3));
        }
        detach(t4) {
          const e4 = this._adjustIndex(t4, -1), n3 = fr(this._lContainer, e4);
          return n3 && null != Nn(Pi(this._lContainer), e4) ? new ko(n3) : null;
        }
        _adjustIndex(t4, e4 = 0) {
          return t4 != null ? t4 : this.length + e4;
        }
      };
      function Vi(t4) {
        return t4[8];
      }
      function Pi(t4) {
        return t4[8] || (t4[8] = []);
      }
      function Ri(...t4) {
      }
      const ji = new Pn("Application Initializer");
      let Ni = (() => {
        class t4 {
          constructor(t5) {
            this.appInits = t5, this.resolve = Ri, this.reject = Ri, this.initialized = false, this.done = false, this.donePromise = new Promise((t6, e4) => {
              this.resolve = t6, this.reject = e4;
            });
          }
          runInitializers() {
            if (this.initialized)
              return;
            const t5 = [], e4 = () => {
              this.done = true, this.resolve();
            };
            if (this.appInits)
              for (let e5 = 0; e5 < this.appInits.length; e5++) {
                const n3 = this.appInits[e5]();
                if ($o(n3))
                  t5.push(n3);
                else if (Go(n3)) {
                  const e6 = new Promise((t6, e7) => {
                    n3.subscribe({ complete: t6, error: e7 });
                  });
                  t5.push(e6);
                }
              }
            Promise.all(t5).then(() => {
              e4();
            }).catch((t6) => {
              this.reject(t6);
            }), 0 === t5.length && e4(), this.initialized = true;
          }
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)(Wn(ji, 8));
        }, t4.\u0275prov = _t({ token: t4, factory: t4.\u0275fac, providedIn: "root" }), t4;
      })();
      const Fi = new Pn("AppId", { providedIn: "root", factory: function() {
        return `${Hi()}${Hi()}${Hi()}`;
      } });
      function Hi() {
        return String.fromCharCode(97 + Math.floor(25 * Math.random()));
      }
      const Mi = new Pn("Platform Initializer"), Zi = new Pn("Platform ID", { providedIn: "platform", factory: () => "unknown" }), Li = new Pn("appBootstrapListener"), zi = new Pn("LocaleId", { providedIn: "root", factory: () => function(t4, e4 = Et.Default) {
        return "number" != typeof e4 && (e4 = 0 | (e4.optional && 8) | (e4.host && 1) | (e4.self && 2) | (e4.skipSelf && 4)), Wn(t4, e4);
      }(zi, Et.Optional | Et.SkipSelf) || typeof $localize < "u" && $localize.locale || ai }), Bi = Promise.resolve(0);
      function Ui(t4) {
        typeof Zone > "u" ? Bi.then(() => {
          t4 && t4.apply(null, null);
        }) : Zone.current.scheduleMicroTask("scheduleMicrotask", t4);
      }
      class qi {
        constructor({ enableLongStackTrace: t4 = false, shouldCoalesceEventChangeDetection: e4 = false, shouldCoalesceRunChangeDetection: n3 = false }) {
          if (this.hasPendingMacrotasks = false, this.hasPendingMicrotasks = false, this.isStable = true, this.onUnstable = new Ci(false), this.onMicrotaskEmpty = new Ci(false), this.onStable = new Ci(false), this.onError = new Ci(false), typeof Zone > "u")
            throw new ft(908, false);
          Zone.assertZonePatched();
          const r2 = this;
          if (r2._nesting = 0, r2._outer = r2._inner = Zone.current, Zone.AsyncStackTaggingZoneSpec) {
            const t5 = Zone.AsyncStackTaggingZoneSpec;
            r2._inner = r2._inner.fork(new t5("Angular"));
          }
          Zone.TaskTrackingZoneSpec && (r2._inner = r2._inner.fork(new Zone.TaskTrackingZoneSpec())), t4 && Zone.longStackTraceZoneSpec && (r2._inner = r2._inner.fork(Zone.longStackTraceZoneSpec)), r2.shouldCoalesceEventChangeDetection = !n3 && e4, r2.shouldCoalesceRunChangeDetection = n3, r2.lastRequestAnimationFrameId = -1, r2.nativeRequestAnimationFrame = function() {
            let t5 = Pt.requestAnimationFrame, e5 = Pt.cancelAnimationFrame;
            if (typeof Zone < "u" && t5 && e5) {
              const n4 = t5[Zone.__symbol__("OriginalDelegate")];
              n4 && (t5 = n4);
              const r3 = e5[Zone.__symbol__("OriginalDelegate")];
              r3 && (e5 = r3);
            }
            return { nativeRequestAnimationFrame: t5, nativeCancelAnimationFrame: e5 };
          }().nativeRequestAnimationFrame, function(t5) {
            const e5 = () => {
              !function(t6) {
                t6.isCheckStableRunning || -1 !== t6.lastRequestAnimationFrameId || (t6.lastRequestAnimationFrameId = t6.nativeRequestAnimationFrame.call(Pt, () => {
                  t6.fakeTopEventTask || (t6.fakeTopEventTask = Zone.root.scheduleEventTask("fakeTopEventTask", () => {
                    t6.lastRequestAnimationFrameId = -1, Wi(t6), t6.isCheckStableRunning = true, Gi(t6), t6.isCheckStableRunning = false;
                  }, void 0, () => {
                  }, () => {
                  })), t6.fakeTopEventTask.invoke();
                }), Wi(t6));
              }(t5);
            };
            t5._inner = t5._inner.fork({ name: "angular", properties: { isAngularZone: true }, onInvokeTask: (n4, r3, s2, o2, i2, l2) => {
              try {
                return Qi(t5), n4.invokeTask(s2, o2, i2, l2);
              } finally {
                (t5.shouldCoalesceEventChangeDetection && "eventTask" === o2.type || t5.shouldCoalesceRunChangeDetection) && e5(), Ki(t5);
              }
            }, onInvoke: (n4, r3, s2, o2, i2, l2, a2) => {
              try {
                return Qi(t5), n4.invoke(s2, o2, i2, l2, a2);
              } finally {
                t5.shouldCoalesceRunChangeDetection && e5(), Ki(t5);
              }
            }, onHasTask: (e6, n4, r3, s2) => {
              e6.hasTask(r3, s2), n4 === r3 && ("microTask" == s2.change ? (t5._hasPendingMicrotasks = s2.microTask, Wi(t5), Gi(t5)) : "macroTask" == s2.change && (t5.hasPendingMacrotasks = s2.macroTask));
            }, onHandleError: (e6, n4, r3, s2) => (e6.handleError(r3, s2), t5.runOutsideAngular(() => t5.onError.emit(s2)), false) });
          }(r2);
        }
        static isInAngularZone() {
          return typeof Zone < "u" && true === Zone.current.get("isAngularZone");
        }
        static assertInAngularZone() {
          if (!qi.isInAngularZone())
            throw new ft(909, false);
        }
        static assertNotInAngularZone() {
          if (qi.isInAngularZone())
            throw new ft(909, false);
        }
        run(t4, e4, n3) {
          return this._inner.run(t4, e4, n3);
        }
        runTask(t4, e4, n3, r2) {
          const s2 = this._inner, o2 = s2.scheduleEventTask("NgZoneEvent: " + r2, t4, $i, Ri, Ri);
          try {
            return s2.runTask(o2, e4, n3);
          } finally {
            s2.cancelTask(o2);
          }
        }
        runGuarded(t4, e4, n3) {
          return this._inner.runGuarded(t4, e4, n3);
        }
        runOutsideAngular(t4) {
          return this._outer.run(t4);
        }
      }
      const $i = {};
      function Gi(t4) {
        if (0 == t4._nesting && !t4.hasPendingMicrotasks && !t4.isStable)
          try {
            t4._nesting++, t4.onMicrotaskEmpty.emit(null);
          } finally {
            if (t4._nesting--, !t4.hasPendingMicrotasks)
              try {
                t4.runOutsideAngular(() => t4.onStable.emit(null));
              } finally {
                t4.isStable = true;
              }
          }
      }
      function Wi(t4) {
        t4.hasPendingMicrotasks = !!(t4._hasPendingMicrotasks || (t4.shouldCoalesceEventChangeDetection || t4.shouldCoalesceRunChangeDetection) && -1 !== t4.lastRequestAnimationFrameId);
      }
      function Qi(t4) {
        t4._nesting++, t4.isStable && (t4.isStable = false, t4.onUnstable.emit(null));
      }
      function Ki(t4) {
        t4._nesting--, Gi(t4);
      }
      class Xi {
        constructor() {
          this.hasPendingMicrotasks = false, this.hasPendingMacrotasks = false, this.isStable = true, this.onUnstable = new Ci(), this.onMicrotaskEmpty = new Ci(), this.onStable = new Ci(), this.onError = new Ci();
        }
        run(t4, e4, n3) {
          return t4.apply(e4, n3);
        }
        runGuarded(t4, e4, n3) {
          return t4.apply(e4, n3);
        }
        runOutsideAngular(t4) {
          return t4();
        }
        runTask(t4, e4, n3, r2) {
          return t4.apply(e4, n3);
        }
      }
      const Ji = new Pn(""), Yi = new Pn("");
      let tl, el = (() => {
        class t4 {
          constructor(t5, e4, n3) {
            this._ngZone = t5, this.registry = e4, this._pendingCount = 0, this._isZoneStable = true, this._didWork = false, this._callbacks = [], this.taskTrackingZone = null, tl || (function(t6) {
              tl = t6;
            }(n3), n3.addToWindow(e4)), this._watchAngularEvents(), t5.run(() => {
              this.taskTrackingZone = typeof Zone > "u" ? null : Zone.current.get("TaskTrackingZone");
            });
          }
          _watchAngularEvents() {
            this._ngZone.onUnstable.subscribe({ next: () => {
              this._didWork = true, this._isZoneStable = false;
            } }), this._ngZone.runOutsideAngular(() => {
              this._ngZone.onStable.subscribe({ next: () => {
                qi.assertNotInAngularZone(), Ui(() => {
                  this._isZoneStable = true, this._runCallbacksIfReady();
                });
              } });
            });
          }
          increasePendingRequestCount() {
            return this._pendingCount += 1, this._didWork = true, this._pendingCount;
          }
          decreasePendingRequestCount() {
            if (this._pendingCount -= 1, this._pendingCount < 0)
              throw new Error("pending async requests below zero");
            return this._runCallbacksIfReady(), this._pendingCount;
          }
          isStable() {
            return this._isZoneStable && 0 === this._pendingCount && !this._ngZone.hasPendingMacrotasks;
          }
          _runCallbacksIfReady() {
            if (this.isStable())
              Ui(() => {
                for (; 0 !== this._callbacks.length; ) {
                  let t5 = this._callbacks.pop();
                  clearTimeout(t5.timeoutId), t5.doneCb(this._didWork);
                }
                this._didWork = false;
              });
            else {
              let t5 = this.getPendingTasks();
              this._callbacks = this._callbacks.filter((e4) => !e4.updateCb || !e4.updateCb(t5) || (clearTimeout(e4.timeoutId), false)), this._didWork = true;
            }
          }
          getPendingTasks() {
            return this.taskTrackingZone ? this.taskTrackingZone.macroTasks.map((t5) => ({ source: t5.source, creationLocation: t5.creationLocation, data: t5.data })) : [];
          }
          addCallback(t5, e4, n3) {
            let r2 = -1;
            e4 && e4 > 0 && (r2 = setTimeout(() => {
              this._callbacks = this._callbacks.filter((t6) => t6.timeoutId !== r2), t5(this._didWork, this.getPendingTasks());
            }, e4)), this._callbacks.push({ doneCb: t5, timeoutId: r2, updateCb: n3 });
          }
          whenStable(t5, e4, n3) {
            if (n3 && !this.taskTrackingZone)
              throw new Error('Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?');
            this.addCallback(t5, e4, n3), this._runCallbacksIfReady();
          }
          getPendingRequestCount() {
            return this._pendingCount;
          }
          registerApplication(t5) {
            this.registry.registerApplication(t5, this);
          }
          unregisterApplication(t5) {
            this.registry.unregisterApplication(t5);
          }
          findProviders(t5, e4, n3) {
            return [];
          }
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)(Wn(qi), Wn(nl), Wn(Yi));
        }, t4.\u0275prov = _t({ token: t4, factory: t4.\u0275fac }), t4;
      })(), nl = (() => {
        class t4 {
          constructor() {
            this._applications = /* @__PURE__ */ new Map();
          }
          registerApplication(t5, e4) {
            this._applications.set(t5, e4);
          }
          unregisterApplication(t5) {
            this._applications.delete(t5);
          }
          unregisterAllApplications() {
            this._applications.clear();
          }
          getTestability(t5) {
            return this._applications.get(t5) || null;
          }
          getAllTestabilities() {
            return Array.from(this._applications.values());
          }
          getAllRootElements() {
            return Array.from(this._applications.keys());
          }
          findTestabilityInTree(t5, e4 = true) {
            var _a2;
            return (_a2 = tl == null ? void 0 : tl.findTestabilityInTree(this, t5, e4)) != null ? _a2 : null;
          }
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)();
        }, t4.\u0275prov = _t({ token: t4, factory: t4.\u0275fac, providedIn: "platform" }), t4;
      })(), rl = null;
      const sl = new Pn("AllowMultipleToken"), ol = new Pn("PlatformDestroyListeners");
      function il(t4, e4, n3 = []) {
        const r2 = `Platform: ${e4}`, s2 = new Pn(r2);
        return (e5 = []) => {
          let o2 = ll();
          if (!o2 || o2.injector.get(sl, false)) {
            const o3 = [...n3, ...e5, { provide: s2, useValue: true }];
            t4 ? t4(o3) : function(t5) {
              if (rl && !rl.get(sl, false))
                throw new ft(400, false);
              rl = t5, t5.get(al), function(t6) {
                const e6 = t6.get(Mi, null);
                e6 && e6.forEach((t7) => t7());
              }(t5);
            }(function(t5 = [], e6) {
              return Is.create({ name: e6, providers: [{ provide: zr, useValue: "platform" }, { provide: ol, useValue: /* @__PURE__ */ new Set([() => rl = null]) }, ...t5] });
            }(o3, r2));
          }
          return function(t5) {
            const e6 = ll();
            if (!e6)
              throw new ft(401, false);
            return e6;
          }();
        };
      }
      function ll() {
        var _a2;
        return (_a2 = rl == null ? void 0 : rl.get(al)) != null ? _a2 : null;
      }
      let al = (() => {
        class t4 {
          constructor(t5) {
            this._injector = t5, this._modules = [], this._destroyListeners = [], this._destroyed = false;
          }
          bootstrapModuleFactory(t5, e4) {
            const n3 = function(t6, e5) {
              let n4;
              return n4 = "noop" === t6 ? new Xi() : ("zone.js" === t6 ? void 0 : t6) || new qi(e5), n4;
            }(e4 == null ? void 0 : e4.ngZone, function(t6) {
              return { enableLongStackTrace: false, shouldCoalesceEventChangeDetection: !(!t6 || !t6.ngZoneEventCoalescing) || false, shouldCoalesceRunChangeDetection: !(!t6 || !t6.ngZoneRunCoalescing) || false };
            }(e4)), r2 = [{ provide: qi, useValue: n3 }];
            return n3.run(() => {
              const e5 = Is.create({ providers: r2, parent: this.injector, name: t5.moduleType.name }), s2 = t5.create(e5), o2 = s2.injector.get(ds, null);
              if (!o2)
                throw new ft(402, false);
              return n3.runOutsideAngular(() => {
                const t6 = n3.onError.subscribe({ next: (t7) => {
                  o2.handleError(t7);
                } });
                s2.onDestroy(() => {
                  hl(this._modules, s2), t6.unsubscribe();
                });
              }), function(t6, e6, n4) {
                try {
                  const r3 = n4();
                  return $o(r3) ? r3.catch((n5) => {
                    throw e6.runOutsideAngular(() => t6.handleError(n5)), n5;
                  }) : r3;
                } catch (n5) {
                  throw e6.runOutsideAngular(() => t6.handleError(n5)), n5;
                }
              }(o2, n3, () => {
                const t6 = s2.injector.get(Ni);
                return t6.runInitializers(), t6.donePromise.then(() => (function(t7) {
                  (function(t8, e6) {
                    null == t8 && function(t9, e7, n4, r3) {
                      throw new Error(`ASSERTION ERROR: ${t9} [Expected=> null != ${e7} <=Actual]`);
                    }("Expected localeId to be defined", t8);
                  })(t7), "string" == typeof t7 && (ui = t7.toLowerCase().replace(/_/g, "-"));
                }(s2.injector.get(zi, ai) || ai), this._moduleDoBootstrap(s2), s2));
              });
            });
          }
          bootstrapModule(t5, e4 = []) {
            const n3 = ul({}, e4);
            return function(t6, e5, n4) {
              const r2 = new wi(n4);
              return Promise.resolve(r2);
            }(0, 0, t5).then((t6) => this.bootstrapModuleFactory(t6, n3));
          }
          _moduleDoBootstrap(t5) {
            const e4 = t5.injector.get(cl);
            if (t5._bootstrapComponents.length > 0)
              t5._bootstrapComponents.forEach((t6) => e4.bootstrap(t6));
            else {
              if (!t5.instance.ngDoBootstrap)
                throw new ft(403, false);
              t5.instance.ngDoBootstrap(e4);
            }
            this._modules.push(t5);
          }
          onDestroy(t5) {
            this._destroyListeners.push(t5);
          }
          get injector() {
            return this._injector;
          }
          destroy() {
            if (this._destroyed)
              throw new ft(404, false);
            this._modules.slice().forEach((t6) => t6.destroy()), this._destroyListeners.forEach((t6) => t6());
            const t5 = this._injector.get(ol, null);
            t5 && (t5.forEach((t6) => t6()), t5.clear()), this._destroyed = true;
          }
          get destroyed() {
            return this._destroyed;
          }
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)(Wn(Is));
        }, t4.\u0275prov = _t({ token: t4, factory: t4.\u0275fac, providedIn: "platform" }), t4;
      })();
      function ul(t4, e4) {
        return Array.isArray(e4) ? e4.reduce(ul, t4) : { ...t4, ...e4 };
      }
      let cl = (() => {
        class t4 {
          constructor(t5, e4, n3) {
            this._zone = t5, this._injector = e4, this._exceptionHandler = n3, this._bootstrapListeners = [], this._views = [], this._runningTick = false, this._stable = true, this._destroyed = false, this._destroyListeners = [], this.componentTypes = [], this.components = [], this._onMicrotaskEmptySubscription = this._zone.onMicrotaskEmpty.subscribe({ next: () => {
              this._zone.run(() => {
                this.tick();
              });
            } });
            const r2 = new S((t6) => {
              this._stable = this._zone.isStable && !this._zone.hasPendingMacrotasks && !this._zone.hasPendingMicrotasks, this._zone.runOutsideAngular(() => {
                t6.next(this._stable), t6.complete();
              });
            }), s2 = new S((t6) => {
              let e5;
              this._zone.runOutsideAngular(() => {
                e5 = this._zone.onStable.subscribe(() => {
                  qi.assertNotInAngularZone(), Ui(() => {
                    !this._stable && !this._zone.hasPendingMacrotasks && !this._zone.hasPendingMicrotasks && (this._stable = true, t6.next(true));
                  });
                });
              });
              const n4 = this._zone.onUnstable.subscribe(() => {
                qi.assertInAngularZone(), this._stable && (this._stable = false, this._zone.runOutsideAngular(() => {
                  t6.next(false);
                }));
              });
              return () => {
                e5.unsubscribe(), n4.unsubscribe();
              };
            });
            this.isStable = rt(r2, s2.pipe(function(t6 = {}) {
              const { connector: e5 = () => new O(), resetOnError: n4 = true, resetOnComplete: r3 = true, resetOnRefCountZero: s3 = true } = t6;
              return (t7) => {
                let o2, i2, l2, a2 = 0, u2 = false, c2 = false;
                const h2 = () => {
                  i2 == null ? void 0 : i2.unsubscribe(), i2 = void 0;
                }, d2 = () => {
                  h2(), o2 = l2 = void 0, u2 = c2 = false;
                }, f2 = () => {
                  const t8 = o2;
                  d2(), t8 == null ? void 0 : t8.unsubscribe();
                };
                return V((t8, p2) => {
                  a2++, !c2 && !u2 && h2();
                  const g2 = l2 = l2 != null ? l2 : e5();
                  p2.add(() => {
                    a2--, 0 === a2 && !c2 && !u2 && (i2 = st(f2, s3));
                  }), g2.subscribe(p2), !o2 && a2 > 0 && (o2 = new b({ next: (t9) => g2.next(t9), error: (t9) => {
                    c2 = true, h2(), i2 = st(d2, n4, t9), g2.error(t9);
                  }, complete: () => {
                    u2 = true, h2(), i2 = st(d2, r3), g2.complete();
                  } }), $(t8).subscribe(o2));
                })(t7);
              };
            }()));
          }
          get destroyed() {
            return this._destroyed;
          }
          get injector() {
            return this._injector;
          }
          bootstrap(t5, e4) {
            const n3 = t5 instanceof ts;
            if (!this._injector.get(Ni).done)
              throw !n3 && function(t6) {
                const e5 = Qt(t6) || Kt(t6) || Xt(t6);
                null !== e5 && e5.standalone;
              }(t5), new ft(405, false);
            let r2;
            r2 = n3 ? t5 : this._injector.get(ns).resolveComponentFactory(t5), this.componentTypes.push(r2.componentType);
            const s2 = function(t6) {
              return t6.isBoundToModule;
            }(r2) ? void 0 : this._injector.get(mi), o2 = r2.create(Is.NULL, [], e4 || r2.selector, s2), i2 = o2.location.nativeElement, l2 = o2.injector.get(Ji, null);
            return l2 == null ? void 0 : l2.registerApplication(i2), o2.onDestroy(() => {
              this.detachView(o2.hostView), hl(this.components, o2), l2 == null ? void 0 : l2.unregisterApplication(i2);
            }), this._loadComponent(o2), o2;
          }
          tick() {
            if (this._runningTick)
              throw new ft(101, false);
            try {
              this._runningTick = true;
              for (let t5 of this._views)
                t5.detectChanges();
            } catch (t5) {
              this._zone.runOutsideAngular(() => this._exceptionHandler.handleError(t5));
            } finally {
              this._runningTick = false;
            }
          }
          attachView(t5) {
            const e4 = t5;
            this._views.push(e4), e4.attachToAppRef(this);
          }
          detachView(t5) {
            const e4 = t5;
            hl(this._views, e4), e4.detachFromAppRef();
          }
          _loadComponent(t5) {
            this.attachView(t5.hostView), this.tick(), this.components.push(t5), this._injector.get(Li, []).concat(this._bootstrapListeners).forEach((e4) => e4(t5));
          }
          ngOnDestroy() {
            if (!this._destroyed)
              try {
                this._destroyListeners.forEach((t5) => t5()), this._views.slice().forEach((t5) => t5.destroy()), this._onMicrotaskEmptySubscription.unsubscribe();
              } finally {
                this._destroyed = true, this._views = [], this._bootstrapListeners = [], this._destroyListeners = [];
              }
          }
          onDestroy(t5) {
            return this._destroyListeners.push(t5), () => hl(this._destroyListeners, t5);
          }
          destroy() {
            if (this._destroyed)
              throw new ft(406, false);
            const t5 = this._injector;
            t5.destroy && !t5.destroyed && t5.destroy();
          }
          get viewCount() {
            return this._views.length;
          }
          warnIfDestroyed() {
          }
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)(Wn(qi), Wn(Gr), Wn(ds));
        }, t4.\u0275prov = _t({ token: t4, factory: t4.\u0275fac, providedIn: "root" }), t4;
      })();
      function hl(t4, e4) {
        const n3 = t4.indexOf(e4);
        n3 > -1 && t4.splice(n3, 1);
      }
      let dl = true, fl = (() => {
        class t4 {
        }
        return t4.__NG_ELEMENT_ID__ = pl, t4;
      })();
      function pl(t4) {
        return function(t5, e4, n3) {
          if (re(t5) && !n3) {
            const n4 = ve(t5.index, e4);
            return new ko(n4, n4);
          }
          return 47 & t5.type ? new ko(e4[16], e4) : null;
        }(Oe(), xe(), 16 == (16 & t4));
      }
      class gl {
        constructor() {
        }
        supports(t4) {
          return Fo(t4);
        }
        create(t4) {
          return new yl(t4);
        }
      }
      const _l = (t4, e4) => e4;
      class yl {
        constructor(t4) {
          this.length = 0, this._linkedRecords = null, this._unlinkedRecords = null, this._previousItHead = null, this._itHead = null, this._itTail = null, this._additionsHead = null, this._additionsTail = null, this._movesHead = null, this._movesTail = null, this._removalsHead = null, this._removalsTail = null, this._identityChangesHead = null, this._identityChangesTail = null, this._trackByFn = t4 || _l;
        }
        forEachItem(t4) {
          let e4;
          for (e4 = this._itHead; null !== e4; e4 = e4._next)
            t4(e4);
        }
        forEachOperation(t4) {
          let e4 = this._itHead, n3 = this._removalsHead, r2 = 0, s2 = null;
          for (; e4 || n3; ) {
            const o2 = !n3 || e4 && e4.currentIndex < bl(n3, r2, s2) ? e4 : n3, i2 = bl(o2, r2, s2), l2 = o2.currentIndex;
            if (o2 === n3)
              r2--, n3 = n3._nextRemoved;
            else if (e4 = e4._next, null == o2.previousIndex)
              r2++;
            else {
              s2 || (s2 = []);
              const t5 = i2 - r2, e5 = l2 - r2;
              if (t5 != e5) {
                for (let n4 = 0; n4 < t5; n4++) {
                  const r3 = n4 < s2.length ? s2[n4] : s2[n4] = 0, o3 = r3 + n4;
                  e5 <= o3 && o3 < t5 && (s2[n4] = r3 + 1);
                }
                s2[o2.previousIndex] = e5 - t5;
              }
            }
            i2 !== l2 && t4(o2, i2, l2);
          }
        }
        forEachPreviousItem(t4) {
          let e4;
          for (e4 = this._previousItHead; null !== e4; e4 = e4._nextPrevious)
            t4(e4);
        }
        forEachAddedItem(t4) {
          let e4;
          for (e4 = this._additionsHead; null !== e4; e4 = e4._nextAdded)
            t4(e4);
        }
        forEachMovedItem(t4) {
          let e4;
          for (e4 = this._movesHead; null !== e4; e4 = e4._nextMoved)
            t4(e4);
        }
        forEachRemovedItem(t4) {
          let e4;
          for (e4 = this._removalsHead; null !== e4; e4 = e4._nextRemoved)
            t4(e4);
        }
        forEachIdentityChange(t4) {
          let e4;
          for (e4 = this._identityChangesHead; null !== e4; e4 = e4._nextIdentityChange)
            t4(e4);
        }
        diff(t4) {
          if (null == t4 && (t4 = []), !Fo(t4))
            throw new ft(900, false);
          return this.check(t4) ? this : null;
        }
        onDestroy() {
        }
        check(t4) {
          this._reset();
          let e4, n3, r2, s2 = this._itHead, o2 = false;
          if (Array.isArray(t4)) {
            this.length = t4.length;
            for (let e5 = 0; e5 < this.length; e5++)
              n3 = t4[e5], r2 = this._trackByFn(e5, n3), null !== s2 && Object.is(s2.trackById, r2) ? (o2 && (s2 = this._verifyReinsertion(s2, n3, r2, e5)), Object.is(s2.item, n3) || this._addIdentityChange(s2, n3)) : (s2 = this._mismatch(s2, n3, r2, e5), o2 = true), s2 = s2._next;
          } else
            e4 = 0, function(t5, e5) {
              if (Array.isArray(t5))
                for (let n4 = 0; n4 < t5.length; n4++)
                  e5(t5[n4]);
              else {
                const n4 = t5[No()]();
                let r3;
                for (; !(r3 = n4.next()).done; )
                  e5(r3.value);
              }
            }(t4, (t5) => {
              r2 = this._trackByFn(e4, t5), null !== s2 && Object.is(s2.trackById, r2) ? (o2 && (s2 = this._verifyReinsertion(s2, t5, r2, e4)), Object.is(s2.item, t5) || this._addIdentityChange(s2, t5)) : (s2 = this._mismatch(s2, t5, r2, e4), o2 = true), s2 = s2._next, e4++;
            }), this.length = e4;
          return this._truncate(s2), this.collection = t4, this.isDirty;
        }
        get isDirty() {
          return null !== this._additionsHead || null !== this._movesHead || null !== this._removalsHead || null !== this._identityChangesHead;
        }
        _reset() {
          if (this.isDirty) {
            let t4;
            for (t4 = this._previousItHead = this._itHead; null !== t4; t4 = t4._next)
              t4._nextPrevious = t4._next;
            for (t4 = this._additionsHead; null !== t4; t4 = t4._nextAdded)
              t4.previousIndex = t4.currentIndex;
            for (this._additionsHead = this._additionsTail = null, t4 = this._movesHead; null !== t4; t4 = t4._nextMoved)
              t4.previousIndex = t4.currentIndex;
            this._movesHead = this._movesTail = null, this._removalsHead = this._removalsTail = null, this._identityChangesHead = this._identityChangesTail = null;
          }
        }
        _mismatch(t4, e4, n3, r2) {
          let s2;
          return null === t4 ? s2 = this._itTail : (s2 = t4._prev, this._remove(t4)), null !== (t4 = null === this._unlinkedRecords ? null : this._unlinkedRecords.get(n3, null)) ? (Object.is(t4.item, e4) || this._addIdentityChange(t4, e4), this._reinsertAfter(t4, s2, r2)) : null !== (t4 = null === this._linkedRecords ? null : this._linkedRecords.get(n3, r2)) ? (Object.is(t4.item, e4) || this._addIdentityChange(t4, e4), this._moveAfter(t4, s2, r2)) : t4 = this._addAfter(new ml(e4, n3), s2, r2), t4;
        }
        _verifyReinsertion(t4, e4, n3, r2) {
          let s2 = null === this._unlinkedRecords ? null : this._unlinkedRecords.get(n3, null);
          return null !== s2 ? t4 = this._reinsertAfter(s2, t4._prev, r2) : t4.currentIndex != r2 && (t4.currentIndex = r2, this._addToMoves(t4, r2)), t4;
        }
        _truncate(t4) {
          for (; null !== t4; ) {
            const e4 = t4._next;
            this._addToRemovals(this._unlink(t4)), t4 = e4;
          }
          null !== this._unlinkedRecords && this._unlinkedRecords.clear(), null !== this._additionsTail && (this._additionsTail._nextAdded = null), null !== this._movesTail && (this._movesTail._nextMoved = null), null !== this._itTail && (this._itTail._next = null), null !== this._removalsTail && (this._removalsTail._nextRemoved = null), null !== this._identityChangesTail && (this._identityChangesTail._nextIdentityChange = null);
        }
        _reinsertAfter(t4, e4, n3) {
          null !== this._unlinkedRecords && this._unlinkedRecords.remove(t4);
          const r2 = t4._prevRemoved, s2 = t4._nextRemoved;
          return null === r2 ? this._removalsHead = s2 : r2._nextRemoved = s2, null === s2 ? this._removalsTail = r2 : s2._prevRemoved = r2, this._insertAfter(t4, e4, n3), this._addToMoves(t4, n3), t4;
        }
        _moveAfter(t4, e4, n3) {
          return this._unlink(t4), this._insertAfter(t4, e4, n3), this._addToMoves(t4, n3), t4;
        }
        _addAfter(t4, e4, n3) {
          return this._insertAfter(t4, e4, n3), this._additionsTail = null === this._additionsTail ? this._additionsHead = t4 : this._additionsTail._nextAdded = t4, t4;
        }
        _insertAfter(t4, e4, n3) {
          const r2 = null === e4 ? this._itHead : e4._next;
          return t4._next = r2, t4._prev = e4, null === r2 ? this._itTail = t4 : r2._prev = t4, null === e4 ? this._itHead = t4 : e4._next = t4, null === this._linkedRecords && (this._linkedRecords = new wl()), this._linkedRecords.put(t4), t4.currentIndex = n3, t4;
        }
        _remove(t4) {
          return this._addToRemovals(this._unlink(t4));
        }
        _unlink(t4) {
          null !== this._linkedRecords && this._linkedRecords.remove(t4);
          const e4 = t4._prev, n3 = t4._next;
          return null === e4 ? this._itHead = n3 : e4._next = n3, null === n3 ? this._itTail = e4 : n3._prev = e4, t4;
        }
        _addToMoves(t4, e4) {
          return t4.previousIndex === e4 || (this._movesTail = null === this._movesTail ? this._movesHead = t4 : this._movesTail._nextMoved = t4), t4;
        }
        _addToRemovals(t4) {
          return null === this._unlinkedRecords && (this._unlinkedRecords = new wl()), this._unlinkedRecords.put(t4), t4.currentIndex = null, t4._nextRemoved = null, null === this._removalsTail ? (this._removalsTail = this._removalsHead = t4, t4._prevRemoved = null) : (t4._prevRemoved = this._removalsTail, this._removalsTail = this._removalsTail._nextRemoved = t4), t4;
        }
        _addIdentityChange(t4, e4) {
          return t4.item = e4, this._identityChangesTail = null === this._identityChangesTail ? this._identityChangesHead = t4 : this._identityChangesTail._nextIdentityChange = t4, t4;
        }
      }
      class ml {
        constructor(t4, e4) {
          this.item = t4, this.trackById = e4, this.currentIndex = null, this.previousIndex = null, this._nextPrevious = null, this._prev = null, this._next = null, this._prevDup = null, this._nextDup = null, this._prevRemoved = null, this._nextRemoved = null, this._nextAdded = null, this._nextMoved = null, this._nextIdentityChange = null;
        }
      }
      class vl {
        constructor() {
          this._head = null, this._tail = null;
        }
        add(t4) {
          null === this._head ? (this._head = this._tail = t4, t4._nextDup = null, t4._prevDup = null) : (this._tail._nextDup = t4, t4._prevDup = this._tail, t4._nextDup = null, this._tail = t4);
        }
        get(t4, e4) {
          let n3;
          for (n3 = this._head; null !== n3; n3 = n3._nextDup)
            if ((null === e4 || e4 <= n3.currentIndex) && Object.is(n3.trackById, t4))
              return n3;
          return null;
        }
        remove(t4) {
          const e4 = t4._prevDup, n3 = t4._nextDup;
          return null === e4 ? this._head = n3 : e4._nextDup = n3, null === n3 ? this._tail = e4 : n3._prevDup = e4, null === this._head;
        }
      }
      class wl {
        constructor() {
          this.map = /* @__PURE__ */ new Map();
        }
        put(t4) {
          const e4 = t4.trackById;
          let n3 = this.map.get(e4);
          n3 || (n3 = new vl(), this.map.set(e4, n3)), n3.add(t4);
        }
        get(t4, e4) {
          const n3 = this.map.get(t4);
          return n3 ? n3.get(t4, e4) : null;
        }
        remove(t4) {
          const e4 = t4.trackById;
          return this.map.get(e4).remove(t4) && this.map.delete(e4), t4;
        }
        get isEmpty() {
          return 0 === this.map.size;
        }
        clear() {
          this.map.clear();
        }
      }
      function bl(t4, e4, n3) {
        const r2 = t4.previousIndex;
        if (null === r2)
          return r2;
        let s2 = 0;
        return n3 && r2 < n3.length && (s2 = n3[r2]), r2 + e4 + s2;
      }
      class kl {
        constructor() {
        }
        supports(t4) {
          return t4 instanceof Map || Ho(t4);
        }
        create() {
          return new Cl();
        }
      }
      class Cl {
        constructor() {
          this._records = /* @__PURE__ */ new Map(), this._mapHead = null, this._appendAfter = null, this._previousMapHead = null, this._changesHead = null, this._changesTail = null, this._additionsHead = null, this._additionsTail = null, this._removalsHead = null, this._removalsTail = null;
        }
        get isDirty() {
          return null !== this._additionsHead || null !== this._changesHead || null !== this._removalsHead;
        }
        forEachItem(t4) {
          let e4;
          for (e4 = this._mapHead; null !== e4; e4 = e4._next)
            t4(e4);
        }
        forEachPreviousItem(t4) {
          let e4;
          for (e4 = this._previousMapHead; null !== e4; e4 = e4._nextPrevious)
            t4(e4);
        }
        forEachChangedItem(t4) {
          let e4;
          for (e4 = this._changesHead; null !== e4; e4 = e4._nextChanged)
            t4(e4);
        }
        forEachAddedItem(t4) {
          let e4;
          for (e4 = this._additionsHead; null !== e4; e4 = e4._nextAdded)
            t4(e4);
        }
        forEachRemovedItem(t4) {
          let e4;
          for (e4 = this._removalsHead; null !== e4; e4 = e4._nextRemoved)
            t4(e4);
        }
        diff(t4) {
          if (t4) {
            if (!(t4 instanceof Map || Ho(t4)))
              throw new ft(900, false);
          } else
            t4 = /* @__PURE__ */ new Map();
          return this.check(t4) ? this : null;
        }
        onDestroy() {
        }
        check(t4) {
          this._reset();
          let e4 = this._mapHead;
          if (this._appendAfter = null, this._forEach(t4, (t5, n3) => {
            if (e4 && e4.key === n3)
              this._maybeAddToChanges(e4, t5), this._appendAfter = e4, e4 = e4._next;
            else {
              const r2 = this._getOrCreateRecordForKey(n3, t5);
              e4 = this._insertBeforeOrAppend(e4, r2);
            }
          }), e4) {
            e4._prev && (e4._prev._next = null), this._removalsHead = e4;
            for (let t5 = e4; null !== t5; t5 = t5._nextRemoved)
              t5 === this._mapHead && (this._mapHead = null), this._records.delete(t5.key), t5._nextRemoved = t5._next, t5.previousValue = t5.currentValue, t5.currentValue = null, t5._prev = null, t5._next = null;
          }
          return this._changesTail && (this._changesTail._nextChanged = null), this._additionsTail && (this._additionsTail._nextAdded = null), this.isDirty;
        }
        _insertBeforeOrAppend(t4, e4) {
          if (t4) {
            const n3 = t4._prev;
            return e4._next = t4, e4._prev = n3, t4._prev = e4, n3 && (n3._next = e4), t4 === this._mapHead && (this._mapHead = e4), this._appendAfter = t4, t4;
          }
          return this._appendAfter ? (this._appendAfter._next = e4, e4._prev = this._appendAfter) : this._mapHead = e4, this._appendAfter = e4, null;
        }
        _getOrCreateRecordForKey(t4, e4) {
          if (this._records.has(t4)) {
            const n4 = this._records.get(t4);
            this._maybeAddToChanges(n4, e4);
            const r2 = n4._prev, s2 = n4._next;
            return r2 && (r2._next = s2), s2 && (s2._prev = r2), n4._next = null, n4._prev = null, n4;
          }
          const n3 = new Tl(t4);
          return this._records.set(t4, n3), n3.currentValue = e4, this._addToAdditions(n3), n3;
        }
        _reset() {
          if (this.isDirty) {
            let t4;
            for (this._previousMapHead = this._mapHead, t4 = this._previousMapHead; null !== t4; t4 = t4._next)
              t4._nextPrevious = t4._next;
            for (t4 = this._changesHead; null !== t4; t4 = t4._nextChanged)
              t4.previousValue = t4.currentValue;
            for (t4 = this._additionsHead; null != t4; t4 = t4._nextAdded)
              t4.previousValue = t4.currentValue;
            this._changesHead = this._changesTail = null, this._additionsHead = this._additionsTail = null, this._removalsHead = null;
          }
        }
        _maybeAddToChanges(t4, e4) {
          Object.is(e4, t4.currentValue) || (t4.previousValue = t4.currentValue, t4.currentValue = e4, this._addToChanges(t4));
        }
        _addToAdditions(t4) {
          null === this._additionsHead ? this._additionsHead = this._additionsTail = t4 : (this._additionsTail._nextAdded = t4, this._additionsTail = t4);
        }
        _addToChanges(t4) {
          null === this._changesHead ? this._changesHead = this._changesTail = t4 : (this._changesTail._nextChanged = t4, this._changesTail = t4);
        }
        _forEach(t4, e4) {
          t4 instanceof Map ? t4.forEach(e4) : Object.keys(t4).forEach((n3) => e4(t4[n3], n3));
        }
      }
      class Tl {
        constructor(t4) {
          this.key = t4, this.previousValue = null, this.currentValue = null, this._nextPrevious = null, this._next = null, this._prev = null, this._nextAdded = null, this._nextRemoved = null, this._nextChanged = null;
        }
      }
      function El() {
        return new xl([new gl()]);
      }
      let xl = (() => {
        class t4 {
          constructor(t5) {
            this.factories = t5;
          }
          static create(e4, n3) {
            if (null != n3) {
              const t5 = n3.factories.slice();
              e4 = e4.concat(t5);
            }
            return new t4(e4);
          }
          static extend(e4) {
            return { provide: t4, useFactory: (n3) => t4.create(e4, n3 || El()), deps: [[t4, new Yn(), new Jn()]] };
          }
          find(t5) {
            const e4 = this.factories.find((e5) => e5.supports(t5));
            if (null != e4)
              return e4;
            throw new ft(901, false);
          }
        }
        return t4.\u0275prov = _t({ token: t4, providedIn: "root", factory: El }), t4;
      })();
      function Sl() {
        return new Al([new kl()]);
      }
      let Al = (() => {
        class t4 {
          constructor(t5) {
            this.factories = t5;
          }
          static create(e4, n3) {
            if (n3) {
              const t5 = n3.factories.slice();
              e4 = e4.concat(t5);
            }
            return new t4(e4);
          }
          static extend(e4) {
            return { provide: t4, useFactory: (n3) => t4.create(e4, n3 || Sl()), deps: [[t4, new Yn(), new Jn()]] };
          }
          find(t5) {
            const e4 = this.factories.find((e5) => e5.supports(t5));
            if (e4)
              return e4;
            throw new ft(901, false);
          }
        }
        return t4.\u0275prov = _t({ token: t4, providedIn: "root", factory: Sl }), t4;
      })();
      const Il = il(null, "core", []);
      let Ol = (() => {
        class t4 {
          constructor(t5) {
          }
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)(Wn(cl));
        }, t4.\u0275mod = $t({ type: t4 }), t4.\u0275inj = yt({}), t4;
      })(), Dl = null;
      function Vl() {
        return Dl;
      }
      const Pl = new Pn("DocumentToken");
      function Rl(t4, e4) {
        e4 = encodeURIComponent(e4);
        for (const n3 of t4.split(";")) {
          const t5 = n3.indexOf("="), [r2, s2] = -1 == t5 ? [n3, ""] : [n3.slice(0, t5), n3.slice(t5 + 1)];
          if (r2.trim() === e4)
            return decodeURIComponent(s2);
        }
        return null;
      }
      let jl = (() => {
        class t4 {
          constructor(t5, e4, n3, r2) {
            this._iterableDiffers = t5, this._keyValueDiffers = e4, this._ngEl = n3, this._renderer = r2, this._iterableDiffer = null, this._keyValueDiffer = null, this._initialClasses = [], this._rawClass = null;
          }
          set klass(t5) {
            this._removeClasses(this._initialClasses), this._initialClasses = "string" == typeof t5 ? t5.split(/\s+/) : [], this._applyClasses(this._initialClasses), this._applyClasses(this._rawClass);
          }
          set ngClass(t5) {
            this._removeClasses(this._rawClass), this._applyClasses(this._initialClasses), this._iterableDiffer = null, this._keyValueDiffer = null, this._rawClass = "string" == typeof t5 ? t5.split(/\s+/) : t5, this._rawClass && (Fo(this._rawClass) ? this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create() : this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create());
          }
          ngDoCheck() {
            if (this._iterableDiffer) {
              const t5 = this._iterableDiffer.diff(this._rawClass);
              t5 && this._applyIterableChanges(t5);
            } else if (this._keyValueDiffer) {
              const t5 = this._keyValueDiffer.diff(this._rawClass);
              t5 && this._applyKeyValueChanges(t5);
            }
          }
          _applyKeyValueChanges(t5) {
            t5.forEachAddedItem((t6) => this._toggleClass(t6.key, t6.currentValue)), t5.forEachChangedItem((t6) => this._toggleClass(t6.key, t6.currentValue)), t5.forEachRemovedItem((t6) => {
              t6.previousValue && this._toggleClass(t6.key, false);
            });
          }
          _applyIterableChanges(t5) {
            t5.forEachAddedItem((t6) => {
              if ("string" != typeof t6.item)
                throw new Error(`NgClass can only toggle CSS classes expressed as strings, got ${lt(t6.item)}`);
              this._toggleClass(t6.item, true);
            }), t5.forEachRemovedItem((t6) => this._toggleClass(t6.item, false));
          }
          _applyClasses(t5) {
            t5 && (Array.isArray(t5) || t5 instanceof Set ? t5.forEach((t6) => this._toggleClass(t6, true)) : Object.keys(t5).forEach((e4) => this._toggleClass(e4, !!t5[e4])));
          }
          _removeClasses(t5) {
            t5 && (Array.isArray(t5) || t5 instanceof Set ? t5.forEach((t6) => this._toggleClass(t6, false)) : Object.keys(t5).forEach((t6) => this._toggleClass(t6, false)));
          }
          _toggleClass(t5, e4) {
            (t5 = t5.trim()) && t5.split(/\s+/g).forEach((t6) => {
              e4 ? this._renderer.addClass(this._ngEl.nativeElement, t6) : this._renderer.removeClass(this._ngEl.nativeElement, t6);
            });
          }
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)(Os(xl), Os(Al), Os(os), Os(ls));
        }, t4.\u0275dir = Wt({ type: t4, selectors: [["", "ngClass", ""]], inputs: { klass: ["class", "klass"], ngClass: "ngClass" }, standalone: true }), t4;
      })();
      class Nl {
        constructor(t4, e4, n3, r2) {
          this.$implicit = t4, this.ngForOf = e4, this.index = n3, this.count = r2;
        }
        get first() {
          return 0 === this.index;
        }
        get last() {
          return this.index === this.count - 1;
        }
        get even() {
          return this.index % 2 == 0;
        }
        get odd() {
          return !this.even;
        }
      }
      let Fl = (() => {
        class t4 {
          constructor(t5, e4, n3) {
            this._viewContainer = t5, this._template = e4, this._differs = n3, this._ngForOf = null, this._ngForOfDirty = true, this._differ = null;
          }
          set ngForOf(t5) {
            this._ngForOf = t5, this._ngForOfDirty = true;
          }
          set ngForTrackBy(t5) {
            this._trackByFn = t5;
          }
          get ngForTrackBy() {
            return this._trackByFn;
          }
          set ngForTemplate(t5) {
            t5 && (this._template = t5);
          }
          ngDoCheck() {
            if (this._ngForOfDirty) {
              this._ngForOfDirty = false;
              const t5 = this._ngForOf;
              !this._differ && t5 && (this._differ = this._differs.find(t5).create(this.ngForTrackBy));
            }
            if (this._differ) {
              const t5 = this._differ.diff(this._ngForOf);
              t5 && this._applyChanges(t5);
            }
          }
          _applyChanges(t5) {
            const e4 = this._viewContainer;
            t5.forEachOperation((t6, n3, r2) => {
              if (null == t6.previousIndex)
                e4.createEmbeddedView(this._template, new Nl(t6.item, this._ngForOf, -1, -1), null === r2 ? void 0 : r2);
              else if (null == r2)
                e4.remove(null === n3 ? void 0 : n3);
              else if (null !== n3) {
                const s2 = e4.get(n3);
                e4.move(s2, r2), Hl(s2, t6);
              }
            });
            for (let t6 = 0, n3 = e4.length; t6 < n3; t6++) {
              const r2 = e4.get(t6).context;
              r2.index = t6, r2.count = n3, r2.ngForOf = this._ngForOf;
            }
            t5.forEachIdentityChange((t6) => {
              Hl(e4.get(t6.currentIndex), t6);
            });
          }
          static ngTemplateContextGuard(t5, e4) {
            return true;
          }
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)(Os(Ai), Os(Ti), Os(xl));
        }, t4.\u0275dir = Wt({ type: t4, selectors: [["", "ngFor", "", "ngForOf", ""]], inputs: { ngForOf: "ngForOf", ngForTrackBy: "ngForTrackBy", ngForTemplate: "ngForTemplate" }, standalone: true }), t4;
      })();
      function Hl(t4, e4) {
        t4.context.$implicit = e4.item;
      }
      let Ml = (() => {
        class t4 {
          constructor(t5, e4) {
            this._viewContainer = t5, this._context = new Zl(), this._thenTemplateRef = null, this._elseTemplateRef = null, this._thenViewRef = null, this._elseViewRef = null, this._thenTemplateRef = e4;
          }
          set ngIf(t5) {
            this._context.$implicit = this._context.ngIf = t5, this._updateView();
          }
          set ngIfThen(t5) {
            Ll("ngIfThen", t5), this._thenTemplateRef = t5, this._thenViewRef = null, this._updateView();
          }
          set ngIfElse(t5) {
            Ll("ngIfElse", t5), this._elseTemplateRef = t5, this._elseViewRef = null, this._updateView();
          }
          _updateView() {
            this._context.$implicit ? this._thenViewRef || (this._viewContainer.clear(), this._elseViewRef = null, this._thenTemplateRef && (this._thenViewRef = this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context))) : this._elseViewRef || (this._viewContainer.clear(), this._thenViewRef = null, this._elseTemplateRef && (this._elseViewRef = this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context)));
          }
          static ngTemplateContextGuard(t5, e4) {
            return true;
          }
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)(Os(Ai), Os(Ti));
        }, t4.\u0275dir = Wt({ type: t4, selectors: [["", "ngIf", ""]], inputs: { ngIf: "ngIf", ngIfThen: "ngIfThen", ngIfElse: "ngIfElse" }, standalone: true }), t4;
      })();
      class Zl {
        constructor() {
          this.$implicit = null, this.ngIf = null;
        }
      }
      function Ll(t4, e4) {
        if (e4 && !e4.createEmbeddedView)
          throw new Error(`${t4} must be a TemplateRef, but received '${lt(e4)}'.`);
      }
      let zl = (() => {
        class t4 {
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)();
        }, t4.\u0275mod = $t({ type: t4 }), t4.\u0275inj = yt({}), t4;
      })();
      class Bl {
      }
      class Ul extends class extends class {
      } {
        constructor() {
          super(...arguments), this.supportsDOMEvents = true;
        }
      } {
        static makeCurrent() {
          !function(t4) {
            Dl || (Dl = t4);
          }(new Ul());
        }
        onAndCancel(t4, e4, n3) {
          return t4.addEventListener(e4, n3, false), () => {
            t4.removeEventListener(e4, n3, false);
          };
        }
        dispatchEvent(t4, e4) {
          t4.dispatchEvent(e4);
        }
        remove(t4) {
          t4.parentNode && t4.parentNode.removeChild(t4);
        }
        createElement(t4, e4) {
          return (e4 = e4 || this.getDefaultDocument()).createElement(t4);
        }
        createHtmlDocument() {
          return document.implementation.createHTMLDocument("fakeTitle");
        }
        getDefaultDocument() {
          return document;
        }
        isElementNode(t4) {
          return t4.nodeType === Node.ELEMENT_NODE;
        }
        isShadowRoot(t4) {
          return t4 instanceof DocumentFragment;
        }
        getGlobalEventTarget(t4, e4) {
          return "window" === e4 ? window : "document" === e4 ? t4 : "body" === e4 ? t4.body : null;
        }
        getBaseHref(t4) {
          const e4 = ($l = $l || document.querySelector("base"), $l ? $l.getAttribute("href") : null);
          return null == e4 ? null : function(t5) {
            ql = ql || document.createElement("a"), ql.setAttribute("href", t5);
            const e5 = ql.pathname;
            return "/" === e5.charAt(0) ? e5 : `/${e5}`;
          }(e4);
        }
        resetBaseElement() {
          $l = null;
        }
        getUserAgent() {
          return window.navigator.userAgent;
        }
        getCookie(t4) {
          return Rl(document.cookie, t4);
        }
      }
      let ql, $l = null;
      const Gl = new Pn("TRANSITION_ID"), Wl = [{ provide: ji, useFactory: function(t4, e4, n3) {
        return () => {
          n3.get(Ni).donePromise.then(() => {
            const n4 = Vl(), r2 = e4.querySelectorAll(`style[ng-transition="${t4}"]`);
            for (let t5 = 0; t5 < r2.length; t5++)
              n4.remove(r2[t5]);
          });
        };
      }, deps: [Gl, Pl, Is], multi: true }];
      let Ql = (() => {
        class t4 {
          build() {
            return new XMLHttpRequest();
          }
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)();
        }, t4.\u0275prov = _t({ token: t4, factory: t4.\u0275fac }), t4;
      })();
      const Kl = new Pn("EventManagerPlugins");
      let Xl = (() => {
        class t4 {
          constructor(t5, e4) {
            this._zone = e4, this._eventNameToPlugin = /* @__PURE__ */ new Map(), t5.forEach((t6) => t6.manager = this), this._plugins = t5.slice().reverse();
          }
          addEventListener(t5, e4, n3) {
            return this._findPluginFor(e4).addEventListener(t5, e4, n3);
          }
          addGlobalEventListener(t5, e4, n3) {
            return this._findPluginFor(e4).addGlobalEventListener(t5, e4, n3);
          }
          getZone() {
            return this._zone;
          }
          _findPluginFor(t5) {
            const e4 = this._eventNameToPlugin.get(t5);
            if (e4)
              return e4;
            const n3 = this._plugins;
            for (let e5 = 0; e5 < n3.length; e5++) {
              const r2 = n3[e5];
              if (r2.supports(t5))
                return this._eventNameToPlugin.set(t5, r2), r2;
            }
            throw new Error(`No event manager plugin found for event ${t5}`);
          }
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)(Wn(Kl), Wn(qi));
        }, t4.\u0275prov = _t({ token: t4, factory: t4.\u0275fac }), t4;
      })();
      class Jl {
        constructor(t4) {
          this._doc = t4;
        }
        addGlobalEventListener(t4, e4, n3) {
          const r2 = Vl().getGlobalEventTarget(this._doc, t4);
          if (!r2)
            throw new Error(`Unsupported event target ${r2} for event ${e4}`);
          return this.addEventListener(r2, e4, n3);
        }
      }
      let Yl = (() => {
        class t4 {
          constructor() {
            this._stylesSet = /* @__PURE__ */ new Set();
          }
          addStyles(t5) {
            const e4 = /* @__PURE__ */ new Set();
            t5.forEach((t6) => {
              this._stylesSet.has(t6) || (this._stylesSet.add(t6), e4.add(t6));
            }), this.onStylesAdded(e4);
          }
          onStylesAdded(t5) {
          }
          getAllStyles() {
            return Array.from(this._stylesSet);
          }
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)();
        }, t4.\u0275prov = _t({ token: t4, factory: t4.\u0275fac }), t4;
      })(), ta = (() => {
        class t4 extends Yl {
          constructor(t5) {
            super(), this._doc = t5, this._hostNodes = /* @__PURE__ */ new Map(), this._hostNodes.set(t5.head, []);
          }
          _addStylesToHost(t5, e4, n3) {
            t5.forEach((t6) => {
              const r2 = this._doc.createElement("style");
              r2.textContent = t6, n3.push(e4.appendChild(r2));
            });
          }
          addHost(t5) {
            const e4 = [];
            this._addStylesToHost(this._stylesSet, t5, e4), this._hostNodes.set(t5, e4);
          }
          removeHost(t5) {
            const e4 = this._hostNodes.get(t5);
            e4 && e4.forEach(ea), this._hostNodes.delete(t5);
          }
          onStylesAdded(t5) {
            this._hostNodes.forEach((e4, n3) => {
              this._addStylesToHost(t5, n3, e4);
            });
          }
          ngOnDestroy() {
            this._hostNodes.forEach((t5) => t5.forEach(ea));
          }
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)(Wn(Pl));
        }, t4.\u0275prov = _t({ token: t4, factory: t4.\u0275fac }), t4;
      })();
      function ea(t4) {
        Vl().remove(t4);
      }
      const na = { svg: "http://www.w3.org/2000/svg", xhtml: "http://www.w3.org/1999/xhtml", xlink: "http://www.w3.org/1999/xlink", xml: "http://www.w3.org/XML/1998/namespace", xmlns: "http://www.w3.org/2000/xmlns/", math: "http://www.w3.org/1998/MathML/" }, ra = /%COMP%/g;
      function sa(t4, e4, n3) {
        for (let r2 = 0; r2 < e4.length; r2++) {
          let s2 = e4[r2];
          Array.isArray(s2) ? sa(t4, s2, n3) : (s2 = s2.replace(ra, t4), n3.push(s2));
        }
        return n3;
      }
      function oa(t4) {
        return (e4) => {
          if ("__ngUnwrap__" === e4)
            return t4;
          false === t4(e4) && (e4.preventDefault(), e4.returnValue = false);
        };
      }
      let ia = (() => {
        class t4 {
          constructor(t5, e4, n3) {
            this.eventManager = t5, this.sharedStylesHost = e4, this.appId = n3, this.rendererByCompId = /* @__PURE__ */ new Map(), this.defaultRenderer = new la(t5);
          }
          createRenderer(t5, e4) {
            if (!t5 || !e4)
              return this.defaultRenderer;
            switch (e4.encapsulation) {
              case Vt.Emulated: {
                let n3 = this.rendererByCompId.get(e4.id);
                return n3 || (n3 = new ua(this.eventManager, this.sharedStylesHost, e4, this.appId), this.rendererByCompId.set(e4.id, n3)), n3.applyToHost(t5), n3;
              }
              case 1:
              case Vt.ShadowDom:
                return new ca(this.eventManager, this.sharedStylesHost, t5, e4);
              default:
                if (!this.rendererByCompId.has(e4.id)) {
                  const t6 = sa(e4.id, e4.styles, []);
                  this.sharedStylesHost.addStyles(t6), this.rendererByCompId.set(e4.id, this.defaultRenderer);
                }
                return this.defaultRenderer;
            }
          }
          begin() {
          }
          end() {
          }
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)(Wn(Xl), Wn(ta), Wn(Fi));
        }, t4.\u0275prov = _t({ token: t4, factory: t4.\u0275fac }), t4;
      })();
      class la {
        constructor(t4) {
          this.eventManager = t4, this.data = /* @__PURE__ */ Object.create(null), this.destroyNode = null;
        }
        destroy() {
        }
        createElement(t4, e4) {
          return e4 ? document.createElementNS(na[e4] || e4, t4) : document.createElement(t4);
        }
        createComment(t4) {
          return document.createComment(t4);
        }
        createText(t4) {
          return document.createTextNode(t4);
        }
        appendChild(t4, e4) {
          (aa(t4) ? t4.content : t4).appendChild(e4);
        }
        insertBefore(t4, e4, n3) {
          t4 && (aa(t4) ? t4.content : t4).insertBefore(e4, n3);
        }
        removeChild(t4, e4) {
          t4 && t4.removeChild(e4);
        }
        selectRootElement(t4, e4) {
          let n3 = "string" == typeof t4 ? document.querySelector(t4) : t4;
          if (!n3)
            throw new Error(`The selector "${t4}" did not match any elements`);
          return e4 || (n3.textContent = ""), n3;
        }
        parentNode(t4) {
          return t4.parentNode;
        }
        nextSibling(t4) {
          return t4.nextSibling;
        }
        setAttribute(t4, e4, n3, r2) {
          if (r2) {
            e4 = r2 + ":" + e4;
            const s2 = na[r2];
            s2 ? t4.setAttributeNS(s2, e4, n3) : t4.setAttribute(e4, n3);
          } else
            t4.setAttribute(e4, n3);
        }
        removeAttribute(t4, e4, n3) {
          if (n3) {
            const r2 = na[n3];
            r2 ? t4.removeAttributeNS(r2, e4) : t4.removeAttribute(`${n3}:${e4}`);
          } else
            t4.removeAttribute(e4);
        }
        addClass(t4, e4) {
          t4.classList.add(e4);
        }
        removeClass(t4, e4) {
          t4.classList.remove(e4);
        }
        setStyle(t4, e4, n3, r2) {
          r2 & (tr.DashCase | tr.Important) ? t4.style.setProperty(e4, n3, r2 & tr.Important ? "important" : "") : t4.style[e4] = n3;
        }
        removeStyle(t4, e4, n3) {
          n3 & tr.DashCase ? t4.style.removeProperty(e4) : t4.style[e4] = "";
        }
        setProperty(t4, e4, n3) {
          t4[e4] = n3;
        }
        setValue(t4, e4) {
          t4.nodeValue = e4;
        }
        listen(t4, e4, n3) {
          return "string" == typeof t4 ? this.eventManager.addGlobalEventListener(t4, e4, oa(n3)) : this.eventManager.addEventListener(t4, e4, oa(n3));
        }
      }
      function aa(t4) {
        return "TEMPLATE" === t4.tagName && void 0 !== t4.content;
      }
      class ua extends la {
        constructor(t4, e4, n3, r2) {
          super(t4), this.component = n3;
          const s2 = sa(r2 + "-" + n3.id, n3.styles, []);
          e4.addStyles(s2), this.contentAttr = function(t5) {
            return "_ngcontent-%COMP%".replace(ra, t5);
          }(r2 + "-" + n3.id), this.hostAttr = function(t5) {
            return "_nghost-%COMP%".replace(ra, t5);
          }(r2 + "-" + n3.id);
        }
        applyToHost(t4) {
          super.setAttribute(t4, this.hostAttr, "");
        }
        createElement(t4, e4) {
          const n3 = super.createElement(t4, e4);
          return super.setAttribute(n3, this.contentAttr, ""), n3;
        }
      }
      class ca extends la {
        constructor(t4, e4, n3, r2) {
          super(t4), this.sharedStylesHost = e4, this.hostEl = n3, this.shadowRoot = n3.attachShadow({ mode: "open" }), this.sharedStylesHost.addHost(this.shadowRoot);
          const s2 = sa(r2.id, r2.styles, []);
          for (let t5 = 0; t5 < s2.length; t5++) {
            const e5 = document.createElement("style");
            e5.textContent = s2[t5], this.shadowRoot.appendChild(e5);
          }
        }
        nodeOrShadowRoot(t4) {
          return t4 === this.hostEl ? this.shadowRoot : t4;
        }
        destroy() {
          this.sharedStylesHost.removeHost(this.shadowRoot);
        }
        appendChild(t4, e4) {
          return super.appendChild(this.nodeOrShadowRoot(t4), e4);
        }
        insertBefore(t4, e4, n3) {
          return super.insertBefore(this.nodeOrShadowRoot(t4), e4, n3);
        }
        removeChild(t4, e4) {
          return super.removeChild(this.nodeOrShadowRoot(t4), e4);
        }
        parentNode(t4) {
          return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(t4)));
        }
      }
      let ha = (() => {
        class t4 extends Jl {
          constructor(t5) {
            super(t5);
          }
          supports(t5) {
            return true;
          }
          addEventListener(t5, e4, n3) {
            return t5.addEventListener(e4, n3, false), () => this.removeEventListener(t5, e4, n3);
          }
          removeEventListener(t5, e4, n3) {
            return t5.removeEventListener(e4, n3);
          }
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)(Wn(Pl));
        }, t4.\u0275prov = _t({ token: t4, factory: t4.\u0275fac }), t4;
      })();
      const da = ["alt", "control", "meta", "shift"], fa = { "\b": "Backspace", "	": "Tab", "\x7F": "Delete", "\x1B": "Escape", Del: "Delete", Esc: "Escape", Left: "ArrowLeft", Right: "ArrowRight", Up: "ArrowUp", Down: "ArrowDown", Menu: "ContextMenu", Scroll: "ScrollLock", Win: "OS" }, pa = { alt: (t4) => t4.altKey, control: (t4) => t4.ctrlKey, meta: (t4) => t4.metaKey, shift: (t4) => t4.shiftKey };
      let ga = (() => {
        class t4 extends Jl {
          constructor(t5) {
            super(t5);
          }
          supports(e4) {
            return null != t4.parseEventName(e4);
          }
          addEventListener(e4, n3, r2) {
            const s2 = t4.parseEventName(n3), o2 = t4.eventCallback(s2.fullKey, r2, this.manager.getZone());
            return this.manager.getZone().runOutsideAngular(() => Vl().onAndCancel(e4, s2.domEventName, o2));
          }
          static parseEventName(e4) {
            const n3 = e4.toLowerCase().split("."), r2 = n3.shift();
            if (0 === n3.length || "keydown" !== r2 && "keyup" !== r2)
              return null;
            const s2 = t4._normalizeKey(n3.pop());
            let o2 = "", i2 = n3.indexOf("code");
            if (i2 > -1 && (n3.splice(i2, 1), o2 = "code."), da.forEach((t5) => {
              const e5 = n3.indexOf(t5);
              e5 > -1 && (n3.splice(e5, 1), o2 += t5 + ".");
            }), o2 += s2, 0 != n3.length || 0 === s2.length)
              return null;
            const l2 = {};
            return l2.domEventName = r2, l2.fullKey = o2, l2;
          }
          static matchEventFullKeyCode(t5, e4) {
            let n3 = fa[t5.key] || t5.key, r2 = "";
            return e4.indexOf("code.") > -1 && (n3 = t5.code, r2 = "code."), !(null == n3 || !n3) && (n3 = n3.toLowerCase(), " " === n3 ? n3 = "space" : "." === n3 && (n3 = "dot"), da.forEach((e5) => {
              e5 !== n3 && (0, pa[e5])(t5) && (r2 += e5 + ".");
            }), r2 += n3, r2 === e4);
          }
          static eventCallback(e4, n3, r2) {
            return (s2) => {
              t4.matchEventFullKeyCode(s2, e4) && r2.runGuarded(() => n3(s2));
            };
          }
          static _normalizeKey(t5) {
            return "esc" === t5 ? "escape" : t5;
          }
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)(Wn(Pl));
        }, t4.\u0275prov = _t({ token: t4, factory: t4.\u0275fac }), t4;
      })();
      const _a = il(Il, "browser", [{ provide: Zi, useValue: "browser" }, { provide: Mi, useValue: function() {
        Ul.makeCurrent();
      }, multi: true }, { provide: Pl, useFactory: function() {
        return function(t4) {
          wr = t4;
        }(document), document;
      }, deps: [] }]), ya = new Pn(""), ma = [{ provide: Yi, useClass: class {
        addToWindow(t4) {
          Pt.getAngularTestability = (e4, n3 = true) => {
            const r2 = t4.findTestabilityInTree(e4, n3);
            if (null == r2)
              throw new Error("Could not find testability for element.");
            return r2;
          }, Pt.getAllAngularTestabilities = () => t4.getAllTestabilities(), Pt.getAllAngularRootElements = () => t4.getAllRootElements(), Pt.frameworkStabilizers || (Pt.frameworkStabilizers = []), Pt.frameworkStabilizers.push((t5) => {
            const e4 = Pt.getAllAngularTestabilities();
            let n3 = e4.length, r2 = false;
            const s2 = function(e5) {
              r2 = r2 || e5, n3--, 0 == n3 && t5(r2);
            };
            e4.forEach(function(t6) {
              t6.whenStable(s2);
            });
          });
        }
        findTestabilityInTree(t4, e4, n3) {
          var _a2;
          return null == e4 ? null : (_a2 = t4.getTestability(e4)) != null ? _a2 : n3 ? Vl().isShadowRoot(e4) ? this.findTestabilityInTree(t4, e4.host, true) : this.findTestabilityInTree(t4, e4.parentElement, true) : null;
        }
      }, deps: [] }, { provide: Ji, useClass: el, deps: [qi, nl, Yi] }, { provide: el, useClass: el, deps: [qi, nl, Yi] }], va = [{ provide: zr, useValue: "root" }, { provide: ds, useFactory: function() {
        return new ds();
      }, deps: [] }, { provide: Kl, useClass: ha, multi: true, deps: [Pl, qi, Zi] }, { provide: Kl, useClass: ga, multi: true, deps: [Pl] }, { provide: ia, useClass: ia, deps: [Xl, ta, Fi] }, { provide: is, useExisting: ia }, { provide: Yl, useExisting: ta }, { provide: ta, useClass: ta, deps: [Pl] }, { provide: Xl, useClass: Xl, deps: [Kl, qi] }, { provide: Bl, useClass: Ql, deps: [] }, []];
      let wa = (() => {
        class t4 {
          constructor(t5) {
          }
          static withServerTransition(e4) {
            return { ngModule: t4, providers: [{ provide: Fi, useValue: e4.appId }, { provide: Gl, useExisting: Fi }, Wl] };
          }
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)(Wn(ya, 12));
        }, t4.\u0275mod = $t({ type: t4 }), t4.\u0275inj = yt({ providers: [...va, ...ma], imports: [zl, Ol] }), t4;
      })();
      typeof window < "u" && window;
      const { isArray: ba } = Array, { getPrototypeOf: ka, prototype: Ca, keys: Ta } = Object, { isArray: Ea } = Array;
      function xa(t4, e4) {
        return t4.reduce((t5, n3, r2) => (t5[n3] = e4[r2], t5), {});
      }
      let Sa = (() => {
        class t4 {
          constructor(t5, e4) {
            this._renderer = t5, this._elementRef = e4, this.onChange = (t6) => {
            }, this.onTouched = () => {
            };
          }
          setProperty(t5, e4) {
            this._renderer.setProperty(this._elementRef.nativeElement, t5, e4);
          }
          registerOnTouched(t5) {
            this.onTouched = t5;
          }
          registerOnChange(t5) {
            this.onChange = t5;
          }
          setDisabledState(t5) {
            this.setProperty("disabled", t5);
          }
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)(Os(ls), Os(os));
        }, t4.\u0275dir = Wt({ type: t4 }), t4;
      })(), Aa = (() => {
        class t4 extends Sa {
        }
        return t4.\u0275fac = function() {
          let e4;
          return function(n3) {
            return (e4 || (e4 = function(t5) {
              return It(() => {
                const e5 = t5.prototype.constructor, n4 = e5[Zt] || In(e5), r2 = Object.prototype;
                let s2 = Object.getPrototypeOf(t5.prototype).constructor;
                for (; s2 && s2 !== r2; ) {
                  const t6 = s2[Zt] || In(s2);
                  if (t6 && t6 !== n4)
                    return t6;
                  s2 = Object.getPrototypeOf(s2);
                }
                return (t6) => new t6();
              });
            }(t4)))(n3 || t4);
          };
        }(), t4.\u0275dir = Wt({ type: t4, features: [Oo] }), t4;
      })();
      const Ia = new Pn("NgValueAccessor"), Oa = { provide: Ia, useExisting: ct(() => Va), multi: true }, Da = new Pn("CompositionEventMode");
      let Va = (() => {
        class t4 extends Sa {
          constructor(t5, e4, n3) {
            super(t5, e4), this._compositionMode = n3, this._composing = false, null == this._compositionMode && (this._compositionMode = !function() {
              const t6 = Vl() ? Vl().getUserAgent() : "";
              return /android (\d+)/.test(t6.toLowerCase());
            }());
          }
          writeValue(t5) {
            this.setProperty("value", t5 != null ? t5 : "");
          }
          _handleInput(t5) {
            (!this._compositionMode || this._compositionMode && !this._composing) && this.onChange(t5);
          }
          _compositionStart() {
            this._composing = true;
          }
          _compositionEnd(t5) {
            this._composing = false, this._compositionMode && this.onChange(t5);
          }
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)(Os(ls), Os(os), Os(Da, 8));
        }, t4.\u0275dir = Wt({ type: t4, selectors: [["input", "formControlName", "", 3, "type", "checkbox"], ["textarea", "formControlName", ""], ["input", "formControl", "", 3, "type", "checkbox"], ["textarea", "formControl", ""], ["input", "ngModel", "", 3, "type", "checkbox"], ["textarea", "ngModel", ""], ["", "ngDefaultControl", ""]], hostBindings: function(t5, e4) {
          1 & t5 && Wo("input", function(t6) {
            return e4._handleInput(t6.target.value);
          })("blur", function() {
            return e4.onTouched();
          })("compositionstart", function() {
            return e4._compositionStart();
          })("compositionend", function(t6) {
            return e4._compositionEnd(t6.target.value);
          });
        }, features: [yi([Oa]), Oo] }), t4;
      })();
      const Pa = new Pn("NgValidators"), Ra = new Pn("NgAsyncValidators");
      function ja(t4) {
        return null != t4;
      }
      function Na(t4) {
        return $o(t4) ? nt(t4) : t4;
      }
      function Fa(t4) {
        let e4 = {};
        return t4.forEach((t5) => {
          e4 = null != t5 ? { ...e4, ...t5 } : e4;
        }), 0 === Object.keys(e4).length ? null : e4;
      }
      function Ha(t4, e4) {
        return e4.map((e5) => e5(t4));
      }
      function Ma(t4) {
        return t4.map((t5) => function(t6) {
          return !t6.validate;
        }(t5) ? t5 : (e4) => t5.validate(e4));
      }
      function Za(t4) {
        return null != t4 ? function(t5) {
          if (!t5)
            return null;
          const e4 = t5.filter(ja);
          return 0 == e4.length ? null : function(t6) {
            return Fa(Ha(t6, e4));
          };
        }(Ma(t4)) : null;
      }
      function La(e4) {
        return null != e4 ? function(e5) {
          if (!e5)
            return null;
          const n3 = e5.filter(ja);
          return 0 == n3.length ? null : function(e6) {
            return function(...e7) {
              const n4 = function(e8) {
                return t3(X(e8)) ? e8.pop() : void 0;
              }(e7), { args: r2, keys: s2 } = function(t4) {
                if (1 === t4.length) {
                  const e8 = t4[0];
                  if (ba(e8))
                    return { args: e8, keys: null };
                  if (function(t5) {
                    return t5 && "object" == typeof t5 && ka(t5) === Ca;
                  }(e8)) {
                    const t5 = Ta(e8);
                    return { args: t5.map((t6) => e8[t6]), keys: t5 };
                  }
                }
                return { args: t4, keys: null };
              }(e7), o2 = new S((t4) => {
                const { length: e8 } = r2;
                if (!e8)
                  return void t4.complete();
                const n5 = new Array(e8);
                let o3 = e8, i2 = e8;
                for (let l2 = 0; l2 < e8; l2++) {
                  let e9 = false;
                  $(r2[l2]).subscribe(P(t4, (t5) => {
                    e9 || (e9 = true, i2--), n5[l2] = t5;
                  }, () => o3--, void 0, () => {
                    (!o3 || !e9) && (i2 || t4.next(s2 ? xa(s2, n5) : n5), t4.complete());
                  }));
                }
              });
              return n4 ? o2.pipe(function(t4) {
                return j((e8) => function(t5, e9) {
                  return Ea(e9) ? t5(...e9) : t5(e9);
                }(t4, e8));
              }(n4)) : o2;
            }(Ha(e6, n3).map(Na)).pipe(j(Fa));
          };
        }(Ma(e4)) : null;
      }
      function za(t4, e4) {
        return null === t4 ? [e4] : Array.isArray(t4) ? [...t4, e4] : [t4, e4];
      }
      function Ba(t4) {
        return t4 ? Array.isArray(t4) ? t4 : [t4] : [];
      }
      function Ua(t4, e4) {
        return Array.isArray(t4) ? t4.includes(e4) : t4 === e4;
      }
      function qa(t4, e4) {
        const n3 = Ba(e4);
        return Ba(t4).forEach((t5) => {
          Ua(n3, t5) || n3.push(t5);
        }), n3;
      }
      function $a(t4, e4) {
        return Ba(e4).filter((e5) => !Ua(t4, e5));
      }
      class Ga {
        constructor() {
          this._rawValidators = [], this._rawAsyncValidators = [], this._onDestroyCallbacks = [];
        }
        get value() {
          return this.control ? this.control.value : null;
        }
        get valid() {
          return this.control ? this.control.valid : null;
        }
        get invalid() {
          return this.control ? this.control.invalid : null;
        }
        get pending() {
          return this.control ? this.control.pending : null;
        }
        get disabled() {
          return this.control ? this.control.disabled : null;
        }
        get enabled() {
          return this.control ? this.control.enabled : null;
        }
        get errors() {
          return this.control ? this.control.errors : null;
        }
        get pristine() {
          return this.control ? this.control.pristine : null;
        }
        get dirty() {
          return this.control ? this.control.dirty : null;
        }
        get touched() {
          return this.control ? this.control.touched : null;
        }
        get status() {
          return this.control ? this.control.status : null;
        }
        get untouched() {
          return this.control ? this.control.untouched : null;
        }
        get statusChanges() {
          return this.control ? this.control.statusChanges : null;
        }
        get valueChanges() {
          return this.control ? this.control.valueChanges : null;
        }
        get path() {
          return null;
        }
        _setValidators(t4) {
          this._rawValidators = t4 || [], this._composedValidatorFn = Za(this._rawValidators);
        }
        _setAsyncValidators(t4) {
          this._rawAsyncValidators = t4 || [], this._composedAsyncValidatorFn = La(this._rawAsyncValidators);
        }
        get validator() {
          return this._composedValidatorFn || null;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn || null;
        }
        _registerOnDestroy(t4) {
          this._onDestroyCallbacks.push(t4);
        }
        _invokeOnDestroyCallbacks() {
          this._onDestroyCallbacks.forEach((t4) => t4()), this._onDestroyCallbacks = [];
        }
        reset(t4) {
          this.control && this.control.reset(t4);
        }
        hasError(t4, e4) {
          return !!this.control && this.control.hasError(t4, e4);
        }
        getError(t4, e4) {
          return this.control ? this.control.getError(t4, e4) : null;
        }
      }
      class Wa extends Ga {
        get formDirective() {
          return null;
        }
        get path() {
          return null;
        }
      }
      class Qa extends Ga {
        constructor() {
          super(...arguments), this._parent = null, this.name = null, this.valueAccessor = null;
        }
      }
      let Ka = (() => {
        class t4 extends class {
          constructor(t5) {
            this._cd = t5;
          }
          get isTouched() {
            var _a2, _b;
            return !!((_b = (_a2 = this._cd) == null ? void 0 : _a2.control) == null ? void 0 : _b.touched);
          }
          get isUntouched() {
            var _a2, _b;
            return !!((_b = (_a2 = this._cd) == null ? void 0 : _a2.control) == null ? void 0 : _b.untouched);
          }
          get isPristine() {
            var _a2, _b;
            return !!((_b = (_a2 = this._cd) == null ? void 0 : _a2.control) == null ? void 0 : _b.pristine);
          }
          get isDirty() {
            var _a2, _b;
            return !!((_b = (_a2 = this._cd) == null ? void 0 : _a2.control) == null ? void 0 : _b.dirty);
          }
          get isValid() {
            var _a2, _b;
            return !!((_b = (_a2 = this._cd) == null ? void 0 : _a2.control) == null ? void 0 : _b.valid);
          }
          get isInvalid() {
            var _a2, _b;
            return !!((_b = (_a2 = this._cd) == null ? void 0 : _a2.control) == null ? void 0 : _b.invalid);
          }
          get isPending() {
            var _a2, _b;
            return !!((_b = (_a2 = this._cd) == null ? void 0 : _a2.control) == null ? void 0 : _b.pending);
          }
          get isSubmitted() {
            var _a2;
            return !!((_a2 = this._cd) == null ? void 0 : _a2.submitted);
          }
        } {
          constructor(t5) {
            super(t5);
          }
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)(Os(Qa, 2));
        }, t4.\u0275dir = Wt({ type: t4, selectors: [["", "formControlName", ""], ["", "ngModel", ""], ["", "formControl", ""]], hostVars: 14, hostBindings: function(t5, e4) {
          2 & t5 && ti("ng-untouched", e4.isUntouched)("ng-touched", e4.isTouched)("ng-pristine", e4.isPristine)("ng-dirty", e4.isDirty)("ng-valid", e4.isValid)("ng-invalid", e4.isInvalid)("ng-pending", e4.isPending);
        }, features: [Oo] }), t4;
      })();
      const Xa = "VALID", Ja = "INVALID", Ya = "PENDING", tu = "DISABLED";
      function eu(t4) {
        return Array.isArray(t4) ? Za(t4) : t4 || null;
      }
      function nu(t4) {
        return Array.isArray(t4) ? La(t4) : t4 || null;
      }
      function ru(t4) {
        return null != t4 && !Array.isArray(t4) && "object" == typeof t4;
      }
      function su(t4, e4) {
        t4.forEach((t5) => {
          t5.registerOnValidatorChange && t5.registerOnValidatorChange(e4);
        });
      }
      function ou(t4, e4) {
        t4._pendingDirty && t4.markAsDirty(), t4.setValue(t4._pendingValue, { emitModelToViewChange: false }), e4.viewToModelUpdate(t4._pendingValue), t4._pendingChange = false;
      }
      function iu(t4, e4) {
        const n3 = t4.indexOf(e4);
        n3 > -1 && t4.splice(n3, 1);
      }
      function lu(t4) {
        return "object" == typeof t4 && null !== t4 && 2 === Object.keys(t4).length && "value" in t4 && "disabled" in t4;
      }
      const au = { provide: Qa, useExisting: ct(() => cu) }, uu = Promise.resolve();
      let cu = (() => {
        class t4 extends Qa {
          constructor(t5, e4, n3, r2, s2) {
            super(), this._changeDetectorRef = s2, this.control = new class extends class {
              constructor(t6, e5) {
                this._pendingDirty = false, this._hasOwnPendingAsyncValidator = false, this._pendingTouched = false, this._onCollectionChange = () => {
                }, this._parent = null, this.pristine = true, this.touched = false, this._onDisabledChange = [], this._rawValidators = t6, this._rawAsyncValidators = e5, this._composedValidatorFn = eu(this._rawValidators), this._composedAsyncValidatorFn = nu(this._rawAsyncValidators);
              }
              get validator() {
                return this._composedValidatorFn;
              }
              set validator(t6) {
                this._rawValidators = this._composedValidatorFn = t6;
              }
              get asyncValidator() {
                return this._composedAsyncValidatorFn;
              }
              set asyncValidator(t6) {
                this._rawAsyncValidators = this._composedAsyncValidatorFn = t6;
              }
              get parent() {
                return this._parent;
              }
              get valid() {
                return this.status === Xa;
              }
              get invalid() {
                return this.status === Ja;
              }
              get pending() {
                return this.status == Ya;
              }
              get disabled() {
                return this.status === tu;
              }
              get enabled() {
                return this.status !== tu;
              }
              get dirty() {
                return !this.pristine;
              }
              get untouched() {
                return !this.touched;
              }
              get updateOn() {
                return this._updateOn ? this._updateOn : this.parent ? this.parent.updateOn : "change";
              }
              setValidators(t6) {
                this._rawValidators = t6, this._composedValidatorFn = eu(t6);
              }
              setAsyncValidators(t6) {
                this._rawAsyncValidators = t6, this._composedAsyncValidatorFn = nu(t6);
              }
              addValidators(t6) {
                this.setValidators(qa(t6, this._rawValidators));
              }
              addAsyncValidators(t6) {
                this.setAsyncValidators(qa(t6, this._rawAsyncValidators));
              }
              removeValidators(t6) {
                this.setValidators($a(t6, this._rawValidators));
              }
              removeAsyncValidators(t6) {
                this.setAsyncValidators($a(t6, this._rawAsyncValidators));
              }
              hasValidator(t6) {
                return Ua(this._rawValidators, t6);
              }
              hasAsyncValidator(t6) {
                return Ua(this._rawAsyncValidators, t6);
              }
              clearValidators() {
                this.validator = null;
              }
              clearAsyncValidators() {
                this.asyncValidator = null;
              }
              markAsTouched(t6 = {}) {
                this.touched = true, this._parent && !t6.onlySelf && this._parent.markAsTouched(t6);
              }
              markAllAsTouched() {
                this.markAsTouched({ onlySelf: true }), this._forEachChild((t6) => t6.markAllAsTouched());
              }
              markAsUntouched(t6 = {}) {
                this.touched = false, this._pendingTouched = false, this._forEachChild((t7) => {
                  t7.markAsUntouched({ onlySelf: true });
                }), this._parent && !t6.onlySelf && this._parent._updateTouched(t6);
              }
              markAsDirty(t6 = {}) {
                this.pristine = false, this._parent && !t6.onlySelf && this._parent.markAsDirty(t6);
              }
              markAsPristine(t6 = {}) {
                this.pristine = true, this._pendingDirty = false, this._forEachChild((t7) => {
                  t7.markAsPristine({ onlySelf: true });
                }), this._parent && !t6.onlySelf && this._parent._updatePristine(t6);
              }
              markAsPending(t6 = {}) {
                this.status = Ya, false !== t6.emitEvent && this.statusChanges.emit(this.status), this._parent && !t6.onlySelf && this._parent.markAsPending(t6);
              }
              disable(t6 = {}) {
                const e5 = this._parentMarkedDirty(t6.onlySelf);
                this.status = tu, this.errors = null, this._forEachChild((e6) => {
                  e6.disable({ ...t6, onlySelf: true });
                }), this._updateValue(), false !== t6.emitEvent && (this.valueChanges.emit(this.value), this.statusChanges.emit(this.status)), this._updateAncestors({ ...t6, skipPristineCheck: e5 }), this._onDisabledChange.forEach((t7) => t7(true));
              }
              enable(t6 = {}) {
                const e5 = this._parentMarkedDirty(t6.onlySelf);
                this.status = Xa, this._forEachChild((e6) => {
                  e6.enable({ ...t6, onlySelf: true });
                }), this.updateValueAndValidity({ onlySelf: true, emitEvent: t6.emitEvent }), this._updateAncestors({ ...t6, skipPristineCheck: e5 }), this._onDisabledChange.forEach((t7) => t7(false));
              }
              _updateAncestors(t6) {
                this._parent && !t6.onlySelf && (this._parent.updateValueAndValidity(t6), t6.skipPristineCheck || this._parent._updatePristine(), this._parent._updateTouched());
              }
              setParent(t6) {
                this._parent = t6;
              }
              getRawValue() {
                return this.value;
              }
              updateValueAndValidity(t6 = {}) {
                this._setInitialStatus(), this._updateValue(), this.enabled && (this._cancelExistingSubscription(), this.errors = this._runValidator(), this.status = this._calculateStatus(), (this.status === Xa || this.status === Ya) && this._runAsyncValidator(t6.emitEvent)), false !== t6.emitEvent && (this.valueChanges.emit(this.value), this.statusChanges.emit(this.status)), this._parent && !t6.onlySelf && this._parent.updateValueAndValidity(t6);
              }
              _updateTreeValidity(t6 = { emitEvent: true }) {
                this._forEachChild((e5) => e5._updateTreeValidity(t6)), this.updateValueAndValidity({ onlySelf: true, emitEvent: t6.emitEvent });
              }
              _setInitialStatus() {
                this.status = this._allControlsDisabled() ? tu : Xa;
              }
              _runValidator() {
                return this.validator ? this.validator(this) : null;
              }
              _runAsyncValidator(t6) {
                if (this.asyncValidator) {
                  this.status = Ya, this._hasOwnPendingAsyncValidator = true;
                  const e5 = Na(this.asyncValidator(this));
                  this._asyncValidationSubscription = e5.subscribe((e6) => {
                    this._hasOwnPendingAsyncValidator = false, this.setErrors(e6, { emitEvent: t6 });
                  });
                }
              }
              _cancelExistingSubscription() {
                this._asyncValidationSubscription && (this._asyncValidationSubscription.unsubscribe(), this._hasOwnPendingAsyncValidator = false);
              }
              setErrors(t6, e5 = {}) {
                this.errors = t6, this._updateControlsErrors(false !== e5.emitEvent);
              }
              get(t6) {
                let e5 = t6;
                return null == e5 || (Array.isArray(e5) || (e5 = e5.split(".")), 0 === e5.length) ? null : e5.reduce((t7, e6) => t7 && t7._find(e6), this);
              }
              getError(t6, e5) {
                const n4 = e5 ? this.get(e5) : this;
                return n4 && n4.errors ? n4.errors[t6] : null;
              }
              hasError(t6, e5) {
                return !!this.getError(t6, e5);
              }
              get root() {
                let t6 = this;
                for (; t6._parent; )
                  t6 = t6._parent;
                return t6;
              }
              _updateControlsErrors(t6) {
                this.status = this._calculateStatus(), t6 && this.statusChanges.emit(this.status), this._parent && this._parent._updateControlsErrors(t6);
              }
              _initObservables() {
                this.valueChanges = new Ci(), this.statusChanges = new Ci();
              }
              _calculateStatus() {
                return this._allControlsDisabled() ? tu : this.errors ? Ja : this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(Ya) ? Ya : this._anyControlsHaveStatus(Ja) ? Ja : Xa;
              }
              _anyControlsHaveStatus(t6) {
                return this._anyControls((e5) => e5.status === t6);
              }
              _anyControlsDirty() {
                return this._anyControls((t6) => t6.dirty);
              }
              _anyControlsTouched() {
                return this._anyControls((t6) => t6.touched);
              }
              _updatePristine(t6 = {}) {
                this.pristine = !this._anyControlsDirty(), this._parent && !t6.onlySelf && this._parent._updatePristine(t6);
              }
              _updateTouched(t6 = {}) {
                this.touched = this._anyControlsTouched(), this._parent && !t6.onlySelf && this._parent._updateTouched(t6);
              }
              _registerOnCollectionChange(t6) {
                this._onCollectionChange = t6;
              }
              _setUpdateStrategy(t6) {
                ru(t6) && null != t6.updateOn && (this._updateOn = t6.updateOn);
              }
              _parentMarkedDirty(t6) {
                return !t6 && !(!this._parent || !this._parent.dirty) && !this._parent._anyControlsDirty();
              }
              _find(t6) {
                return null;
              }
            } {
              constructor(t6 = null, e5, n4) {
                super(function(t7) {
                  return (ru(t7) ? t7.validators : t7) || null;
                }(e5), function(t7, e6) {
                  return (ru(e6) ? e6.asyncValidators : t7) || null;
                }(n4, e5)), this.defaultValue = null, this._onChange = [], this._pendingChange = false, this._applyFormState(t6), this._setUpdateStrategy(e5), this._initObservables(), this.updateValueAndValidity({ onlySelf: true, emitEvent: !!this.asyncValidator }), ru(e5) && (e5.nonNullable || e5.initialValueIsDefault) && (this.defaultValue = lu(t6) ? t6.value : t6);
              }
              setValue(t6, e5 = {}) {
                this.value = this._pendingValue = t6, this._onChange.length && false !== e5.emitModelToViewChange && this._onChange.forEach((t7) => t7(this.value, false !== e5.emitViewToModelChange)), this.updateValueAndValidity(e5);
              }
              patchValue(t6, e5 = {}) {
                this.setValue(t6, e5);
              }
              reset(t6 = this.defaultValue, e5 = {}) {
                this._applyFormState(t6), this.markAsPristine(e5), this.markAsUntouched(e5), this.setValue(this.value, e5), this._pendingChange = false;
              }
              _updateValue() {
              }
              _anyControls(t6) {
                return false;
              }
              _allControlsDisabled() {
                return this.disabled;
              }
              registerOnChange(t6) {
                this._onChange.push(t6);
              }
              _unregisterOnChange(t6) {
                iu(this._onChange, t6);
              }
              registerOnDisabledChange(t6) {
                this._onDisabledChange.push(t6);
              }
              _unregisterOnDisabledChange(t6) {
                iu(this._onDisabledChange, t6);
              }
              _forEachChild(t6) {
              }
              _syncPendingControls() {
                return !("submit" !== this.updateOn || (this._pendingDirty && this.markAsDirty(), this._pendingTouched && this.markAsTouched(), !this._pendingChange) || (this.setValue(this._pendingValue, { onlySelf: true, emitModelToViewChange: false }), 0));
              }
              _applyFormState(t6) {
                lu(t6) ? (this.value = this._pendingValue = t6.value, t6.disabled ? this.disable({ onlySelf: true, emitEvent: false }) : this.enable({ onlySelf: true, emitEvent: false })) : this.value = this._pendingValue = t6;
              }
            }(), this._registered = false, this.update = new Ci(), this._parent = t5, this._setValidators(e4), this._setAsyncValidators(n3), this.valueAccessor = function(t6, e5) {
              if (!e5)
                return null;
              let n4, r3, s3;
              return Array.isArray(e5), e5.forEach((t7) => {
                t7.constructor === Va ? n4 = t7 : function(t8) {
                  return Object.getPrototypeOf(t8.constructor) === Aa;
                }(t7) ? r3 = t7 : s3 = t7;
              }), s3 || r3 || n4 || null;
            }(0, r2);
          }
          ngOnChanges(t5) {
            if (this._checkForErrors(), !this._registered || "name" in t5) {
              if (this._registered && (this._checkName(), this.formDirective)) {
                const e4 = t5.name.previousValue;
                this.formDirective.removeControl({ name: e4, path: this._getPath(e4) });
              }
              this._setUpControl();
            }
            "isDisabled" in t5 && this._updateDisabled(t5), function(t6, e4) {
              if (!t6.hasOwnProperty("model"))
                return false;
              const n3 = t6.model;
              return !!n3.isFirstChange() || !Object.is(e4, n3.currentValue);
            }(t5, this.viewModel) && (this._updateValue(this.model), this.viewModel = this.model);
          }
          ngOnDestroy() {
            this.formDirective && this.formDirective.removeControl(this);
          }
          get path() {
            return this._getPath(this.name);
          }
          get formDirective() {
            return this._parent ? this._parent.formDirective : null;
          }
          viewToModelUpdate(t5) {
            this.viewModel = t5, this.update.emit(t5);
          }
          _setUpControl() {
            this._setUpdateStrategy(), this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this), this._registered = true;
          }
          _setUpdateStrategy() {
            this.options && null != this.options.updateOn && (this.control._updateOn = this.options.updateOn);
          }
          _isStandalone() {
            return !this._parent || !(!this.options || !this.options.standalone);
          }
          _setUpStandalone() {
            (function(t5, e4) {
              var _a2, _b;
              (function(t6, e5) {
                const n3 = function(t7) {
                  return t7._rawValidators;
                }(t6);
                null !== e5.validator ? t6.setValidators(za(n3, e5.validator)) : "function" == typeof n3 && t6.setValidators([n3]);
                const r2 = function(t7) {
                  return t7._rawAsyncValidators;
                }(t6);
                null !== e5.asyncValidator ? t6.setAsyncValidators(za(r2, e5.asyncValidator)) : "function" == typeof r2 && t6.setAsyncValidators([r2]);
                const s2 = () => t6.updateValueAndValidity();
                su(e5._rawValidators, s2), su(e5._rawAsyncValidators, s2);
              })(t5, e4), e4.valueAccessor.writeValue(t5.value), t5.disabled && ((_b = (_a2 = e4.valueAccessor).setDisabledState) == null ? void 0 : _b.call(_a2, true)), function(t6, e5) {
                e5.valueAccessor.registerOnChange((n3) => {
                  t6._pendingValue = n3, t6._pendingChange = true, t6._pendingDirty = true, "change" === t6.updateOn && ou(t6, e5);
                });
              }(t5, e4), function(t6, e5) {
                const n3 = (t7, n4) => {
                  e5.valueAccessor.writeValue(t7), n4 && e5.viewToModelUpdate(t7);
                };
                t6.registerOnChange(n3), e5._registerOnDestroy(() => {
                  t6._unregisterOnChange(n3);
                });
              }(t5, e4), function(t6, e5) {
                e5.valueAccessor.registerOnTouched(() => {
                  t6._pendingTouched = true, "blur" === t6.updateOn && t6._pendingChange && ou(t6, e5), "submit" !== t6.updateOn && t6.markAsTouched();
                });
              }(t5, e4), function(t6, e5) {
                if (e5.valueAccessor.setDisabledState) {
                  const n3 = (t7) => {
                    e5.valueAccessor.setDisabledState(t7);
                  };
                  t6.registerOnDisabledChange(n3), e5._registerOnDestroy(() => {
                    t6._unregisterOnDisabledChange(n3);
                  });
                }
              }(t5, e4);
            })(this.control, this), this.control.updateValueAndValidity({ emitEvent: false });
          }
          _checkForErrors() {
            this._isStandalone() || this._checkParentType(), this._checkName();
          }
          _checkParentType() {
          }
          _checkName() {
            this.options && this.options.name && (this.name = this.options.name), this._isStandalone();
          }
          _updateValue(t5) {
            uu.then(() => {
              var _a2;
              this.control.setValue(t5, { emitViewToModelChange: false }), (_a2 = this._changeDetectorRef) == null ? void 0 : _a2.markForCheck();
            });
          }
          _updateDisabled(t5) {
            const e4 = t5.isDisabled.currentValue, n3 = 0 !== e4 && function(t6) {
              return "boolean" == typeof t6 ? t6 : null != t6 && "false" !== t6;
            }(e4);
            uu.then(() => {
              var _a2;
              n3 && !this.control.disabled ? this.control.disable() : !n3 && this.control.disabled && this.control.enable(), (_a2 = this._changeDetectorRef) == null ? void 0 : _a2.markForCheck();
            });
          }
          _getPath(t5) {
            return this._parent ? function(t6, e4) {
              return [...e4.path, t6];
            }(t5, this._parent) : [t5];
          }
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)(Os(Wa, 9), Os(Pa, 10), Os(Ra, 10), Os(Ia, 10), Os(fl, 8));
        }, t4.\u0275dir = Wt({ type: t4, selectors: [["", "ngModel", "", 3, "formControlName", "", 3, "formControl", ""]], inputs: { name: "name", isDisabled: ["disabled", "isDisabled"], model: ["ngModel", "model"], options: ["ngModelOptions", "options"] }, outputs: { update: "ngModelChange" }, exportAs: ["ngModel"], features: [yi([au]), Oo, ue] }), t4;
      })(), hu = (() => {
        class t4 {
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)();
        }, t4.\u0275mod = $t({ type: t4 }), t4.\u0275inj = yt({}), t4;
      })(), du = (() => {
        class t4 {
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)();
        }, t4.\u0275mod = $t({ type: t4 }), t4.\u0275inj = yt({ imports: [hu] }), t4;
      })(), fu = (() => {
        class t4 {
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)();
        }, t4.\u0275mod = $t({ type: t4 }), t4.\u0275inj = yt({ imports: [du] }), t4;
      })();
      function pu(...t4) {
        return nt(t4, J(t4));
      }
      class gu {
      }
      class _u {
      }
      class yu {
        constructor(t4) {
          this.normalizedNames = /* @__PURE__ */ new Map(), this.lazyUpdate = null, t4 ? this.lazyInit = "string" == typeof t4 ? () => {
            this.headers = /* @__PURE__ */ new Map(), t4.split("\n").forEach((t5) => {
              const e4 = t5.indexOf(":");
              if (e4 > 0) {
                const n3 = t5.slice(0, e4), r2 = n3.toLowerCase(), s2 = t5.slice(e4 + 1).trim();
                this.maybeSetNormalizedName(n3, r2), this.headers.has(r2) ? this.headers.get(r2).push(s2) : this.headers.set(r2, [s2]);
              }
            });
          } : () => {
            this.headers = /* @__PURE__ */ new Map(), Object.keys(t4).forEach((e4) => {
              let n3 = t4[e4];
              const r2 = e4.toLowerCase();
              "string" == typeof n3 && (n3 = [n3]), n3.length > 0 && (this.headers.set(r2, n3), this.maybeSetNormalizedName(e4, r2));
            });
          } : this.headers = /* @__PURE__ */ new Map();
        }
        has(t4) {
          return this.init(), this.headers.has(t4.toLowerCase());
        }
        get(t4) {
          this.init();
          const e4 = this.headers.get(t4.toLowerCase());
          return e4 && e4.length > 0 ? e4[0] : null;
        }
        keys() {
          return this.init(), Array.from(this.normalizedNames.values());
        }
        getAll(t4) {
          return this.init(), this.headers.get(t4.toLowerCase()) || null;
        }
        append(t4, e4) {
          return this.clone({ name: t4, value: e4, op: "a" });
        }
        set(t4, e4) {
          return this.clone({ name: t4, value: e4, op: "s" });
        }
        delete(t4, e4) {
          return this.clone({ name: t4, value: e4, op: "d" });
        }
        maybeSetNormalizedName(t4, e4) {
          this.normalizedNames.has(e4) || this.normalizedNames.set(e4, t4);
        }
        init() {
          this.lazyInit && (this.lazyInit instanceof yu ? this.copyFrom(this.lazyInit) : this.lazyInit(), this.lazyInit = null, this.lazyUpdate && (this.lazyUpdate.forEach((t4) => this.applyUpdate(t4)), this.lazyUpdate = null));
        }
        copyFrom(t4) {
          t4.init(), Array.from(t4.headers.keys()).forEach((e4) => {
            this.headers.set(e4, t4.headers.get(e4)), this.normalizedNames.set(e4, t4.normalizedNames.get(e4));
          });
        }
        clone(t4) {
          const e4 = new yu();
          return e4.lazyInit = this.lazyInit && this.lazyInit instanceof yu ? this.lazyInit : this, e4.lazyUpdate = (this.lazyUpdate || []).concat([t4]), e4;
        }
        applyUpdate(t4) {
          const e4 = t4.name.toLowerCase();
          switch (t4.op) {
            case "a":
            case "s":
              let n3 = t4.value;
              if ("string" == typeof n3 && (n3 = [n3]), 0 === n3.length)
                return;
              this.maybeSetNormalizedName(t4.name, e4);
              const r2 = ("a" === t4.op ? this.headers.get(e4) : void 0) || [];
              r2.push(...n3), this.headers.set(e4, r2);
              break;
            case "d":
              const s2 = t4.value;
              if (s2) {
                let t5 = this.headers.get(e4);
                if (!t5)
                  return;
                t5 = t5.filter((t6) => -1 === s2.indexOf(t6)), 0 === t5.length ? (this.headers.delete(e4), this.normalizedNames.delete(e4)) : this.headers.set(e4, t5);
              } else
                this.headers.delete(e4), this.normalizedNames.delete(e4);
          }
        }
        forEach(t4) {
          this.init(), Array.from(this.normalizedNames.keys()).forEach((e4) => t4(this.normalizedNames.get(e4), this.headers.get(e4)));
        }
      }
      class mu {
        encodeKey(t4) {
          return bu(t4);
        }
        encodeValue(t4) {
          return bu(t4);
        }
        decodeKey(t4) {
          return decodeURIComponent(t4);
        }
        decodeValue(t4) {
          return decodeURIComponent(t4);
        }
      }
      const vu = /%(\d[a-f0-9])/gi, wu = { 40: "@", "3A": ":", 24: "$", "2C": ",", "3B": ";", "3D": "=", "3F": "?", "2F": "/" };
      function bu(t4) {
        return encodeURIComponent(t4).replace(vu, (t5, e4) => {
          var _a2;
          return (_a2 = wu[e4]) != null ? _a2 : t5;
        });
      }
      function ku(t4) {
        return `${t4}`;
      }
      class Cu {
        constructor(t4 = {}) {
          if (this.updates = null, this.cloneFrom = null, this.encoder = t4.encoder || new mu(), t4.fromString) {
            if (t4.fromObject)
              throw new Error("Cannot specify both fromString and fromObject.");
            this.map = function(t5, e4) {
              const n3 = /* @__PURE__ */ new Map();
              return t5.length > 0 && t5.replace(/^\?/, "").split("&").forEach((t6) => {
                const r2 = t6.indexOf("="), [s2, o2] = -1 == r2 ? [e4.decodeKey(t6), ""] : [e4.decodeKey(t6.slice(0, r2)), e4.decodeValue(t6.slice(r2 + 1))], i2 = n3.get(s2) || [];
                i2.push(o2), n3.set(s2, i2);
              }), n3;
            }(t4.fromString, this.encoder);
          } else
            t4.fromObject ? (this.map = /* @__PURE__ */ new Map(), Object.keys(t4.fromObject).forEach((e4) => {
              const n3 = t4.fromObject[e4], r2 = Array.isArray(n3) ? n3.map(ku) : [ku(n3)];
              this.map.set(e4, r2);
            })) : this.map = null;
        }
        has(t4) {
          return this.init(), this.map.has(t4);
        }
        get(t4) {
          this.init();
          const e4 = this.map.get(t4);
          return e4 ? e4[0] : null;
        }
        getAll(t4) {
          return this.init(), this.map.get(t4) || null;
        }
        keys() {
          return this.init(), Array.from(this.map.keys());
        }
        append(t4, e4) {
          return this.clone({ param: t4, value: e4, op: "a" });
        }
        appendAll(t4) {
          const e4 = [];
          return Object.keys(t4).forEach((n3) => {
            const r2 = t4[n3];
            Array.isArray(r2) ? r2.forEach((t5) => {
              e4.push({ param: n3, value: t5, op: "a" });
            }) : e4.push({ param: n3, value: r2, op: "a" });
          }), this.clone(e4);
        }
        set(t4, e4) {
          return this.clone({ param: t4, value: e4, op: "s" });
        }
        delete(t4, e4) {
          return this.clone({ param: t4, value: e4, op: "d" });
        }
        toString() {
          return this.init(), this.keys().map((t4) => {
            const e4 = this.encoder.encodeKey(t4);
            return this.map.get(t4).map((t5) => e4 + "=" + this.encoder.encodeValue(t5)).join("&");
          }).filter((t4) => "" !== t4).join("&");
        }
        clone(t4) {
          const e4 = new Cu({ encoder: this.encoder });
          return e4.cloneFrom = this.cloneFrom || this, e4.updates = (this.updates || []).concat(t4), e4;
        }
        init() {
          null === this.map && (this.map = /* @__PURE__ */ new Map()), null !== this.cloneFrom && (this.cloneFrom.init(), this.cloneFrom.keys().forEach((t4) => this.map.set(t4, this.cloneFrom.map.get(t4))), this.updates.forEach((t4) => {
            switch (t4.op) {
              case "a":
              case "s":
                const e4 = ("a" === t4.op ? this.map.get(t4.param) : void 0) || [];
                e4.push(ku(t4.value)), this.map.set(t4.param, e4);
                break;
              case "d":
                if (void 0 === t4.value) {
                  this.map.delete(t4.param);
                  break;
                }
                {
                  let e5 = this.map.get(t4.param) || [];
                  const n3 = e5.indexOf(ku(t4.value));
                  -1 !== n3 && e5.splice(n3, 1), e5.length > 0 ? this.map.set(t4.param, e5) : this.map.delete(t4.param);
                }
            }
          }), this.cloneFrom = this.updates = null);
        }
      }
      class Tu {
        constructor() {
          this.map = /* @__PURE__ */ new Map();
        }
        set(t4, e4) {
          return this.map.set(t4, e4), this;
        }
        get(t4) {
          return this.map.has(t4) || this.map.set(t4, t4.defaultValue()), this.map.get(t4);
        }
        delete(t4) {
          return this.map.delete(t4), this;
        }
        has(t4) {
          return this.map.has(t4);
        }
        keys() {
          return this.map.keys();
        }
      }
      function Eu(t4) {
        return typeof ArrayBuffer < "u" && t4 instanceof ArrayBuffer;
      }
      function xu(t4) {
        return typeof Blob < "u" && t4 instanceof Blob;
      }
      function Su(t4) {
        return typeof FormData < "u" && t4 instanceof FormData;
      }
      class Au {
        constructor(t4, e4, n3, r2) {
          let s2;
          if (this.url = e4, this.body = null, this.reportProgress = false, this.withCredentials = false, this.responseType = "json", this.method = t4.toUpperCase(), function(t5) {
            switch (t5) {
              case "DELETE":
              case "GET":
              case "HEAD":
              case "OPTIONS":
              case "JSONP":
                return false;
              default:
                return true;
            }
          }(this.method) || r2 ? (this.body = void 0 !== n3 ? n3 : null, s2 = r2) : s2 = n3, s2 && (this.reportProgress = !!s2.reportProgress, this.withCredentials = !!s2.withCredentials, s2.responseType && (this.responseType = s2.responseType), s2.headers && (this.headers = s2.headers), s2.context && (this.context = s2.context), s2.params && (this.params = s2.params)), this.headers || (this.headers = new yu()), this.context || (this.context = new Tu()), this.params) {
            const t5 = this.params.toString();
            if (0 === t5.length)
              this.urlWithParams = e4;
            else {
              const n4 = e4.indexOf("?");
              this.urlWithParams = e4 + (-1 === n4 ? "?" : n4 < e4.length - 1 ? "&" : "") + t5;
            }
          } else
            this.params = new Cu(), this.urlWithParams = e4;
        }
        serializeBody() {
          return null === this.body ? null : Eu(this.body) || xu(this.body) || Su(this.body) || function(t4) {
            return typeof URLSearchParams < "u" && t4 instanceof URLSearchParams;
          }(this.body) || "string" == typeof this.body ? this.body : this.body instanceof Cu ? this.body.toString() : "object" == typeof this.body || "boolean" == typeof this.body || Array.isArray(this.body) ? JSON.stringify(this.body) : this.body.toString();
        }
        detectContentTypeHeader() {
          return null === this.body || Su(this.body) ? null : xu(this.body) ? this.body.type || null : Eu(this.body) ? null : "string" == typeof this.body ? "text/plain" : this.body instanceof Cu ? "application/x-www-form-urlencoded;charset=UTF-8" : "object" == typeof this.body || "number" == typeof this.body || "boolean" == typeof this.body ? "application/json" : null;
        }
        clone(t4 = {}) {
          var _a2;
          const e4 = t4.method || this.method, n3 = t4.url || this.url, r2 = t4.responseType || this.responseType, s2 = void 0 !== t4.body ? t4.body : this.body, o2 = void 0 !== t4.withCredentials ? t4.withCredentials : this.withCredentials, i2 = void 0 !== t4.reportProgress ? t4.reportProgress : this.reportProgress;
          let l2 = t4.headers || this.headers, a2 = t4.params || this.params;
          const u2 = (_a2 = t4.context) != null ? _a2 : this.context;
          return void 0 !== t4.setHeaders && (l2 = Object.keys(t4.setHeaders).reduce((e5, n4) => e5.set(n4, t4.setHeaders[n4]), l2)), t4.setParams && (a2 = Object.keys(t4.setParams).reduce((e5, n4) => e5.set(n4, t4.setParams[n4]), a2)), new Au(e4, n3, s2, { params: a2, headers: l2, context: u2, reportProgress: i2, responseType: r2, withCredentials: o2 });
        }
      }
      var Iu = ((Iu = Iu || {})[Iu.Sent = 0] = "Sent", Iu[Iu.UploadProgress = 1] = "UploadProgress", Iu[Iu.ResponseHeader = 2] = "ResponseHeader", Iu[Iu.DownloadProgress = 3] = "DownloadProgress", Iu[Iu.Response = 4] = "Response", Iu[Iu.User = 5] = "User", Iu);
      class Ou {
        constructor(t4, e4 = 200, n3 = "OK") {
          this.headers = t4.headers || new yu(), this.status = void 0 !== t4.status ? t4.status : e4, this.statusText = t4.statusText || n3, this.url = t4.url || null, this.ok = this.status >= 200 && this.status < 300;
        }
      }
      class Du extends Ou {
        constructor(t4 = {}) {
          super(t4), this.type = Iu.ResponseHeader;
        }
        clone(t4 = {}) {
          return new Du({ headers: t4.headers || this.headers, status: void 0 !== t4.status ? t4.status : this.status, statusText: t4.statusText || this.statusText, url: t4.url || this.url || void 0 });
        }
      }
      class Vu extends Ou {
        constructor(t4 = {}) {
          super(t4), this.type = Iu.Response, this.body = void 0 !== t4.body ? t4.body : null;
        }
        clone(t4 = {}) {
          return new Vu({ body: void 0 !== t4.body ? t4.body : this.body, headers: t4.headers || this.headers, status: void 0 !== t4.status ? t4.status : this.status, statusText: t4.statusText || this.statusText, url: t4.url || this.url || void 0 });
        }
      }
      class Pu extends Ou {
        constructor(t4) {
          super(t4, 0, "Unknown Error"), this.name = "HttpErrorResponse", this.ok = false, this.message = this.status >= 200 && this.status < 300 ? `Http failure during parsing for ${t4.url || "(unknown url)"}` : `Http failure response for ${t4.url || "(unknown url)"}: ${t4.status} ${t4.statusText}`, this.error = t4.error || null;
        }
      }
      function Ru(t4, e4) {
        return { body: e4, headers: t4.headers, context: t4.context, observe: t4.observe, params: t4.params, reportProgress: t4.reportProgress, responseType: t4.responseType, withCredentials: t4.withCredentials };
      }
      let ju = (() => {
        class e4 {
          constructor(t4) {
            this.handler = t4;
          }
          request(e5, n3, r2 = {}) {
            let s2;
            if (e5 instanceof Au)
              s2 = e5;
            else {
              let t4, o3;
              t4 = r2.headers instanceof yu ? r2.headers : new yu(r2.headers), r2.params && (o3 = r2.params instanceof Cu ? r2.params : new Cu({ fromObject: r2.params })), s2 = new Au(e5, n3, void 0 !== r2.body ? r2.body : null, { headers: t4, context: r2.context, params: o3, reportProgress: r2.reportProgress, responseType: r2.responseType || "json", withCredentials: r2.withCredentials });
            }
            const o2 = pu(s2).pipe(function(e6, n4) {
              return t3(n4) ? Q(e6, n4, 1) : Q(e6, 1);
            }((t4) => this.handler.handle(t4)));
            if (e5 instanceof Au || "events" === r2.observe)
              return o2;
            const i2 = o2.pipe(function(t4, e6) {
              return V((e7, n4) => {
                let r3 = 0;
                e7.subscribe(P(n4, (e8) => t4.call(void 0, e8, r3++) && n4.next(e8)));
              });
            }((t4) => t4 instanceof Vu));
            switch (r2.observe || "body") {
              case "body":
                switch (s2.responseType) {
                  case "arraybuffer":
                    return i2.pipe(j((t4) => {
                      if (null !== t4.body && !(t4.body instanceof ArrayBuffer))
                        throw new Error("Response is not an ArrayBuffer.");
                      return t4.body;
                    }));
                  case "blob":
                    return i2.pipe(j((t4) => {
                      if (null !== t4.body && !(t4.body instanceof Blob))
                        throw new Error("Response is not a Blob.");
                      return t4.body;
                    }));
                  case "text":
                    return i2.pipe(j((t4) => {
                      if (null !== t4.body && "string" != typeof t4.body)
                        throw new Error("Response is not a string.");
                      return t4.body;
                    }));
                  default:
                    return i2.pipe(j((t4) => t4.body));
                }
              case "response":
                return i2;
              default:
                throw new Error(`Unreachable: unhandled observe type ${r2.observe}}`);
            }
          }
          delete(t4, e5 = {}) {
            return this.request("DELETE", t4, e5);
          }
          get(t4, e5 = {}) {
            return this.request("GET", t4, e5);
          }
          head(t4, e5 = {}) {
            return this.request("HEAD", t4, e5);
          }
          jsonp(t4, e5) {
            return this.request("JSONP", t4, { params: new Cu().append(e5, "JSONP_CALLBACK"), observe: "body", responseType: "json" });
          }
          options(t4, e5 = {}) {
            return this.request("OPTIONS", t4, e5);
          }
          patch(t4, e5, n3 = {}) {
            return this.request("PATCH", t4, Ru(n3, e5));
          }
          post(t4, e5, n3 = {}) {
            return this.request("POST", t4, Ru(n3, e5));
          }
          put(t4, e5, n3 = {}) {
            return this.request("PUT", t4, Ru(n3, e5));
          }
        }
        return e4.\u0275fac = function(t4) {
          return new (t4 || e4)(Wn(gu));
        }, e4.\u0275prov = _t({ token: e4, factory: e4.\u0275fac }), e4;
      })();
      class Nu {
        constructor(t4, e4) {
          this.next = t4, this.interceptor = e4;
        }
        handle(t4) {
          return this.interceptor.intercept(t4, this.next);
        }
      }
      const Fu = new Pn("HTTP_INTERCEPTORS");
      let Hu = (() => {
        class t4 {
          intercept(t5, e4) {
            return e4.handle(t5);
          }
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)();
        }, t4.\u0275prov = _t({ token: t4, factory: t4.\u0275fac }), t4;
      })();
      const Mu = /^\)\]\}',?\n/;
      let Zu = (() => {
        class t4 {
          constructor(t5) {
            this.xhrFactory = t5;
          }
          handle(t5) {
            if ("JSONP" === t5.method)
              throw new Error("Attempted to construct Jsonp request without HttpClientJsonpModule installed.");
            return new S((e4) => {
              const n3 = this.xhrFactory.build();
              if (n3.open(t5.method, t5.urlWithParams), t5.withCredentials && (n3.withCredentials = true), t5.headers.forEach((t6, e5) => n3.setRequestHeader(t6, e5.join(","))), t5.headers.has("Accept") || n3.setRequestHeader("Accept", "application/json, text/plain, */*"), !t5.headers.has("Content-Type")) {
                const e5 = t5.detectContentTypeHeader();
                null !== e5 && n3.setRequestHeader("Content-Type", e5);
              }
              if (t5.responseType) {
                const e5 = t5.responseType.toLowerCase();
                n3.responseType = "json" !== e5 ? e5 : "text";
              }
              const r2 = t5.serializeBody();
              let s2 = null;
              const o2 = () => {
                if (null !== s2)
                  return s2;
                const e5 = n3.statusText || "OK", r3 = new yu(n3.getAllResponseHeaders()), o3 = function(t6) {
                  return "responseURL" in t6 && t6.responseURL ? t6.responseURL : /^X-Request-URL:/m.test(t6.getAllResponseHeaders()) ? t6.getResponseHeader("X-Request-URL") : null;
                }(n3) || t5.url;
                return s2 = new Du({ headers: r3, status: n3.status, statusText: e5, url: o3 }), s2;
              }, i2 = () => {
                let { headers: r3, status: s3, statusText: i3, url: l3 } = o2(), a3 = null;
                204 !== s3 && (a3 = typeof n3.response > "u" ? n3.responseText : n3.response), 0 === s3 && (s3 = a3 ? 200 : 0);
                let u3 = s3 >= 200 && s3 < 300;
                if ("json" === t5.responseType && "string" == typeof a3) {
                  const t6 = a3;
                  a3 = a3.replace(Mu, "");
                  try {
                    a3 = "" !== a3 ? JSON.parse(a3) : null;
                  } catch (e5) {
                    a3 = t6, u3 && (u3 = false, a3 = { error: e5, text: a3 });
                  }
                }
                u3 ? (e4.next(new Vu({ body: a3, headers: r3, status: s3, statusText: i3, url: l3 || void 0 })), e4.complete()) : e4.error(new Pu({ error: a3, headers: r3, status: s3, statusText: i3, url: l3 || void 0 }));
              }, l2 = (t6) => {
                const { url: r3 } = o2(), s3 = new Pu({ error: t6, status: n3.status || 0, statusText: n3.statusText || "Unknown Error", url: r3 || void 0 });
                e4.error(s3);
              };
              let a2 = false;
              const u2 = (r3) => {
                a2 || (e4.next(o2()), a2 = true);
                let s3 = { type: Iu.DownloadProgress, loaded: r3.loaded };
                r3.lengthComputable && (s3.total = r3.total), "text" === t5.responseType && !!n3.responseText && (s3.partialText = n3.responseText), e4.next(s3);
              }, c2 = (t6) => {
                let n4 = { type: Iu.UploadProgress, loaded: t6.loaded };
                t6.lengthComputable && (n4.total = t6.total), e4.next(n4);
              };
              return n3.addEventListener("load", i2), n3.addEventListener("error", l2), n3.addEventListener("timeout", l2), n3.addEventListener("abort", l2), t5.reportProgress && (n3.addEventListener("progress", u2), null !== r2 && n3.upload && n3.upload.addEventListener("progress", c2)), n3.send(r2), e4.next({ type: Iu.Sent }), () => {
                n3.removeEventListener("error", l2), n3.removeEventListener("abort", l2), n3.removeEventListener("load", i2), n3.removeEventListener("timeout", l2), t5.reportProgress && (n3.removeEventListener("progress", u2), null !== r2 && n3.upload && n3.upload.removeEventListener("progress", c2)), n3.readyState !== n3.DONE && n3.abort();
              };
            });
          }
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)(Wn(Bl));
        }, t4.\u0275prov = _t({ token: t4, factory: t4.\u0275fac }), t4;
      })();
      const Lu = new Pn("XSRF_COOKIE_NAME"), zu = new Pn("XSRF_HEADER_NAME");
      class Bu {
      }
      let Uu = (() => {
        class t4 {
          constructor(t5, e4, n3) {
            this.doc = t5, this.platform = e4, this.cookieName = n3, this.lastCookieString = "", this.lastToken = null, this.parseCount = 0;
          }
          getToken() {
            if ("server" === this.platform)
              return null;
            const t5 = this.doc.cookie || "";
            return t5 !== this.lastCookieString && (this.parseCount++, this.lastToken = Rl(t5, this.cookieName), this.lastCookieString = t5), this.lastToken;
          }
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)(Wn(Pl), Wn(Zi), Wn(Lu));
        }, t4.\u0275prov = _t({ token: t4, factory: t4.\u0275fac }), t4;
      })(), qu = (() => {
        class t4 {
          constructor(t5, e4) {
            this.tokenService = t5, this.headerName = e4;
          }
          intercept(t5, e4) {
            const n3 = t5.url.toLowerCase();
            if ("GET" === t5.method || "HEAD" === t5.method || n3.startsWith("http://") || n3.startsWith("https://"))
              return e4.handle(t5);
            const r2 = this.tokenService.getToken();
            return null !== r2 && !t5.headers.has(this.headerName) && (t5 = t5.clone({ headers: t5.headers.set(this.headerName, r2) })), e4.handle(t5);
          }
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)(Wn(Bu), Wn(zu));
        }, t4.\u0275prov = _t({ token: t4, factory: t4.\u0275fac }), t4;
      })(), $u = (() => {
        class t4 {
          constructor(t5, e4) {
            this.backend = t5, this.injector = e4, this.chain = null;
          }
          handle(t5) {
            if (null === this.chain) {
              const t6 = this.injector.get(Fu, []);
              this.chain = t6.reduceRight((t7, e4) => new Nu(t7, e4), this.backend);
            }
            return this.chain.handle(t5);
          }
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)(Wn(_u), Wn(Is));
        }, t4.\u0275prov = _t({ token: t4, factory: t4.\u0275fac }), t4;
      })(), Gu = (() => {
        class t4 {
          static disable() {
            return { ngModule: t4, providers: [{ provide: qu, useClass: Hu }] };
          }
          static withOptions(e4 = {}) {
            return { ngModule: t4, providers: [e4.cookieName ? { provide: Lu, useValue: e4.cookieName } : [], e4.headerName ? { provide: zu, useValue: e4.headerName } : []] };
          }
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)();
        }, t4.\u0275mod = $t({ type: t4 }), t4.\u0275inj = yt({ providers: [qu, { provide: Fu, useExisting: qu, multi: true }, { provide: Bu, useClass: Uu }, { provide: Lu, useValue: "XSRF-TOKEN" }, { provide: zu, useValue: "X-XSRF-TOKEN" }] }), t4;
      })(), Wu = (() => {
        class t4 {
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)();
        }, t4.\u0275mod = $t({ type: t4 }), t4.\u0275inj = yt({ providers: [ju, { provide: gu, useClass: $u }, Zu, { provide: _u, useExisting: Zu }], imports: [Gu.withOptions({ cookieName: "XSRF-TOKEN", headerName: "X-XSRF-TOKEN" })] }), t4;
      })();
      function Qu(t4, e4, n3, r2, s2, o2, i2) {
        try {
          var l2 = t4[o2](i2), a2 = l2.value;
        } catch (t5) {
          return void n3(t5);
        }
        l2.done ? e4(a2) : Promise.resolve(a2).then(r2, s2);
      }
      const Ku = e3((t4) => function() {
        t4(this), this.name = "EmptyError", this.message = "no elements in sequence";
      });
      function Xu(t4, e4) {
        return V((n3, r2) => {
          let s2 = null, o2 = 0, i2 = false;
          const l2 = () => i2 && !s2 && r2.complete();
          n3.subscribe(P(r2, (n4) => {
            s2 == null ? void 0 : s2.unsubscribe();
            let i3 = 0;
            const a2 = o2++;
            $(t4(n4, a2)).subscribe(s2 = P(r2, (t5) => r2.next(e4 ? e4(n4, t5, a2, i3++) : t5), () => {
              s2 = null, l2();
            }));
          }, () => {
            i2 = true, l2();
          }));
        });
      }
      let Ju = (() => {
        class t4 {
          constructor(t5) {
            this.httpClient = t5, this.url = "", this.collideUrl = "https://htf.collide.be", this.headers = new yu({ "Content-Type": "application/json" });
          }
          solveChallenge(t5) {
            return this.httpClient.post(this.url + "/" + t5.id, t5.ingredients, { responseType: "text", headers: this.headers });
          }
          useTool(t5, e4) {
            let n3 = pu(e4);
            return this.url && (n3 = this.solveChallenge(t5)), n3.pipe(Xu((e5) => {
              const n4 = new Cu().set("formula", e5);
              return this.httpClient.post(this.collideUrl + "/use/" + t5.id, n4);
            }));
          }
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)(Wn(ju));
        }, t4.\u0275prov = _t({ token: t4, factory: t4.\u0275fac, providedIn: "root" }), t4;
      })();
      function Yu(t4, e4) {
        if (1 & t4) {
          const t5 = qo();
          Bo(0, "input", 16), Wo("ngModelChange", function(e5) {
            return Ae(t5), Ie(Xo(5).answer = e5);
          }), Uo();
        }
        2 & t4 && Lo("ngModel", Xo(5).answer);
      }
      function tc(t4, e4) {
        if (1 & t4) {
          const t5 = qo();
          Bo(0, "div"), Zo(1, Yu, 1, 1, "input", 14), Bo(2, "div"), oi(3), Uo(), Bo(4, "button", 15), Wo("click", function(e5) {
            Ae(t5);
            const n3 = Xo().$implicit;
            return Xo(3).useTool(n3), Ie(e5.stopPropagation());
          }), oi(5, "Use Tool"), Uo()();
        }
        if (2 & t4) {
          const t5 = Xo().$implicit, e5 = Xo(3);
          Es(1), Lo("ngIf", !e5.url), Es(2), ii(t5.id);
        }
      }
      const ec = function(t4) {
        return { solved: t4 };
      }, nc = function(t4) {
        return { active: t4 };
      };
      function rc(t4, e4) {
        if (1 & t4) {
          const t5 = qo();
          Bo(0, "li", 6), Wo("click", function() {
            const e5 = Ae(t5).$implicit;
            return Ie(Xo(3).activate(e5.id));
          }), Bo(1, "h2", 7), oi(2), Uo(), Bo(3, "p", 8), oi(4), Uo(), Bo(5, "div", 9)(6, "p", 10), oi(7), Uo(), Bo(8, "p", 11), oi(9), Uo(), Bo(10, "div", 12), oi(11), Uo(), Bo(12, "div", 13), oi(13), Uo(), Zo(14, tc, 6, 2, "div", 0), Uo()();
        }
        if (2 & t4) {
          const t5 = e4.$implicit, n3 = Xo(3);
          Lo("ngClass", bi(9, ec, t5.solved))("ngClass", bi(11, nc, n3.activeTool == t5.id)), Es(2), ii(t5.name), Es(2), ii(t5.effect), Es(3), ii(t5.recipe), Es(2), ii(t5.ingredients), Es(2), ii(t5.remainingAttempts), Es(2), ii(t5.difficulty), Es(1), Lo("ngIf", n3.activeTool == t5.id);
        }
      }
      function sc(t4, e4) {
        if (1 & t4 && (Bo(0, "li", 2)(1, "h1", 3), oi(2), Uo(), Bo(3, "p", 4), oi(4), Uo(), Bo(5, "ol"), Zo(6, rc, 15, 13, "li", 5), Uo()()), 2 & t4) {
          const t5 = e4.$implicit;
          Lo("ngClass", bi(4, ec, t5.solved)), Es(2), ii(t5.name), Es(2), ii(t5.description), Es(2), Lo("ngForOf", t5.tools);
        }
      }
      function oc(t4, e4) {
        if (1 & t4 && (Bo(0, "ul"), Zo(1, sc, 7, 6, "li", 1), Uo()), 2 & t4) {
          const t5 = Xo();
          Es(1), Lo("ngForOf", t5.quest.problems);
        }
      }
      let ic = (() => {
        class t4 {
          constructor(t5) {
            this.toolService = t5;
          }
          set url(t5) {
            this.toolService.url = t5;
          }
          get url() {
            return this.toolService.url;
          }
          set quest(t5) {
            this._quest = "string" == typeof t5 ? JSON.parse(t5) : t5;
          }
          get quest() {
            return this._quest;
          }
          activate(t5) {
            this.answer = "", this.activeTool = t5;
          }
          useTool(t5) {
            var e4 = this;
            return function(t6) {
              return function() {
                var e5 = this, n3 = arguments;
                return new Promise(function(r2, s2) {
                  var o2 = t6.apply(e5, n3);
                  function i2(t7) {
                    Qu(o2, r2, s2, i2, l2, "next", t7);
                  }
                  function l2(t7) {
                    Qu(o2, r2, s2, i2, l2, "throw", t7);
                  }
                  i2(void 0);
                });
              };
            }(function* () {
              try {
                const n3 = yield function(t6, e5) {
                  return new Promise((e6, n4) => {
                    const r2 = new b({ next: (t7) => {
                      e6(t7), r2.unsubscribe();
                    }, error: n4, complete: () => {
                      n4(new Ku());
                    } });
                    t6.subscribe(r2);
                  });
                }(e4.toolService.useTool(t5, e4.answer || ""));
                n3.effective && (t5.name = n3.name);
              } catch (t6) {
                console.error(t6);
              }
            })();
          }
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)(Os(Ju));
        }, t4.\u0275cmp = Bt({ type: t4, selectors: [["htf-root"]], inputs: { url: "url", quest: "quest" }, decls: 1, vars: 1, consts: [[4, "ngIf"], ["class", "problem", 3, "ngClass", 4, "ngFor", "ngForOf"], [1, "problem", 3, "ngClass"], [1, "problem-name"], [1, "description"], ["class", "tool", 3, "ngClass", "click", 4, "ngFor", "ngForOf"], [1, "tool", 3, "ngClass", "click"], [1, "tool-name"], [1, "effect"], [1, "challenge"], [1, "recipe"], [1, "ingredients"], [1, "remainingAttempts"], [1, "difficulty"], ["class", "answer", 3, "ngModel", "ngModelChange", 4, "ngIf"], [3, "click"], [1, "answer", 3, "ngModel", "ngModelChange"]], template: function(t5, e4) {
          1 & t5 && Zo(0, oc, 2, 1, "ul", 0), 2 & t5 && Lo("ngIf", e4.quest);
        }, dependencies: [jl, Fl, Ml, Va, Ka, cu] }), t4;
      })();
      const lc = { now: () => (lc.delegate || Date).now(), delegate: void 0 };
      class ac extends O {
        constructor(t4 = 1 / 0, e4 = 1 / 0, n3 = lc) {
          super(), this._bufferSize = t4, this._windowTime = e4, this._timestampProvider = n3, this._buffer = [], this._infiniteTimeWindow = true, this._infiniteTimeWindow = e4 === 1 / 0, this._bufferSize = Math.max(1, t4), this._windowTime = Math.max(1, e4);
        }
        next(t4) {
          const { isStopped: e4, _buffer: n3, _infiniteTimeWindow: r2, _timestampProvider: s2, _windowTime: o2 } = this;
          e4 || (n3.push(t4), !r2 && n3.push(s2.now() + o2)), this._trimBuffer(), super.next(t4);
        }
        _subscribe(t4) {
          this._throwIfClosed(), this._trimBuffer();
          const e4 = this._innerSubscribe(t4), { _infiniteTimeWindow: n3, _buffer: r2 } = this, s2 = r2.slice();
          for (let e5 = 0; e5 < s2.length && !t4.closed; e5 += n3 ? 1 : 2)
            t4.next(s2[e5]);
          return this._checkFinalizedStatuses(t4), e4;
        }
        _trimBuffer() {
          const { _bufferSize: t4, _timestampProvider: e4, _buffer: n3, _infiniteTimeWindow: r2 } = this, s2 = (r2 ? 1 : 2) * t4;
          if (t4 < 1 / 0 && s2 < n3.length && n3.splice(0, n3.length - s2), !r2) {
            const t5 = e4.now();
            let r3 = 0;
            for (let e5 = 1; e5 < n3.length && n3[e5] <= t5; e5 += 2)
              r3 = e5;
            r3 && n3.splice(0, r3 + 1);
          }
        }
      }
      const uc = { schedule(t4, e4) {
        const n3 = setTimeout(t4, e4);
        return () => clearTimeout(n3);
      }, scheduleBeforeRender(t4) {
        if (typeof window > "u")
          return uc.schedule(t4, 0);
        if (typeof window.requestAnimationFrame > "u")
          return uc.schedule(t4, 16);
        const e4 = window.requestAnimationFrame(t4);
        return () => window.cancelAnimationFrame(e4);
      } };
      let cc;
      function hc(t4, e4, n3) {
        let r2 = n3;
        return function(t5) {
          return !!t5 && t5.nodeType === Node.ELEMENT_NODE;
        }(t4) && e4.some((e5, n4) => !("*" === e5 || !function(t5, e6) {
          if (!cc) {
            const t6 = Element.prototype;
            cc = t6.matches || t6.matchesSelector || t6.mozMatchesSelector || t6.msMatchesSelector || t6.oMatchesSelector || t6.webkitMatchesSelector;
          }
          return t5.nodeType === Node.ELEMENT_NODE && cc.call(t5, e6);
        }(t4, e5) || (r2 = n4, 0))), r2;
      }
      class dc {
        constructor(t4, e4) {
          this.componentFactory = e4.get(ns).resolveComponentFactory(t4);
        }
        create(t4) {
          return new fc(this.componentFactory, t4);
        }
      }
      class fc {
        constructor(t4, e4) {
          this.componentFactory = t4, this.injector = e4, this.eventEmitters = new ac(1), this.events = this.eventEmitters.pipe(Xu((t5) => rt(...t5))), this.componentRef = null, this.viewChangeDetectorRef = null, this.inputChanges = null, this.hasInputChanges = false, this.implementsOnChanges = false, this.scheduledChangeDetectionFn = null, this.scheduledDestroyFn = null, this.initialInputValues = /* @__PURE__ */ new Map(), this.unchangedInputs = new Set(this.componentFactory.inputs.map(({ propName: t5 }) => t5)), this.ngZone = this.injector.get(qi), this.elementZone = typeof Zone > "u" ? null : this.ngZone.run(() => Zone.current);
        }
        connect(t4) {
          this.runInZone(() => {
            if (null !== this.scheduledDestroyFn)
              return this.scheduledDestroyFn(), void (this.scheduledDestroyFn = null);
            null === this.componentRef && this.initializeComponent(t4);
          });
        }
        disconnect() {
          this.runInZone(() => {
            null === this.componentRef || null !== this.scheduledDestroyFn || (this.scheduledDestroyFn = uc.schedule(() => {
              null !== this.componentRef && (this.componentRef.destroy(), this.componentRef = null, this.viewChangeDetectorRef = null);
            }, 10));
          });
        }
        getInputValue(t4) {
          return this.runInZone(() => null === this.componentRef ? this.initialInputValues.get(t4) : this.componentRef.instance[t4]);
        }
        setInputValue(t4, e4) {
          this.runInZone(() => {
            null !== this.componentRef ? function(t5, e5) {
              return t5 === e5 || t5 != t5 && e5 != e5;
            }(e4, this.getInputValue(t4)) && (void 0 !== e4 || !this.unchangedInputs.has(t4)) || (this.recordInputChange(t4, e4), this.unchangedInputs.delete(t4), this.hasInputChanges = true, this.componentRef.instance[t4] = e4, this.scheduleDetectChanges()) : this.initialInputValues.set(t4, e4);
          });
        }
        initializeComponent(t4) {
          const e4 = Is.create({ providers: [], parent: this.injector }), n3 = function(t5, e5) {
            const n4 = t5.childNodes, r2 = e5.map(() => []);
            let s2 = -1;
            e5.some((t6, e6) => "*" === t6 && (s2 = e6, true));
            for (let t6 = 0, o2 = n4.length; t6 < o2; ++t6) {
              const o3 = n4[t6], i2 = hc(o3, e5, s2);
              -1 !== i2 && r2[i2].push(o3);
            }
            return r2;
          }(t4, this.componentFactory.ngContentSelectors);
          this.componentRef = this.componentFactory.create(e4, n3, t4), this.viewChangeDetectorRef = this.componentRef.injector.get(fl), this.implementsOnChanges = function(t5) {
            return "function" == typeof t5;
          }(this.componentRef.instance.ngOnChanges), this.initializeInputs(), this.initializeOutputs(this.componentRef), this.detectChanges(), this.injector.get(cl).attachView(this.componentRef.hostView);
        }
        initializeInputs() {
          this.componentFactory.inputs.forEach(({ propName: t4 }) => {
            this.initialInputValues.has(t4) && this.setInputValue(t4, this.initialInputValues.get(t4));
          }), this.initialInputValues.clear();
        }
        initializeOutputs(t4) {
          const e4 = this.componentFactory.outputs.map(({ propName: e5, templateName: n3 }) => t4.instance[e5].pipe(j((t5) => ({ name: n3, value: t5 }))));
          this.eventEmitters.next(e4);
        }
        callNgOnChanges(t4) {
          if (!this.implementsOnChanges || null === this.inputChanges)
            return;
          const e4 = this.inputChanges;
          this.inputChanges = null, t4.instance.ngOnChanges(e4);
        }
        markViewForCheck(t4) {
          this.hasInputChanges && (this.hasInputChanges = false, t4.markForCheck());
        }
        scheduleDetectChanges() {
          this.scheduledChangeDetectionFn || (this.scheduledChangeDetectionFn = uc.scheduleBeforeRender(() => {
            this.scheduledChangeDetectionFn = null, this.detectChanges();
          }));
        }
        recordInputChange(t4, e4) {
          if (!this.implementsOnChanges)
            return;
          null === this.inputChanges && (this.inputChanges = {});
          const n3 = this.inputChanges[t4];
          if (n3)
            return void (n3.currentValue = e4);
          const r2 = this.unchangedInputs.has(t4), s2 = r2 ? void 0 : this.getInputValue(t4);
          this.inputChanges[t4] = new ae(s2, e4, r2);
        }
        detectChanges() {
          null !== this.componentRef && (this.callNgOnChanges(this.componentRef), this.markViewForCheck(this.viewChangeDetectorRef), this.componentRef.changeDetectorRef.detectChanges());
        }
        runInZone(t4) {
          return this.elementZone && Zone.current !== this.elementZone ? this.ngZone.run(t4) : t4();
        }
      }
      class pc extends HTMLElement {
        constructor() {
          super(...arguments), this.ngElementEventsSubscription = null;
        }
      }
      let gc = (() => {
        class t4 {
          constructor(t5) {
            this.injector = t5;
          }
          ngDoBootstrap() {
            customElements.define("htf-2023", function(t5, e4) {
              const n3 = function(t6, e5) {
                return e5.get(ns).resolveComponentFactory(t6).inputs;
              }(t5, e4.injector), r2 = e4.strategyFactory || new dc(t5, e4.injector), s2 = function(t6) {
                const e5 = {};
                return t6.forEach(({ propName: t7, templateName: n4 }) => {
                  e5[function(t8) {
                    return t8.replace(/[A-Z]/g, (t9) => `-${t9.toLowerCase()}`);
                  }(n4)] = t7;
                }), e5;
              }(n3);
              class o2 extends pc {
                constructor(t6) {
                  super(), this.injector = t6;
                }
                get ngElementStrategy() {
                  if (!this._ngElementStrategy) {
                    const t6 = this._ngElementStrategy = r2.create(this.injector || e4.injector);
                    n3.forEach(({ propName: e5 }) => {
                      if (!this.hasOwnProperty(e5))
                        return;
                      const n4 = this[e5];
                      delete this[e5], t6.setInputValue(e5, n4);
                    });
                  }
                  return this._ngElementStrategy;
                }
                attributeChangedCallback(t6, e5, n4, r3) {
                  this.ngElementStrategy.setInputValue(s2[t6], n4);
                }
                connectedCallback() {
                  let t6 = false;
                  this.ngElementStrategy.events && (this.subscribeToEvents(), t6 = true), this.ngElementStrategy.connect(this), t6 || this.subscribeToEvents();
                }
                disconnectedCallback() {
                  this._ngElementStrategy && this._ngElementStrategy.disconnect(), this.ngElementEventsSubscription && (this.ngElementEventsSubscription.unsubscribe(), this.ngElementEventsSubscription = null);
                }
                subscribeToEvents() {
                  this.ngElementEventsSubscription = this.ngElementStrategy.events.subscribe((t6) => {
                    const e5 = new CustomEvent(t6.name, { detail: t6.value });
                    this.dispatchEvent(e5);
                  });
                }
              }
              return o2.observedAttributes = Object.keys(s2), n3.forEach(({ propName: t6 }) => {
                Object.defineProperty(o2.prototype, t6, { get() {
                  return this.ngElementStrategy.getInputValue(t6);
                }, set(e5) {
                  this.ngElementStrategy.setInputValue(t6, e5);
                }, configurable: true, enumerable: true });
              }), o2;
            }(ic, { injector: this.injector }));
          }
        }
        return t4.\u0275fac = function(e4) {
          return new (e4 || t4)(Wn(Is));
        }, t4.\u0275mod = $t({ type: t4 }), t4.\u0275inj = yt({ imports: [wa, fu, Wu] }), t4;
      })();
      _a().bootstrapModule(gc).catch((t4) => console.error(t4));
    } }, (t3) => {
      t3(t3.s = 501);
    }]);
  }, 972: (t2, e2, n2) => {
    "use strict";
    (self.webpackChunkhtf = self.webpackChunkhtf || []).push([[429], { 692: (t3, e3, n3) => {
      n3(583);
    }, 583: () => {
      !function(t4) {
        const e4 = t4.performance;
        function n3(t5) {
          e4 && e4.mark && e4.mark(t5);
        }
        function r2(t5, n4) {
          e4 && e4.measure && e4.measure(t5, n4);
        }
        n3("Zone");
        const s2 = t4.__Zone_symbol_prefix || "__zone_symbol__";
        function o2(t5) {
          return s2 + t5;
        }
        const i2 = true === t4[o2("forceDuplicateZoneCheck")];
        if (t4.Zone) {
          if (i2 || "function" != typeof t4.Zone.__symbol__)
            throw new Error("Zone already loaded.");
          return t4.Zone;
        }
        let l2 = (() => {
          class e5 {
            constructor(t5, e6) {
              this._parent = t5, this._name = e6 ? e6.name || "unnamed" : "<root>", this._properties = e6 && e6.properties || {}, this._zoneDelegate = new u2(this, this._parent && this._parent._zoneDelegate, e6);
            }
            static assertZonePatched() {
              if (t4.Promise !== O2.ZoneAwarePromise)
                throw new Error("Zone.js has detected that ZoneAwarePromise `(window|global).Promise` has been overwritten.\nMost likely cause is that a Promise polyfill has been loaded after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. If you must load one, do so before loading zone.js.)");
            }
            static get root() {
              let t5 = e5.current;
              for (; t5.parent; )
                t5 = t5.parent;
              return t5;
            }
            static get current() {
              return V2.zone;
            }
            static get currentTask() {
              return P2;
            }
            static __load_patch(s3, o3, l3 = false) {
              if (O2.hasOwnProperty(s3)) {
                if (!l3 && i2)
                  throw Error("Already loaded patch: " + s3);
              } else if (!t4["__Zone_disable_" + s3]) {
                const i3 = "Zone:" + s3;
                n3(i3), O2[s3] = o3(t4, e5, D2), r2(i3, i3);
              }
            }
            get parent() {
              return this._parent;
            }
            get name() {
              return this._name;
            }
            get(t5) {
              const e6 = this.getZoneWith(t5);
              if (e6)
                return e6._properties[t5];
            }
            getZoneWith(t5) {
              let e6 = this;
              for (; e6; ) {
                if (e6._properties.hasOwnProperty(t5))
                  return e6;
                e6 = e6._parent;
              }
              return null;
            }
            fork(t5) {
              if (!t5)
                throw new Error("ZoneSpec required!");
              return this._zoneDelegate.fork(this, t5);
            }
            wrap(t5, e6) {
              if ("function" != typeof t5)
                throw new Error("Expecting function got: " + t5);
              const n4 = this._zoneDelegate.intercept(this, t5, e6), r3 = this;
              return function() {
                return r3.runGuarded(n4, this, arguments, e6);
              };
            }
            run(t5, e6, n4, r3) {
              V2 = { parent: V2, zone: this };
              try {
                return this._zoneDelegate.invoke(this, t5, e6, n4, r3);
              } finally {
                V2 = V2.parent;
              }
            }
            runGuarded(t5, e6 = null, n4, r3) {
              V2 = { parent: V2, zone: this };
              try {
                try {
                  return this._zoneDelegate.invoke(this, t5, e6, n4, r3);
                } catch (t6) {
                  if (this._zoneDelegate.handleError(this, t6))
                    throw t6;
                }
              } finally {
                V2 = V2.parent;
              }
            }
            runTask(t5, e6, n4) {
              if (t5.zone != this)
                throw new Error("A task can only be run in the zone of creation! (Creation: " + (t5.zone || w2).name + "; Execution: " + this.name + ")");
              if (t5.state === b2 && (t5.type === I2 || t5.type === A2))
                return;
              const r3 = t5.state != T2;
              r3 && t5._transitionTo(T2, C2), t5.runCount++;
              const s3 = P2;
              P2 = t5, V2 = { parent: V2, zone: this };
              try {
                t5.type == A2 && t5.data && !t5.data.isPeriodic && (t5.cancelFn = void 0);
                try {
                  return this._zoneDelegate.invokeTask(this, t5, e6, n4);
                } catch (t6) {
                  if (this._zoneDelegate.handleError(this, t6))
                    throw t6;
                }
              } finally {
                t5.state !== b2 && t5.state !== x2 && (t5.type == I2 || t5.data && t5.data.isPeriodic ? r3 && t5._transitionTo(C2, T2) : (t5.runCount = 0, this._updateTaskCount(t5, -1), r3 && t5._transitionTo(b2, T2, b2))), V2 = V2.parent, P2 = s3;
              }
            }
            scheduleTask(t5) {
              if (t5.zone && t5.zone !== this) {
                let e7 = this;
                for (; e7; ) {
                  if (e7 === t5.zone)
                    throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${t5.zone.name}`);
                  e7 = e7.parent;
                }
              }
              t5._transitionTo(k2, b2);
              const e6 = [];
              t5._zoneDelegates = e6, t5._zone = this;
              try {
                t5 = this._zoneDelegate.scheduleTask(this, t5);
              } catch (e7) {
                throw t5._transitionTo(x2, k2, b2), this._zoneDelegate.handleError(this, e7), e7;
              }
              return t5._zoneDelegates === e6 && this._updateTaskCount(t5, 1), t5.state == k2 && t5._transitionTo(C2, k2), t5;
            }
            scheduleMicroTask(t5, e6, n4, r3) {
              return this.scheduleTask(new c2(S2, t5, e6, n4, r3, void 0));
            }
            scheduleMacroTask(t5, e6, n4, r3, s3) {
              return this.scheduleTask(new c2(A2, t5, e6, n4, r3, s3));
            }
            scheduleEventTask(t5, e6, n4, r3, s3) {
              return this.scheduleTask(new c2(I2, t5, e6, n4, r3, s3));
            }
            cancelTask(t5) {
              if (t5.zone != this)
                throw new Error("A task can only be cancelled in the zone of creation! (Creation: " + (t5.zone || w2).name + "; Execution: " + this.name + ")");
              t5._transitionTo(E2, C2, T2);
              try {
                this._zoneDelegate.cancelTask(this, t5);
              } catch (e6) {
                throw t5._transitionTo(x2, E2), this._zoneDelegate.handleError(this, e6), e6;
              }
              return this._updateTaskCount(t5, -1), t5._transitionTo(b2, E2), t5.runCount = 0, t5;
            }
            _updateTaskCount(t5, e6) {
              const n4 = t5._zoneDelegates;
              -1 == e6 && (t5._zoneDelegates = null);
              for (let r3 = 0; r3 < n4.length; r3++)
                n4[r3]._updateTaskCount(t5.type, e6);
            }
          }
          return e5.__symbol__ = o2, e5;
        })();
        const a2 = { name: "", onHasTask: (t5, e5, n4, r3) => t5.hasTask(n4, r3), onScheduleTask: (t5, e5, n4, r3) => t5.scheduleTask(n4, r3), onInvokeTask: (t5, e5, n4, r3, s3, o3) => t5.invokeTask(n4, r3, s3, o3), onCancelTask: (t5, e5, n4, r3) => t5.cancelTask(n4, r3) };
        class u2 {
          constructor(t5, e5, n4) {
            this._taskCounts = { microTask: 0, macroTask: 0, eventTask: 0 }, this.zone = t5, this._parentDelegate = e5, this._forkZS = n4 && (n4 && n4.onFork ? n4 : e5._forkZS), this._forkDlgt = n4 && (n4.onFork ? e5 : e5._forkDlgt), this._forkCurrZone = n4 && (n4.onFork ? this.zone : e5._forkCurrZone), this._interceptZS = n4 && (n4.onIntercept ? n4 : e5._interceptZS), this._interceptDlgt = n4 && (n4.onIntercept ? e5 : e5._interceptDlgt), this._interceptCurrZone = n4 && (n4.onIntercept ? this.zone : e5._interceptCurrZone), this._invokeZS = n4 && (n4.onInvoke ? n4 : e5._invokeZS), this._invokeDlgt = n4 && (n4.onInvoke ? e5 : e5._invokeDlgt), this._invokeCurrZone = n4 && (n4.onInvoke ? this.zone : e5._invokeCurrZone), this._handleErrorZS = n4 && (n4.onHandleError ? n4 : e5._handleErrorZS), this._handleErrorDlgt = n4 && (n4.onHandleError ? e5 : e5._handleErrorDlgt), this._handleErrorCurrZone = n4 && (n4.onHandleError ? this.zone : e5._handleErrorCurrZone), this._scheduleTaskZS = n4 && (n4.onScheduleTask ? n4 : e5._scheduleTaskZS), this._scheduleTaskDlgt = n4 && (n4.onScheduleTask ? e5 : e5._scheduleTaskDlgt), this._scheduleTaskCurrZone = n4 && (n4.onScheduleTask ? this.zone : e5._scheduleTaskCurrZone), this._invokeTaskZS = n4 && (n4.onInvokeTask ? n4 : e5._invokeTaskZS), this._invokeTaskDlgt = n4 && (n4.onInvokeTask ? e5 : e5._invokeTaskDlgt), this._invokeTaskCurrZone = n4 && (n4.onInvokeTask ? this.zone : e5._invokeTaskCurrZone), this._cancelTaskZS = n4 && (n4.onCancelTask ? n4 : e5._cancelTaskZS), this._cancelTaskDlgt = n4 && (n4.onCancelTask ? e5 : e5._cancelTaskDlgt), this._cancelTaskCurrZone = n4 && (n4.onCancelTask ? this.zone : e5._cancelTaskCurrZone), this._hasTaskZS = null, this._hasTaskDlgt = null, this._hasTaskDlgtOwner = null, this._hasTaskCurrZone = null;
            const r3 = n4 && n4.onHasTask;
            (r3 || e5 && e5._hasTaskZS) && (this._hasTaskZS = r3 ? n4 : a2, this._hasTaskDlgt = e5, this._hasTaskDlgtOwner = this, this._hasTaskCurrZone = t5, n4.onScheduleTask || (this._scheduleTaskZS = a2, this._scheduleTaskDlgt = e5, this._scheduleTaskCurrZone = this.zone), n4.onInvokeTask || (this._invokeTaskZS = a2, this._invokeTaskDlgt = e5, this._invokeTaskCurrZone = this.zone), n4.onCancelTask || (this._cancelTaskZS = a2, this._cancelTaskDlgt = e5, this._cancelTaskCurrZone = this.zone));
          }
          fork(t5, e5) {
            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, t5, e5) : new l2(t5, e5);
          }
          intercept(t5, e5, n4) {
            return this._interceptZS ? this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, t5, e5, n4) : e5;
          }
          invoke(t5, e5, n4, r3, s3) {
            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, t5, e5, n4, r3, s3) : e5.apply(n4, r3);
          }
          handleError(t5, e5) {
            return !this._handleErrorZS || this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, t5, e5);
          }
          scheduleTask(t5, e5) {
            let n4 = e5;
            if (this._scheduleTaskZS)
              this._hasTaskZS && n4._zoneDelegates.push(this._hasTaskDlgtOwner), n4 = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, t5, e5), n4 || (n4 = e5);
            else if (e5.scheduleFn)
              e5.scheduleFn(e5);
            else {
              if (e5.type != S2)
                throw new Error("Task is missing scheduleFn.");
              m2(e5);
            }
            return n4;
          }
          invokeTask(t5, e5, n4, r3) {
            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, t5, e5, n4, r3) : e5.callback.apply(n4, r3);
          }
          cancelTask(t5, e5) {
            let n4;
            if (this._cancelTaskZS)
              n4 = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, t5, e5);
            else {
              if (!e5.cancelFn)
                throw Error("Task is not cancelable");
              n4 = e5.cancelFn(e5);
            }
            return n4;
          }
          hasTask(t5, e5) {
            try {
              this._hasTaskZS && this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, t5, e5);
            } catch (e6) {
              this.handleError(t5, e6);
            }
          }
          _updateTaskCount(t5, e5) {
            const n4 = this._taskCounts, r3 = n4[t5], s3 = n4[t5] = r3 + e5;
            if (s3 < 0)
              throw new Error("More tasks executed then were scheduled.");
            0 != r3 && 0 != s3 || this.hasTask(this.zone, { microTask: n4.microTask > 0, macroTask: n4.macroTask > 0, eventTask: n4.eventTask > 0, change: t5 });
          }
        }
        class c2 {
          constructor(e5, n4, r3, s3, o3, i3) {
            if (this._zone = null, this.runCount = 0, this._zoneDelegates = null, this._state = "notScheduled", this.type = e5, this.source = n4, this.data = s3, this.scheduleFn = o3, this.cancelFn = i3, !r3)
              throw new Error("callback is not defined");
            this.callback = r3;
            const l3 = this;
            this.invoke = e5 === I2 && s3 && s3.useG ? c2.invokeTask : function() {
              return c2.invokeTask.call(t4, l3, this, arguments);
            };
          }
          static invokeTask(t5, e5, n4) {
            t5 || (t5 = this), R2++;
            try {
              return t5.runCount++, t5.zone.runTask(t5, e5, n4);
            } finally {
              1 == R2 && v2(), R2--;
            }
          }
          get zone() {
            return this._zone;
          }
          get state() {
            return this._state;
          }
          cancelScheduleRequest() {
            this._transitionTo(b2, k2);
          }
          _transitionTo(t5, e5, n4) {
            if (this._state !== e5 && this._state !== n4)
              throw new Error(`${this.type} '${this.source}': can not transition to '${t5}', expecting state '${e5}'${n4 ? " or '" + n4 + "'" : ""}, was '${this._state}'.`);
            this._state = t5, t5 == b2 && (this._zoneDelegates = null);
          }
          toString() {
            return this.data && typeof this.data.handleId < "u" ? this.data.handleId.toString() : Object.prototype.toString.call(this);
          }
          toJSON() {
            return { type: this.type, state: this.state, source: this.source, zone: this.zone.name, runCount: this.runCount };
          }
        }
        const h2 = o2("setTimeout"), d2 = o2("Promise"), f2 = o2("then");
        let p2, g2 = [], _2 = false;
        function y2(e5) {
          if (p2 || t4[d2] && (p2 = t4[d2].resolve(0)), p2) {
            let t5 = p2[f2];
            t5 || (t5 = p2.then), t5.call(p2, e5);
          } else
            t4[h2](e5, 0);
        }
        function m2(t5) {
          0 === R2 && 0 === g2.length && y2(v2), t5 && g2.push(t5);
        }
        function v2() {
          if (!_2) {
            for (_2 = true; g2.length; ) {
              const t5 = g2;
              g2 = [];
              for (let e5 = 0; e5 < t5.length; e5++) {
                const n4 = t5[e5];
                try {
                  n4.zone.runTask(n4, null, null);
                } catch (t6) {
                  D2.onUnhandledError(t6);
                }
              }
            }
            D2.microtaskDrainDone(), _2 = false;
          }
        }
        const w2 = { name: "NO ZONE" }, b2 = "notScheduled", k2 = "scheduling", C2 = "scheduled", T2 = "running", E2 = "canceling", x2 = "unknown", S2 = "microTask", A2 = "macroTask", I2 = "eventTask", O2 = {}, D2 = { symbol: o2, currentZoneFrame: () => V2, onUnhandledError: j2, microtaskDrainDone: j2, scheduleMicroTask: m2, showUncaughtError: () => !l2[o2("ignoreConsoleErrorUncaughtError")], patchEventTarget: () => [], patchOnProperties: j2, patchMethod: () => j2, bindArguments: () => [], patchThen: () => j2, patchMacroTask: () => j2, patchEventPrototype: () => j2, isIEOrEdge: () => false, getGlobalObjects: () => {
        }, ObjectDefineProperty: () => j2, ObjectGetOwnPropertyDescriptor: () => {
        }, ObjectCreate: () => {
        }, ArraySlice: () => [], patchClass: () => j2, wrapWithCurrentZone: () => j2, filterProperties: () => [], attachOriginToPatched: () => j2, _redefineProperty: () => j2, patchCallbacks: () => j2, nativeScheduleMicroTask: y2 };
        let V2 = { parent: null, zone: new l2(null, null) }, P2 = null, R2 = 0;
        function j2() {
        }
        r2("Zone", "Zone"), t4.Zone = l2;
      }(typeof window < "u" && window || typeof self < "u" && self || n2.g);
      const t3 = Object.getOwnPropertyDescriptor, e3 = Object.defineProperty, r = Object.getPrototypeOf, s = Object.create, o = Array.prototype.slice, i = "addEventListener", l = "removeEventListener", a = Zone.__symbol__(i), u = Zone.__symbol__(l), c = "true", h = "false", d = Zone.__symbol__("");
      function f(t4, e4) {
        return Zone.current.wrap(t4, e4);
      }
      function p(t4, e4, n3, r2, s2) {
        return Zone.current.scheduleMacroTask(t4, e4, n3, r2, s2);
      }
      const g = Zone.__symbol__, _ = typeof window < "u", y = _ ? window : void 0, m = _ && y || "object" == typeof self && self || n2.g;
      function v(t4, e4) {
        for (let n3 = t4.length - 1; n3 >= 0; n3--)
          "function" == typeof t4[n3] && (t4[n3] = f(t4[n3], e4 + "_" + n3));
        return t4;
      }
      function w(t4) {
        return !t4 || false !== t4.writable && !("function" == typeof t4.get && typeof t4.set > "u");
      }
      const b = typeof WorkerGlobalScope < "u" && self instanceof WorkerGlobalScope, k = !("nw" in m) && typeof m.process < "u" && "[object process]" === {}.toString.call(m.process), C = !k && !b && !(!_ || !y.HTMLElement), T = typeof m.process < "u" && "[object process]" === {}.toString.call(m.process) && !b && !(!_ || !y.HTMLElement), E = {}, x = function(t4) {
        if (!(t4 = t4 || m.event))
          return;
        let e4 = E[t4.type];
        e4 || (e4 = E[t4.type] = g("ON_PROPERTY" + t4.type));
        const n3 = this || t4.target || m, r2 = n3[e4];
        let s2;
        if (C && n3 === y && "error" === t4.type) {
          const e5 = t4;
          s2 = r2 && r2.call(this, e5.message, e5.filename, e5.lineno, e5.colno, e5.error), true === s2 && t4.preventDefault();
        } else
          s2 = r2 && r2.apply(this, arguments), null != s2 && !s2 && t4.preventDefault();
        return s2;
      };
      function S(n3, r2, s2) {
        let o2 = t3(n3, r2);
        if (!o2 && s2 && t3(s2, r2) && (o2 = { enumerable: true, configurable: true }), !o2 || !o2.configurable)
          return;
        const i2 = g("on" + r2 + "patched");
        if (n3.hasOwnProperty(i2) && n3[i2])
          return;
        delete o2.writable, delete o2.value;
        const l2 = o2.get, a2 = o2.set, u2 = r2.slice(2);
        let c2 = E[u2];
        c2 || (c2 = E[u2] = g("ON_PROPERTY" + u2)), o2.set = function(t4) {
          let e4 = this;
          !e4 && n3 === m && (e4 = m), e4 && ("function" == typeof e4[c2] && e4.removeEventListener(u2, x), a2 && a2.call(e4, null), e4[c2] = t4, "function" == typeof t4 && e4.addEventListener(u2, x, false));
        }, o2.get = function() {
          let t4 = this;
          if (!t4 && n3 === m && (t4 = m), !t4)
            return null;
          const e4 = t4[c2];
          if (e4)
            return e4;
          if (l2) {
            let e5 = l2.call(this);
            if (e5)
              return o2.set.call(this, e5), "function" == typeof t4.removeAttribute && t4.removeAttribute(r2), e5;
          }
          return null;
        }, e3(n3, r2, o2), n3[i2] = true;
      }
      function A(t4, e4, n3) {
        if (e4)
          for (let r2 = 0; r2 < e4.length; r2++)
            S(t4, "on" + e4[r2], n3);
        else {
          const e5 = [];
          for (const n4 in t4)
            "on" == n4.slice(0, 2) && e5.push(n4);
          for (let r2 = 0; r2 < e5.length; r2++)
            S(t4, e5[r2], n3);
        }
      }
      const I = g("originalInstance");
      function O(t4) {
        const n3 = m[t4];
        if (!n3)
          return;
        m[g(t4)] = n3, m[t4] = function() {
          const e4 = v(arguments, t4);
          switch (e4.length) {
            case 0:
              this[I] = new n3();
              break;
            case 1:
              this[I] = new n3(e4[0]);
              break;
            case 2:
              this[I] = new n3(e4[0], e4[1]);
              break;
            case 3:
              this[I] = new n3(e4[0], e4[1], e4[2]);
              break;
            case 4:
              this[I] = new n3(e4[0], e4[1], e4[2], e4[3]);
              break;
            default:
              throw new Error("Arg list too long.");
          }
        }, P(m[t4], n3);
        const r2 = new n3(function() {
        });
        let s2;
        for (s2 in r2)
          "XMLHttpRequest" === t4 && "responseBlob" === s2 || function(n4) {
            "function" == typeof r2[n4] ? m[t4].prototype[n4] = function() {
              return this[I][n4].apply(this[I], arguments);
            } : e3(m[t4].prototype, n4, { set: function(e4) {
              "function" == typeof e4 ? (this[I][n4] = f(e4, t4 + "." + n4), P(this[I][n4], e4)) : this[I][n4] = e4;
            }, get: function() {
              return this[I][n4];
            } });
          }(s2);
        for (s2 in n3)
          "prototype" !== s2 && n3.hasOwnProperty(s2) && (m[t4][s2] = n3[s2]);
      }
      function D(e4, n3, s2) {
        let o2 = e4;
        for (; o2 && !o2.hasOwnProperty(n3); )
          o2 = r(o2);
        !o2 && e4[n3] && (o2 = e4);
        const i2 = g(n3);
        let l2 = null;
        if (o2 && (!(l2 = o2[i2]) || !o2.hasOwnProperty(i2)) && (l2 = o2[i2] = o2[n3], w(o2 && t3(o2, n3)))) {
          const t4 = s2(l2, i2, n3);
          o2[n3] = function() {
            return t4(this, arguments);
          }, P(o2[n3], l2);
        }
        return l2;
      }
      function V(t4, e4, n3) {
        let r2 = null;
        function s2(t5) {
          const e5 = t5.data;
          return e5.args[e5.cbIdx] = function() {
            t5.invoke.apply(this, arguments);
          }, r2.apply(e5.target, e5.args), t5;
        }
        r2 = D(t4, e4, (t5) => function(e5, r3) {
          const o2 = n3(e5, r3);
          return o2.cbIdx >= 0 && "function" == typeof r3[o2.cbIdx] ? p(o2.name, r3[o2.cbIdx], o2, s2) : t5.apply(e5, r3);
        });
      }
      function P(t4, e4) {
        t4[g("OriginalDelegate")] = e4;
      }
      let R = false, j = false;
      function N() {
        if (R)
          return j;
        R = true;
        try {
          const t4 = y.navigator.userAgent;
          (-1 !== t4.indexOf("MSIE ") || -1 !== t4.indexOf("Trident/") || -1 !== t4.indexOf("Edge/")) && (j = true);
        } catch {
        }
        return j;
      }
      Zone.__load_patch("ZoneAwarePromise", (t4, e4, n3) => {
        const r2 = Object.getOwnPropertyDescriptor, s2 = Object.defineProperty, o2 = n3.symbol, i2 = [], l2 = true === t4[o2("DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION")], a2 = o2("Promise"), u2 = o2("then");
        n3.onUnhandledError = (t5) => {
          if (n3.showUncaughtError()) {
            const e5 = t5 && t5.rejection;
            e5 ? console.error("Unhandled Promise rejection:", e5 instanceof Error ? e5.message : e5, "; Zone:", t5.zone.name, "; Task:", t5.task && t5.task.source, "; Value:", e5, e5 instanceof Error ? e5.stack : void 0) : console.error(t5);
          }
        }, n3.microtaskDrainDone = () => {
          for (; i2.length; ) {
            const t5 = i2.shift();
            try {
              t5.zone.runGuarded(() => {
                throw t5.throwOriginal ? t5.rejection : t5;
              });
            } catch (t6) {
              h2(t6);
            }
          }
        };
        const c2 = o2("unhandledPromiseRejectionHandler");
        function h2(t5) {
          n3.onUnhandledError(t5);
          try {
            const n4 = e4[c2];
            "function" == typeof n4 && n4.call(this, t5);
          } catch {
          }
        }
        function d2(t5) {
          return t5 && t5.then;
        }
        function f2(t5) {
          return t5;
        }
        function p2(t5) {
          return P2.reject(t5);
        }
        const g2 = o2("state"), _2 = o2("value"), y2 = o2("finally"), m2 = o2("parentPromiseValue"), v2 = o2("parentPromiseState"), w2 = null, b2 = true, k2 = false;
        function C2(t5, e5) {
          return (n4) => {
            try {
              x2(t5, e5, n4);
            } catch (e6) {
              x2(t5, false, e6);
            }
          };
        }
        const T2 = function() {
          let t5 = false;
          return function(e5) {
            return function() {
              t5 || (t5 = true, e5.apply(null, arguments));
            };
          };
        }, E2 = o2("currentTaskTrace");
        function x2(t5, r3, o3) {
          const a3 = T2();
          if (t5 === o3)
            throw new TypeError("Promise resolved with itself");
          if (t5[g2] === w2) {
            let u3 = null;
            try {
              ("object" == typeof o3 || "function" == typeof o3) && (u3 = o3 && o3.then);
            } catch (e5) {
              return a3(() => {
                x2(t5, false, e5);
              })(), t5;
            }
            if (r3 !== k2 && o3 instanceof P2 && o3.hasOwnProperty(g2) && o3.hasOwnProperty(_2) && o3[g2] !== w2)
              A2(o3), x2(t5, o3[g2], o3[_2]);
            else if (r3 !== k2 && "function" == typeof u3)
              try {
                u3.call(o3, a3(C2(t5, r3)), a3(C2(t5, false)));
              } catch (e5) {
                a3(() => {
                  x2(t5, false, e5);
                })();
              }
            else {
              t5[g2] = r3;
              const a4 = t5[_2];
              if (t5[_2] = o3, t5[y2] === y2 && r3 === b2 && (t5[g2] = t5[v2], t5[_2] = t5[m2]), r3 === k2 && o3 instanceof Error) {
                const t6 = e4.currentTask && e4.currentTask.data && e4.currentTask.data.__creationTrace__;
                t6 && s2(o3, E2, { configurable: true, enumerable: false, writable: true, value: t6 });
              }
              for (let e5 = 0; e5 < a4.length; )
                I2(t5, a4[e5++], a4[e5++], a4[e5++], a4[e5++]);
              if (0 == a4.length && r3 == k2) {
                t5[g2] = 0;
                let r4 = o3;
                try {
                  throw new Error("Uncaught (in promise): " + function(t6) {
                    return t6 && t6.toString === Object.prototype.toString ? (t6.constructor && t6.constructor.name || "") + ": " + JSON.stringify(t6) : t6 ? t6.toString() : Object.prototype.toString.call(t6);
                  }(o3) + (o3 && o3.stack ? "\n" + o3.stack : ""));
                } catch (t6) {
                  r4 = t6;
                }
                l2 && (r4.throwOriginal = true), r4.rejection = o3, r4.promise = t5, r4.zone = e4.current, r4.task = e4.currentTask, i2.push(r4), n3.scheduleMicroTask();
              }
            }
          }
          return t5;
        }
        const S2 = o2("rejectionHandledHandler");
        function A2(t5) {
          if (0 === t5[g2]) {
            try {
              const n4 = e4[S2];
              n4 && "function" == typeof n4 && n4.call(this, { rejection: t5[_2], promise: t5 });
            } catch {
            }
            t5[g2] = k2;
            for (let e5 = 0; e5 < i2.length; e5++)
              t5 === i2[e5].promise && i2.splice(e5, 1);
          }
        }
        function I2(t5, e5, n4, r3, s3) {
          A2(t5);
          const o3 = t5[g2], i3 = o3 ? "function" == typeof r3 ? r3 : f2 : "function" == typeof s3 ? s3 : p2;
          e5.scheduleMicroTask("Promise.then", () => {
            try {
              const r4 = t5[_2], s4 = !!n4 && y2 === n4[y2];
              s4 && (n4[m2] = r4, n4[v2] = o3);
              const l3 = e5.run(i3, void 0, s4 && i3 !== p2 && i3 !== f2 ? [] : [r4]);
              x2(n4, true, l3);
            } catch (t6) {
              x2(n4, false, t6);
            }
          }, n4);
        }
        const O2 = function() {
        }, V2 = t4.AggregateError;
        class P2 {
          static toString() {
            return "function ZoneAwarePromise() { [native code] }";
          }
          static resolve(t5) {
            return x2(new this(null), b2, t5);
          }
          static reject(t5) {
            return x2(new this(null), k2, t5);
          }
          static any(t5) {
            if (!t5 || "function" != typeof t5[Symbol.iterator])
              return Promise.reject(new V2([], "All promises were rejected"));
            const e5 = [];
            let n4 = 0;
            try {
              for (let r4 of t5)
                n4++, e5.push(P2.resolve(r4));
            } catch {
              return Promise.reject(new V2([], "All promises were rejected"));
            }
            if (0 === n4)
              return Promise.reject(new V2([], "All promises were rejected"));
            let r3 = false;
            const s3 = [];
            return new P2((t6, o3) => {
              for (let i3 = 0; i3 < e5.length; i3++)
                e5[i3].then((e6) => {
                  r3 || (r3 = true, t6(e6));
                }, (t7) => {
                  s3.push(t7), n4--, 0 === n4 && (r3 = true, o3(new V2(s3, "All promises were rejected")));
                });
            });
          }
          static race(t5) {
            let e5, n4, r3 = new this((t6, r4) => {
              e5 = t6, n4 = r4;
            });
            function s3(t6) {
              e5(t6);
            }
            function o3(t6) {
              n4(t6);
            }
            for (let e6 of t5)
              d2(e6) || (e6 = this.resolve(e6)), e6.then(s3, o3);
            return r3;
          }
          static all(t5) {
            return P2.allWithCallback(t5);
          }
          static allSettled(t5) {
            return (this && this.prototype instanceof P2 ? this : P2).allWithCallback(t5, { thenCallback: (t6) => ({ status: "fulfilled", value: t6 }), errorCallback: (t6) => ({ status: "rejected", reason: t6 }) });
          }
          static allWithCallback(t5, e5) {
            let n4, r3, s3 = new this((t6, e6) => {
              n4 = t6, r3 = e6;
            }), o3 = 2, i3 = 0;
            const l3 = [];
            for (let s4 of t5) {
              d2(s4) || (s4 = this.resolve(s4));
              const t6 = i3;
              try {
                s4.then((r4) => {
                  l3[t6] = e5 ? e5.thenCallback(r4) : r4, o3--, 0 === o3 && n4(l3);
                }, (s5) => {
                  e5 ? (l3[t6] = e5.errorCallback(s5), o3--, 0 === o3 && n4(l3)) : r3(s5);
                });
              } catch (t7) {
                r3(t7);
              }
              o3++, i3++;
            }
            return o3 -= 2, 0 === o3 && n4(l3), s3;
          }
          constructor(t5) {
            const e5 = this;
            if (!(e5 instanceof P2))
              throw new Error("Must be an instanceof Promise.");
            e5[g2] = w2, e5[_2] = [];
            try {
              const n4 = T2();
              t5 && t5(n4(C2(e5, b2)), n4(C2(e5, k2)));
            } catch (t6) {
              x2(e5, false, t6);
            }
          }
          get [Symbol.toStringTag]() {
            return "Promise";
          }
          get [Symbol.species]() {
            return P2;
          }
          then(t5, n4) {
            var r3;
            let s3 = null === (r3 = this.constructor) || void 0 === r3 ? void 0 : r3[Symbol.species];
            (!s3 || "function" != typeof s3) && (s3 = this.constructor || P2);
            const o3 = new s3(O2), i3 = e4.current;
            return this[g2] == w2 ? this[_2].push(i3, o3, t5, n4) : I2(this, i3, o3, t5, n4), o3;
          }
          catch(t5) {
            return this.then(null, t5);
          }
          finally(t5) {
            var n4;
            let r3 = null === (n4 = this.constructor) || void 0 === n4 ? void 0 : n4[Symbol.species];
            (!r3 || "function" != typeof r3) && (r3 = P2);
            const s3 = new r3(O2);
            s3[y2] = y2;
            const o3 = e4.current;
            return this[g2] == w2 ? this[_2].push(o3, s3, t5, t5) : I2(this, o3, s3, t5, t5), s3;
          }
        }
        P2.resolve = P2.resolve, P2.reject = P2.reject, P2.race = P2.race, P2.all = P2.all;
        const R2 = t4[a2] = t4.Promise;
        t4.Promise = P2;
        const j2 = o2("thenPatched");
        function N2(t5) {
          const e5 = t5.prototype, n4 = r2(e5, "then");
          if (n4 && (false === n4.writable || !n4.configurable))
            return;
          const s3 = e5.then;
          e5[u2] = s3, t5.prototype.then = function(t6, e6) {
            return new P2((t7, e7) => {
              s3.call(this, t7, e7);
            }).then(t6, e6);
          }, t5[j2] = true;
        }
        return n3.patchThen = N2, R2 && (N2(R2), D(t4, "fetch", (t5) => function(t6) {
          return function(e5, n4) {
            let r3 = t6.apply(e5, n4);
            if (r3 instanceof P2)
              return r3;
            let s3 = r3.constructor;
            return s3[j2] || N2(s3), r3;
          };
        }(t5))), Promise[e4.__symbol__("uncaughtPromiseErrors")] = i2, P2;
      }), Zone.__load_patch("toString", (t4) => {
        const e4 = Function.prototype.toString, n3 = g("OriginalDelegate"), r2 = g("Promise"), s2 = g("Error"), o2 = function() {
          if ("function" == typeof this) {
            const o3 = this[n3];
            if (o3)
              return "function" == typeof o3 ? e4.call(o3) : Object.prototype.toString.call(o3);
            if (this === Promise) {
              const n4 = t4[r2];
              if (n4)
                return e4.call(n4);
            }
            if (this === Error) {
              const n4 = t4[s2];
              if (n4)
                return e4.call(n4);
            }
          }
          return e4.call(this);
        };
        o2[n3] = e4, Function.prototype.toString = o2;
        const i2 = Object.prototype.toString;
        Object.prototype.toString = function() {
          return "function" == typeof Promise && this instanceof Promise ? "[object Promise]" : i2.call(this);
        };
      });
      let F = false;
      if (typeof window < "u")
        try {
          const t4 = Object.defineProperty({}, "passive", { get: function() {
            F = true;
          } });
          window.addEventListener("test", t4, t4), window.removeEventListener("test", t4, t4);
        } catch {
          F = false;
        }
      const H = { useG: true }, M = {}, Z = {}, L = new RegExp("^" + d + "(\\w+)(true|false)$"), z = g("propagationStopped");
      function B(t4, e4) {
        const n3 = (e4 ? e4(t4) : t4) + h, r2 = (e4 ? e4(t4) : t4) + c, s2 = d + n3, o2 = d + r2;
        M[t4] = {}, M[t4][h] = s2, M[t4][c] = o2;
      }
      function U(t4, e4, n3, s2) {
        const o2 = s2 && s2.add || i, a2 = s2 && s2.rm || l, u2 = s2 && s2.listeners || "eventListeners", f2 = s2 && s2.rmAll || "removeAllListeners", p2 = g(o2), _2 = "." + o2 + ":", y2 = function(t5, e5, n4) {
          if (t5.isRemoved)
            return;
          const r2 = t5.callback;
          let s3;
          "object" == typeof r2 && r2.handleEvent && (t5.callback = (t6) => r2.handleEvent(t6), t5.originalDelegate = r2);
          try {
            t5.invoke(t5, e5, [n4]);
          } catch (t6) {
            s3 = t6;
          }
          const o3 = t5.options;
          return o3 && "object" == typeof o3 && o3.once && e5[a2].call(e5, n4.type, t5.originalDelegate ? t5.originalDelegate : t5.callback, o3), s3;
        };
        function m2(n4, r2, s3) {
          if (!(r2 = r2 || t4.event))
            return;
          const o3 = n4 || r2.target || t4, i2 = o3[M[r2.type][s3 ? c : h]];
          if (i2) {
            const t5 = [];
            if (1 === i2.length) {
              const e5 = y2(i2[0], o3, r2);
              e5 && t5.push(e5);
            } else {
              const e5 = i2.slice();
              for (let n5 = 0; n5 < e5.length && (!r2 || true !== r2[z]); n5++) {
                const s4 = y2(e5[n5], o3, r2);
                s4 && t5.push(s4);
              }
            }
            if (1 === t5.length)
              throw t5[0];
            for (let n5 = 0; n5 < t5.length; n5++) {
              const r3 = t5[n5];
              e4.nativeScheduleMicroTask(() => {
                throw r3;
              });
            }
          }
        }
        const v2 = function(t5) {
          return m2(this, t5, false);
        }, w2 = function(t5) {
          return m2(this, t5, true);
        };
        function b2(e5, n4) {
          if (!e5)
            return false;
          let s3 = true;
          n4 && void 0 !== n4.useG && (s3 = n4.useG);
          const i2 = n4 && n4.vh;
          let l2 = true;
          n4 && void 0 !== n4.chkDup && (l2 = n4.chkDup);
          let y3 = false;
          n4 && void 0 !== n4.rt && (y3 = n4.rt);
          let m3 = e5;
          for (; m3 && !m3.hasOwnProperty(o2); )
            m3 = r(m3);
          if (!m3 && e5[o2] && (m3 = e5), !m3 || m3[p2])
            return false;
          const b3 = n4 && n4.eventNameToString, C3 = {}, T2 = m3[p2] = m3[o2], E2 = m3[g(a2)] = m3[a2], x2 = m3[g(u2)] = m3[u2], S2 = m3[g(f2)] = m3[f2];
          let A2;
          n4 && n4.prepend && (A2 = m3[g(n4.prepend)] = m3[n4.prepend]);
          const I2 = s3 ? function(t5) {
            if (!C3.isExisting)
              return T2.call(C3.target, C3.eventName, C3.capture ? w2 : v2, C3.options);
          } : function(t5) {
            return T2.call(C3.target, C3.eventName, t5.invoke, C3.options);
          }, O2 = s3 ? function(t5) {
            if (!t5.isRemoved) {
              const e6 = M[t5.eventName];
              let n5;
              e6 && (n5 = e6[t5.capture ? c : h]);
              const r2 = n5 && t5.target[n5];
              if (r2) {
                for (let e7 = 0; e7 < r2.length; e7++)
                  if (r2[e7] === t5) {
                    r2.splice(e7, 1), t5.isRemoved = true, 0 === r2.length && (t5.allRemoved = true, t5.target[n5] = null);
                    break;
                  }
              }
            }
            if (t5.allRemoved)
              return E2.call(t5.target, t5.eventName, t5.capture ? w2 : v2, t5.options);
          } : function(t5) {
            return E2.call(t5.target, t5.eventName, t5.invoke, t5.options);
          }, D2 = n4 && n4.diff ? n4.diff : function(t5, e6) {
            const n5 = typeof e6;
            return "function" === n5 && t5.callback === e6 || "object" === n5 && t5.originalDelegate === e6;
          }, V2 = Zone[g("UNPATCHED_EVENTS")], R2 = t4[g("PASSIVE_EVENTS")], j2 = function(e6, r2, o3, a3, u3 = false, d2 = false) {
            return function() {
              const f3 = this || t4;
              let p3 = arguments[0];
              n4 && n4.transferEventName && (p3 = n4.transferEventName(p3));
              let g2 = arguments[1];
              if (!g2)
                return e6.apply(this, arguments);
              if (k && "uncaughtException" === p3)
                return e6.apply(this, arguments);
              let _3 = false;
              if ("function" != typeof g2) {
                if (!g2.handleEvent)
                  return e6.apply(this, arguments);
                _3 = true;
              }
              if (i2 && !i2(e6, g2, f3, arguments))
                return;
              const y4 = F && !!R2 && -1 !== R2.indexOf(p3), m4 = function(t5, e7) {
                return !F && "object" == typeof t5 && t5 ? !!t5.capture : F && e7 ? "boolean" == typeof t5 ? { capture: t5, passive: true } : t5 ? "object" == typeof t5 && false !== t5.passive ? Object.assign(Object.assign({}, t5), { passive: true }) : t5 : { passive: true } : t5;
              }(arguments[2], y4);
              if (V2) {
                for (let t5 = 0; t5 < V2.length; t5++)
                  if (p3 === V2[t5])
                    return y4 ? e6.call(f3, p3, g2, m4) : e6.apply(this, arguments);
              }
              const v3 = !!m4 && ("boolean" == typeof m4 || m4.capture), w3 = !(!m4 || "object" != typeof m4) && m4.once, T3 = Zone.current;
              let E3 = M[p3];
              E3 || (B(p3, b3), E3 = M[p3]);
              const x3 = E3[v3 ? c : h];
              let S3, A3 = f3[x3], I3 = false;
              if (A3) {
                if (I3 = true, l2) {
                  for (let t5 = 0; t5 < A3.length; t5++)
                    if (D2(A3[t5], g2))
                      return;
                }
              } else
                A3 = f3[x3] = [];
              const O3 = f3.constructor.name, P2 = Z[O3];
              P2 && (S3 = P2[p3]), S3 || (S3 = O3 + r2 + (b3 ? b3(p3) : p3)), C3.options = m4, w3 && (C3.options.once = false), C3.target = f3, C3.capture = v3, C3.eventName = p3, C3.isExisting = I3;
              const j3 = s3 ? H : void 0;
              j3 && (j3.taskData = C3);
              const N2 = T3.scheduleEventTask(S3, g2, j3, o3, a3);
              return C3.target = null, j3 && (j3.taskData = null), w3 && (m4.once = true), !F && "boolean" == typeof N2.options || (N2.options = m4), N2.target = f3, N2.capture = v3, N2.eventName = p3, _3 && (N2.originalDelegate = g2), d2 ? A3.unshift(N2) : A3.push(N2), u3 ? f3 : void 0;
            };
          };
          return m3[o2] = j2(T2, _2, I2, O2, y3), A2 && (m3.prependListener = j2(A2, ".prependListener:", function(t5) {
            return A2.call(C3.target, C3.eventName, t5.invoke, C3.options);
          }, O2, y3, true)), m3[a2] = function() {
            const e6 = this || t4;
            let r2 = arguments[0];
            n4 && n4.transferEventName && (r2 = n4.transferEventName(r2));
            const s4 = arguments[2], o3 = !!s4 && ("boolean" == typeof s4 || s4.capture), l3 = arguments[1];
            if (!l3)
              return E2.apply(this, arguments);
            if (i2 && !i2(E2, l3, e6, arguments))
              return;
            const a3 = M[r2];
            let u3;
            a3 && (u3 = a3[o3 ? c : h]);
            const f3 = u3 && e6[u3];
            if (f3)
              for (let t5 = 0; t5 < f3.length; t5++) {
                const n5 = f3[t5];
                if (D2(n5, l3))
                  return f3.splice(t5, 1), n5.isRemoved = true, 0 === f3.length && (n5.allRemoved = true, e6[u3] = null, "string" == typeof r2) && (e6[d + "ON_PROPERTY" + r2] = null), n5.zone.cancelTask(n5), y3 ? e6 : void 0;
              }
            return E2.apply(this, arguments);
          }, m3[u2] = function() {
            const e6 = this || t4;
            let r2 = arguments[0];
            n4 && n4.transferEventName && (r2 = n4.transferEventName(r2));
            const s4 = [], o3 = q(e6, b3 ? b3(r2) : r2);
            for (let t5 = 0; t5 < o3.length; t5++) {
              const e7 = o3[t5];
              s4.push(e7.originalDelegate ? e7.originalDelegate : e7.callback);
            }
            return s4;
          }, m3[f2] = function() {
            const e6 = this || t4;
            let r2 = arguments[0];
            if (r2) {
              n4 && n4.transferEventName && (r2 = n4.transferEventName(r2));
              const t5 = M[r2];
              if (t5) {
                const n5 = e6[t5[h]], s4 = e6[t5[c]];
                if (n5) {
                  const t6 = n5.slice();
                  for (let e7 = 0; e7 < t6.length; e7++) {
                    const n6 = t6[e7];
                    this[a2].call(this, r2, n6.originalDelegate ? n6.originalDelegate : n6.callback, n6.options);
                  }
                }
                if (s4) {
                  const t6 = s4.slice();
                  for (let e7 = 0; e7 < t6.length; e7++) {
                    const n6 = t6[e7];
                    this[a2].call(this, r2, n6.originalDelegate ? n6.originalDelegate : n6.callback, n6.options);
                  }
                }
              }
            } else {
              const t5 = Object.keys(e6);
              for (let e7 = 0; e7 < t5.length; e7++) {
                const n5 = L.exec(t5[e7]);
                let r3 = n5 && n5[1];
                r3 && "removeListener" !== r3 && this[f2].call(this, r3);
              }
              this[f2].call(this, "removeListener");
            }
            if (y3)
              return this;
          }, P(m3[o2], T2), P(m3[a2], E2), S2 && P(m3[f2], S2), x2 && P(m3[u2], x2), true;
        }
        let C2 = [];
        for (let t5 = 0; t5 < n3.length; t5++)
          C2[t5] = b2(n3[t5], s2);
        return C2;
      }
      function q(t4, e4) {
        if (!e4) {
          const n4 = [];
          for (let r3 in t4) {
            const s3 = L.exec(r3);
            let o2 = s3 && s3[1];
            if (o2 && (!e4 || o2 === e4)) {
              const e5 = t4[r3];
              if (e5)
                for (let t5 = 0; t5 < e5.length; t5++)
                  n4.push(e5[t5]);
            }
          }
          return n4;
        }
        let n3 = M[e4];
        n3 || (B(e4), n3 = M[e4]);
        const r2 = t4[n3[h]], s2 = t4[n3[c]];
        return r2 ? s2 ? r2.concat(s2) : r2.slice() : s2 ? s2.slice() : [];
      }
      function $(t4, e4) {
        const n3 = t4.Event;
        n3 && n3.prototype && e4.patchMethod(n3.prototype, "stopImmediatePropagation", (t5) => function(e5, n4) {
          e5[z] = true, t5 && t5.apply(e5, n4);
        });
      }
      function G(t4, e4, n3, r2, s2) {
        const o2 = Zone.__symbol__(r2);
        if (e4[o2])
          return;
        const i2 = e4[o2] = e4[r2];
        e4[r2] = function(o3, l2, a2) {
          return l2 && l2.prototype && s2.forEach(function(e5) {
            const s3 = `${n3}.${r2}::` + e5, o4 = l2.prototype;
            try {
              if (o4.hasOwnProperty(e5)) {
                const n4 = t4.ObjectGetOwnPropertyDescriptor(o4, e5);
                n4 && n4.value ? (n4.value = t4.wrapWithCurrentZone(n4.value, s3), t4._redefineProperty(l2.prototype, e5, n4)) : o4[e5] && (o4[e5] = t4.wrapWithCurrentZone(o4[e5], s3));
              } else
                o4[e5] && (o4[e5] = t4.wrapWithCurrentZone(o4[e5], s3));
            } catch {
            }
          }), i2.call(e4, o3, l2, a2);
        }, t4.attachOriginToPatched(e4[r2], i2);
      }
      function W(t4, e4, n3) {
        if (!n3 || 0 === n3.length)
          return e4;
        const r2 = n3.filter((e5) => e5.target === t4);
        if (!r2 || 0 === r2.length)
          return e4;
        const s2 = r2[0].ignoreProperties;
        return e4.filter((t5) => -1 === s2.indexOf(t5));
      }
      function Q(t4, e4, n3, r2) {
        t4 && A(t4, W(t4, e4, n3), r2);
      }
      function K(t4) {
        return Object.getOwnPropertyNames(t4).filter((t5) => t5.startsWith("on") && t5.length > 2).map((t5) => t5.substring(2));
      }
      Zone.__load_patch("util", (n3, r2, a2) => {
        const u2 = K(n3);
        a2.patchOnProperties = A, a2.patchMethod = D, a2.bindArguments = v, a2.patchMacroTask = V;
        const p2 = r2.__symbol__("BLACK_LISTED_EVENTS"), g2 = r2.__symbol__("UNPATCHED_EVENTS");
        n3[g2] && (n3[p2] = n3[g2]), n3[p2] && (r2[p2] = r2[g2] = n3[p2]), a2.patchEventPrototype = $, a2.patchEventTarget = U, a2.isIEOrEdge = N, a2.ObjectDefineProperty = e3, a2.ObjectGetOwnPropertyDescriptor = t3, a2.ObjectCreate = s, a2.ArraySlice = o, a2.patchClass = O, a2.wrapWithCurrentZone = f, a2.filterProperties = W, a2.attachOriginToPatched = P, a2._redefineProperty = Object.defineProperty, a2.patchCallbacks = G, a2.getGlobalObjects = () => ({ globalSources: Z, zoneSymbolEventNames: M, eventNames: u2, isBrowser: C, isMix: T, isNode: k, TRUE_STR: c, FALSE_STR: h, ZONE_SYMBOL_PREFIX: d, ADD_EVENT_LISTENER_STR: i, REMOVE_EVENT_LISTENER_STR: l });
      });
      const X = g("zoneTask");
      function J(t4, e4, n3, r2) {
        let s2 = null, o2 = null;
        n3 += r2;
        const i2 = {};
        function l2(e5) {
          const n4 = e5.data;
          return n4.args[0] = function() {
            return e5.invoke.apply(this, arguments);
          }, n4.handleId = s2.apply(t4, n4.args), e5;
        }
        function a2(e5) {
          return o2.call(t4, e5.data.handleId);
        }
        s2 = D(t4, e4 += r2, (n4) => function(s3, o3) {
          if ("function" == typeof o3[0]) {
            const t5 = { isPeriodic: "Interval" === r2, delay: "Timeout" === r2 || "Interval" === r2 ? o3[1] || 0 : void 0, args: o3 }, n5 = o3[0];
            o3[0] = function() {
              try {
                return n5.apply(this, arguments);
              } finally {
                t5.isPeriodic || ("number" == typeof t5.handleId ? delete i2[t5.handleId] : t5.handleId && (t5.handleId[X] = null));
              }
            };
            const s4 = p(e4, o3[0], t5, l2, a2);
            if (!s4)
              return s4;
            const u2 = s4.data.handleId;
            return "number" == typeof u2 ? i2[u2] = s4 : u2 && (u2[X] = s4), u2 && u2.ref && u2.unref && "function" == typeof u2.ref && "function" == typeof u2.unref && (s4.ref = u2.ref.bind(u2), s4.unref = u2.unref.bind(u2)), "number" == typeof u2 || u2 ? u2 : s4;
          }
          return n4.apply(t4, o3);
        }), o2 = D(t4, n3, (e5) => function(n4, r3) {
          const s3 = r3[0];
          let o3;
          "number" == typeof s3 ? o3 = i2[s3] : (o3 = s3 && s3[X], o3 || (o3 = s3)), o3 && "string" == typeof o3.type ? "notScheduled" !== o3.state && (o3.cancelFn && o3.data.isPeriodic || 0 === o3.runCount) && ("number" == typeof s3 ? delete i2[s3] : s3 && (s3[X] = null), o3.zone.cancelTask(o3)) : e5.apply(t4, r3);
        });
      }
      Zone.__load_patch("legacy", (t4) => {
        const e4 = t4[Zone.__symbol__("legacyPatch")];
        e4 && e4();
      }), Zone.__load_patch("queueMicrotask", (t4, e4, n3) => {
        n3.patchMethod(t4, "queueMicrotask", (t5) => function(t6, n4) {
          e4.current.scheduleMicroTask("queueMicrotask", n4[0]);
        });
      }), Zone.__load_patch("timers", (t4) => {
        const e4 = "set", n3 = "clear";
        J(t4, e4, n3, "Timeout"), J(t4, e4, n3, "Interval"), J(t4, e4, n3, "Immediate");
      }), Zone.__load_patch("requestAnimationFrame", (t4) => {
        J(t4, "request", "cancel", "AnimationFrame"), J(t4, "mozRequest", "mozCancel", "AnimationFrame"), J(t4, "webkitRequest", "webkitCancel", "AnimationFrame");
      }), Zone.__load_patch("blocking", (t4, e4) => {
        const n3 = ["alert", "prompt", "confirm"];
        for (let r2 = 0; r2 < n3.length; r2++)
          D(t4, n3[r2], (n4, r3, s2) => function(r4, o2) {
            return e4.current.run(n4, t4, o2, s2);
          });
      }), Zone.__load_patch("EventTarget", (t4, e4, n3) => {
        (function(t5, e5) {
          e5.patchEventPrototype(t5, e5);
        })(t4, n3), function(t5, e5) {
          if (Zone[e5.symbol("patchEventTarget")])
            return;
          const { eventNames: n4, zoneSymbolEventNames: r3, TRUE_STR: s2, FALSE_STR: o2, ZONE_SYMBOL_PREFIX: i2 } = e5.getGlobalObjects();
          for (let t6 = 0; t6 < n4.length; t6++) {
            const e6 = n4[t6], l3 = i2 + (e6 + o2), a2 = i2 + (e6 + s2);
            r3[e6] = {}, r3[e6][o2] = l3, r3[e6][s2] = a2;
          }
          const l2 = t5.EventTarget;
          l2 && l2.prototype && e5.patchEventTarget(t5, e5, [l2 && l2.prototype]);
        }(t4, n3);
        const r2 = t4.XMLHttpRequestEventTarget;
        r2 && r2.prototype && n3.patchEventTarget(t4, n3, [r2.prototype]);
      }), Zone.__load_patch("MutationObserver", (t4, e4, n3) => {
        O("MutationObserver"), O("WebKitMutationObserver");
      }), Zone.__load_patch("IntersectionObserver", (t4, e4, n3) => {
        O("IntersectionObserver");
      }), Zone.__load_patch("FileReader", (t4, e4, n3) => {
        O("FileReader");
      }), Zone.__load_patch("on_property", (t4, e4, n3) => {
        !function(t5, e5) {
          if (k && !T || Zone[t5.symbol("patchEvents")])
            return;
          const n4 = e5.__Zone_ignore_on_properties;
          let s2 = [];
          if (C) {
            const t6 = window;
            s2 = s2.concat(["Document", "SVGElement", "Element", "HTMLElement", "HTMLBodyElement", "HTMLMediaElement", "HTMLFrameSetElement", "HTMLFrameElement", "HTMLIFrameElement", "HTMLMarqueeElement", "Worker"]);
            const e6 = function() {
              try {
                const t7 = y.navigator.userAgent;
                if (-1 !== t7.indexOf("MSIE ") || -1 !== t7.indexOf("Trident/"))
                  return true;
              } catch {
              }
              return false;
            }() ? [{ target: t6, ignoreProperties: ["error"] }] : [];
            Q(t6, K(t6), n4 && n4.concat(e6), r(t6));
          }
          s2 = s2.concat(["XMLHttpRequest", "XMLHttpRequestEventTarget", "IDBIndex", "IDBRequest", "IDBOpenDBRequest", "IDBDatabase", "IDBTransaction", "IDBCursor", "WebSocket"]);
          for (let t6 = 0; t6 < s2.length; t6++) {
            const r2 = e5[s2[t6]];
            r2 && r2.prototype && Q(r2.prototype, K(r2.prototype), n4);
          }
        }(n3, t4);
      }), Zone.__load_patch("customElements", (t4, e4, n3) => {
        !function(t5, e5) {
          const { isBrowser: n4, isMix: r2 } = e5.getGlobalObjects();
          (n4 || r2) && t5.customElements && "customElements" in t5 && e5.patchCallbacks(e5, t5.customElements, "customElements", "define", ["connectedCallback", "disconnectedCallback", "adoptedCallback", "attributeChangedCallback"]);
        }(t4, n3);
      }), Zone.__load_patch("XHR", (t4, e4) => {
        !function(t5) {
          const c2 = t5.XMLHttpRequest;
          if (!c2)
            return;
          const h2 = c2.prototype;
          let d2 = h2[a], f2 = h2[u];
          if (!d2) {
            const e5 = t5.XMLHttpRequestEventTarget;
            if (e5) {
              const t6 = e5.prototype;
              d2 = t6[a], f2 = t6[u];
            }
          }
          const _2 = "readystatechange", y2 = "scheduled";
          function m2(t6) {
            const r3 = t6.data, i3 = r3.target;
            i3[o2] = false, i3[l2] = false;
            const c3 = i3[s2];
            d2 || (d2 = i3[a], f2 = i3[u]), c3 && f2.call(i3, _2, c3);
            const h3 = i3[s2] = () => {
              if (i3.readyState === i3.DONE)
                if (!r3.aborted && i3[o2] && t6.state === y2) {
                  const n4 = i3[e4.__symbol__("loadfalse")];
                  if (0 !== i3.status && n4 && n4.length > 0) {
                    const s3 = t6.invoke;
                    t6.invoke = function() {
                      const n5 = i3[e4.__symbol__("loadfalse")];
                      for (let e5 = 0; e5 < n5.length; e5++)
                        n5[e5] === t6 && n5.splice(e5, 1);
                      !r3.aborted && t6.state === y2 && s3.call(t6);
                    }, n4.push(t6);
                  } else
                    t6.invoke();
                } else
                  !r3.aborted && false === i3[o2] && (i3[l2] = true);
            };
            return d2.call(i3, _2, h3), i3[n3] || (i3[n3] = t6), T2.apply(i3, r3.args), i3[o2] = true, t6;
          }
          function v2() {
          }
          function w2(t6) {
            const e5 = t6.data;
            return e5.aborted = true, E2.apply(e5.target, e5.args);
          }
          const b2 = D(h2, "open", () => function(t6, e5) {
            return t6[r2] = 0 == e5[2], t6[i2] = e5[1], b2.apply(t6, e5);
          }), k2 = g("fetchTaskAborting"), C2 = g("fetchTaskScheduling"), T2 = D(h2, "send", () => function(t6, n4) {
            if (true === e4.current[C2] || t6[r2])
              return T2.apply(t6, n4);
            {
              const e5 = { target: t6, url: t6[i2], isPeriodic: false, args: n4, aborted: false }, r3 = p("XMLHttpRequest.send", v2, e5, m2, w2);
              t6 && true === t6[l2] && !e5.aborted && r3.state === y2 && r3.invoke();
            }
          }), E2 = D(h2, "abort", () => function(t6, r3) {
            const s3 = function(t7) {
              return t7[n3];
            }(t6);
            if (s3 && "string" == typeof s3.type) {
              if (null == s3.cancelFn || s3.data && s3.data.aborted)
                return;
              s3.zone.cancelTask(s3);
            } else if (true === e4.current[k2])
              return E2.apply(t6, r3);
          });
        }(t4);
        const n3 = g("xhrTask"), r2 = g("xhrSync"), s2 = g("xhrListener"), o2 = g("xhrScheduled"), i2 = g("xhrURL"), l2 = g("xhrErrorBeforeScheduled");
      }), Zone.__load_patch("geolocation", (e4) => {
        e4.navigator && e4.navigator.geolocation && function(e5, n3) {
          const r2 = e5.constructor.name;
          for (let s2 = 0; s2 < n3.length; s2++) {
            const o2 = n3[s2], i2 = e5[o2];
            if (i2) {
              if (!w(t3(e5, o2)))
                continue;
              e5[o2] = ((t4) => {
                const e6 = function() {
                  return t4.apply(this, v(arguments, r2 + "." + o2));
                };
                return P(e6, t4), e6;
              })(i2);
            }
          }
        }(e4.navigator.geolocation, ["getCurrentPosition", "watchPosition"]);
      }), Zone.__load_patch("PromiseRejectionEvent", (t4, e4) => {
        function n3(e5) {
          return function(n4) {
            q(t4, e5).forEach((r2) => {
              const s2 = t4.PromiseRejectionEvent;
              if (s2) {
                const t5 = new s2(e5, { promise: n4.promise, reason: n4.rejection });
                r2.invoke(t5);
              }
            });
          };
        }
        t4.PromiseRejectionEvent && (e4[g("unhandledPromiseRejectionHandler")] = n3("unhandledrejection"), e4[g("rejectionHandledHandler")] = n3("rejectionhandled"));
      });
    } }, (t3) => {
      t3(t3.s = 692);
    }]);
  }, 22: () => {
    (() => {
      "use strict";
      var t2, e2 = {}, n2 = {};
      function r(t3) {
        var s = n2[t3];
        if (void 0 !== s)
          return s.exports;
        var o = n2[t3] = { exports: {} };
        return e2[t3](o, o.exports, r), o.exports;
      }
      r.m = e2, t2 = [], r.O = (e3, n3, s, o) => {
        if (!n3) {
          var i = 1 / 0;
          for (c = 0; c < t2.length; c++) {
            for (var [n3, s, o] = t2[c], l = true, a = 0; a < n3.length; a++)
              (false & o || i >= o) && Object.keys(r.O).every((t3) => r.O[t3](n3[a])) ? n3.splice(a--, 1) : (l = false, o < i && (i = o));
            if (l) {
              t2.splice(c--, 1);
              var u = s();
              void 0 !== u && (e3 = u);
            }
          }
          return e3;
        }
        o = o || 0;
        for (var c = t2.length; c > 0 && t2[c - 1][2] > o; c--)
          t2[c] = t2[c - 1];
        t2[c] = [n3, s, o];
      }, r.n = (t3) => {
        var e3 = t3 && t3.__esModule ? () => t3.default : () => t3;
        return r.d(e3, { a: e3 }), e3;
      }, r.d = (t3, e3) => {
        for (var n3 in e3)
          r.o(e3, n3) && !r.o(t3, n3) && Object.defineProperty(t3, n3, { enumerable: true, get: e3[n3] });
      }, r.o = (t3, e3) => Object.prototype.hasOwnProperty.call(t3, e3), (() => {
        var t3 = { 666: 0 };
        r.O.j = (e4) => 0 === t3[e4];
        var e3 = (e4, n4) => {
          var s, o, [i, l, a] = n4, u = 0;
          if (i.some((e5) => 0 !== t3[e5])) {
            for (s in l)
              r.o(l, s) && (r.m[s] = l[s]);
            if (a)
              var c = a(r);
          }
          for (e4 && e4(n4); u < i.length; u++)
            r.o(t3, o = i[u]) && t3[o] && t3[o][0](), t3[o] = 0;
          return r.O(c);
        }, n3 = self.webpackChunkhtf = self.webpackChunkhtf || [];
        n3.forEach(e3.bind(null, 0)), n3.push = e3.bind(null, n3.push.bind(n3));
      })();
    })();
  } }, e = {};
  function n(r) {
    var s = e[r];
    if (void 0 !== s)
      return s.exports;
    var o = e[r] = { exports: {} };
    return t[r](o, o.exports, n), o.exports;
  }
  n.n = (t2) => {
    var e2 = t2 && t2.__esModule ? () => t2.default : () => t2;
    return n.d(e2, { a: e2 }), e2;
  }, n.d = (t2, e2) => {
    for (var r in e2)
      n.o(e2, r) && !n.o(t2, r) && Object.defineProperty(t2, r, { enumerable: true, get: e2[r] });
  }, n.g = function() {
    if ("object" == typeof globalThis)
      return globalThis;
    try {
      return this || new Function("return this")();
    } catch (t2) {
      if ("object" == typeof window)
        return window;
    }
  }(), n.o = (t2, e2) => Object.prototype.hasOwnProperty.call(t2, e2), (() => {
    "use strict";
    n(22), n(972), n(911);
  })();
})();
//# sourceMappingURL=htf-component.js.map
